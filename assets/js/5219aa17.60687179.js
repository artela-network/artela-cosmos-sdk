"use strict";(self.webpackChunkcosmos_sdk_docs=self.webpackChunkcosmos_sdk_docs||[]).push([[5118],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=n.createContext({}),i=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=i(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),u=i(a),c=o,k=u["".concat(p,".").concat(c)]||u[c]||m[c]||l;return a?n.createElement(k,s(s({ref:t},d),{},{components:a})):n.createElement(k,s({ref:t},d))}));function c(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=a.length,s=new Array(l);s[0]=u;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r.mdxType="string"==typeof e?e:o,s[1]=r;for(var i=2;i<l;i++)s[i]=a[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},38084:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>i});var n=a(87462),o=(a(67294),a(3905));const l={sidebar_position:1},s="x/gov",r={unversionedId:"modules/gov/README",id:"modules/gov/README",title:"x/gov",description:"Abstract",source:"@site/docs/modules/gov/README.md",sourceDirName:"modules/gov",slug:"/modules/gov/",permalink:"/main/modules/gov/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"x/feegrant",permalink:"/main/modules/feegrant/"},next:{title:"x/group",permalink:"/main/modules/group/"}},p={},i=[{value:"Abstract",id:"abstract",level:2},{value:"Contents",id:"contents",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Proposal submission",id:"proposal-submission",level:3},{value:"Right to submit a proposal",id:"right-to-submit-a-proposal",level:4},{value:"Proposal Messages",id:"proposal-messages",level:4},{value:"Deposit",id:"deposit",level:3},{value:"Deposit refund and burn",id:"deposit-refund-and-burn",level:4},{value:"Vote",id:"vote",level:3},{value:"Participants",id:"participants",level:4},{value:"Voting period",id:"voting-period",level:4},{value:"Option set",id:"option-set",level:4},{value:"Weighted Votes",id:"weighted-votes",level:4},{value:"Quorum",id:"quorum",level:3},{value:"Expedited Proposals",id:"expedited-proposals",level:3},{value:"Threshold",id:"threshold",level:4},{value:"Inheritance",id:"inheritance",level:4},{value:"Validator\u2019s punishment for non-voting",id:"validators-punishment-for-non-voting",level:4},{value:"Governance address",id:"governance-address",level:4},{value:"Burnable Params",id:"burnable-params",level:4},{value:"State",id:"state",level:2},{value:"Constitution",id:"constitution",level:3},{value:"Proposals",id:"proposals",level:3},{value:"Writing a module that uses governance",id:"writing-a-module-that-uses-governance",level:4},{value:"Parameters and base types",id:"parameters-and-base-types",level:3},{value:"DepositParams",id:"depositparams",level:4},{value:"VotingParams",id:"votingparams",level:4},{value:"TallyParams",id:"tallyparams",level:4},{value:"Deposit",id:"deposit-1",level:3},{value:"ValidatorGovInfo",id:"validatorgovinfo",level:3},{value:"Stores",id:"stores",level:2},{value:"Proposal Processing Queue",id:"proposal-processing-queue",level:3},{value:"Legacy Proposal",id:"legacy-proposal",level:3},{value:"Messages",id:"messages",level:2},{value:"Proposal Submission",id:"proposal-submission-1",level:3},{value:"Deposit",id:"deposit-2",level:3},{value:"Vote",id:"vote-1",level:3},{value:"Events",id:"events",level:2},{value:"EndBlocker",id:"endblocker",level:3},{value:"Handlers",id:"handlers",level:3},{value:"MsgSubmitProposal",id:"msgsubmitproposal",level:4},{value:"MsgVote",id:"msgvote",level:4},{value:"MsgVoteWeighted",id:"msgvoteweighted",level:4},{value:"MsgDeposit",id:"msgdeposit",level:4},{value:"Parameters",id:"parameters",level:2},{value:"Client",id:"client",level:2},{value:"CLI",id:"cli",level:3},{value:"Query",id:"query",level:4},{value:"deposit",id:"deposit-3",level:5},{value:"deposits",id:"deposits",level:5},{value:"param",id:"param",level:5},{value:"params",id:"params",level:5},{value:"proposal",id:"proposal",level:5},{value:"proposals",id:"proposals-1",level:5},{value:"proposer",id:"proposer",level:5},{value:"tally",id:"tally",level:5},{value:"vote",id:"vote-2",level:5},{value:"votes",id:"votes",level:5},{value:"Transactions",id:"transactions",level:4},{value:"deposit",id:"deposit-4",level:5},{value:"draft-proposal",id:"draft-proposal",level:5},{value:"submit-proposal",id:"submit-proposal",level:5},{value:"submit-legacy-proposal",id:"submit-legacy-proposal",level:5},{value:"cancel-proposal",id:"cancel-proposal",level:4},{value:"vote",id:"vote-3",level:5},{value:"weighted-vote",id:"weighted-vote",level:5},{value:"gRPC",id:"grpc",level:3},{value:"Proposal",id:"proposal-1",level:4},{value:"Proposals",id:"proposals-2",level:4},{value:"Vote",id:"vote-4",level:4},{value:"Votes",id:"votes-1",level:4},{value:"Params",id:"params-1",level:4},{value:"Deposit",id:"deposit-5",level:4},{value:"deposits",id:"deposits-1",level:4},{value:"TallyResult",id:"tallyresult",level:4},{value:"REST",id:"rest",level:3},{value:"proposal",id:"proposal-2",level:4},{value:"proposals",id:"proposals-3",level:4},{value:"voter vote",id:"voter-vote",level:4},{value:"votes",id:"votes-2",level:4},{value:"params",id:"params-2",level:4},{value:"deposits",id:"deposits-2",level:4},{value:"proposal deposits",id:"proposal-deposits",level:4},{value:"tally",id:"tally-1",level:4},{value:"Metadata",id:"metadata",level:2},{value:"Proposal",id:"proposal-3",level:3},{value:"Vote",id:"vote-5",level:3},{value:"Future Improvements",id:"future-improvements",level:2}],d={toc:i};function m(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"xgov"},(0,o.kt)("inlineCode",{parentName:"h1"},"x/gov")),(0,o.kt)("h2",{id:"abstract"},"Abstract"),(0,o.kt)("p",null,"This paper specifies the Governance module of the Cosmos SDK, which was first\ndescribed in the ",(0,o.kt)("a",{parentName:"p",href:"https://cosmos.network/about/whitepaper"},"Cosmos Whitepaper")," in\nJune 2016."),(0,o.kt)("p",null,"The module enables Cosmos SDK based blockchain to support an on-chain governance\nsystem. In this system, holders of the native staking token of the chain can vote\non proposals on a 1 token 1 vote basis. Next is a list of features the module\ncurrently supports:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Proposal submission:")," Users can submit proposals with a deposit. Once the\nminimum deposit is reached, the proposal enters voting period. The minimum deposit can be reached by collecting deposits from different users (including proposer) within deposit period."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Vote:")," Participants can vote on proposals that reached MinDeposit and entered voting period."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Inheritance and penalties:")," Delegators inherit their validator's vote if\nthey don't vote themselves."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Claiming deposit:")," Users that deposited on proposals can recover their\ndeposits if the proposal was accepted or rejected. If the proposal was vetoed, or never entered voting period (minimum deposit not reached within deposit period), the deposit is burned.")),(0,o.kt)("p",null,"This module is in use on the Cosmos Hub (a.k.a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cosmos/gaia"},"gaia"),").\nFeatures that may be added in the future are described in ",(0,o.kt)("a",{parentName:"p",href:"#future-improvements"},"Future Improvements"),"."),(0,o.kt)("h2",{id:"contents"},"Contents"),(0,o.kt)("p",null,"The following specification uses ",(0,o.kt)("em",{parentName:"p"},"ATOM")," as the native staking token. The module\ncan be adapted to any Proof-Of-Stake blockchain by replacing ",(0,o.kt)("em",{parentName:"p"},"ATOM")," with the native\nstaking token of the chain."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#concepts"},"Concepts"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#proposal-submission"},"Proposal submission")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#deposit"},"Deposit")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#vote"},"Vote")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#software-upgrade"},"Software Upgrade")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#state"},"State"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#proposals"},"Proposals")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#parameters-and-base-types"},"Parameters and base types")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#deposit-1"},"Deposit")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#validatorgovinfo"},"ValidatorGovInfo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#stores"},"Stores")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#proposal-processing-queue"},"Proposal Processing Queue")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#legacy-proposal"},"Legacy Proposal")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#messages"},"Messages"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#proposal-submission-1"},"Proposal Submission")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#deposit-2"},"Deposit")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#vote-1"},"Vote")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#events"},"Events"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#endblocker"},"EndBlocker")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#handlers"},"Handlers")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#parameters"},"Parameters")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#client"},"Client"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#cli"},"CLI")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#grpc"},"gRPC")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#rest"},"REST")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#metadata"},"Metadata"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#proposal-3"},"Proposal")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#vote-5"},"Vote")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#future-improvements"},"Future Improvements"))),(0,o.kt)("h2",{id:"concepts"},"Concepts"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Disclaimer: This is work in progress. Mechanisms are susceptible to change.")),(0,o.kt)("p",null,"The governance process is divided in a few steps that are outlined below:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Proposal submission:")," Proposal is submitted to the blockchain with a\ndeposit."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Vote:")," Once deposit reaches a certain value (",(0,o.kt)("inlineCode",{parentName:"li"},"MinDeposit"),"), proposal is\nconfirmed and vote opens. Bonded Atom holders can then send ",(0,o.kt)("inlineCode",{parentName:"li"},"TxGovVote"),"\ntransactions to vote on the proposal."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Execution")," After a period of time, the votes are tallied and depending\non the result, the messages in the proposal will be executed.")),(0,o.kt)("h3",{id:"proposal-submission"},"Proposal submission"),(0,o.kt)("h4",{id:"right-to-submit-a-proposal"},"Right to submit a proposal"),(0,o.kt)("p",null,"Every account can submit proposals by sending a ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgSubmitProposal")," transaction.\nOnce a proposal is submitted, it is identified by its unique ",(0,o.kt)("inlineCode",{parentName:"p"},"proposalID"),"."),(0,o.kt)("h4",{id:"proposal-messages"},"Proposal Messages"),(0,o.kt)("p",null,"A proposal includes an array of ",(0,o.kt)("inlineCode",{parentName:"p"},"sdk.Msg"),"s which are executed automatically if the\nproposal passes. The messages are executed by the governance ",(0,o.kt)("inlineCode",{parentName:"p"},"ModuleAccount")," itself. Modules\nsuch as ",(0,o.kt)("inlineCode",{parentName:"p"},"x/upgrade"),", that want to allow certain messages to be executed by governance\nonly should add a whitelist within the respective msg server, granting the governance\nmodule the right to execute the message once a quorum has been reached. The governance\nmodule uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgServiceRouter")," to check that these messages are correctly constructed\nand have a respective path to execute on but do not perform a full validity check."),(0,o.kt)("h3",{id:"deposit"},"Deposit"),(0,o.kt)("p",null,"To prevent spam, proposals must be submitted with a deposit in the coins defined by\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"MinDeposit")," param."),(0,o.kt)("p",null,"When a proposal is submitted, it has to be accompanied with a deposit that must be\nstrictly positive, but can be inferior to ",(0,o.kt)("inlineCode",{parentName:"p"},"MinDeposit"),". The submitter doesn't need\nto pay for the entire deposit on their own. The newly created proposal is stored in\nan ",(0,o.kt)("em",{parentName:"p"},"inactive proposal queue")," and stays there until its deposit passes the ",(0,o.kt)("inlineCode",{parentName:"p"},"MinDeposit"),".\nOther token holders can increase the proposal's deposit by sending a ",(0,o.kt)("inlineCode",{parentName:"p"},"Deposit"),"\ntransaction. If a proposal doesn't pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"MinDeposit")," before the deposit end time\n(the time when deposits are no longer accepted), the proposal will be destroyed: the\nproposal will be removed from state and the deposit will be burned (see x/gov ",(0,o.kt)("inlineCode",{parentName:"p"},"EndBlocker"),").\nWhen a proposal deposit passes the ",(0,o.kt)("inlineCode",{parentName:"p"},"MinDeposit")," threshold (even during the proposal\nsubmission) before the deposit end time, the proposal will be moved into the\n",(0,o.kt)("em",{parentName:"p"},"active proposal queue")," and the voting period will begin."),(0,o.kt)("p",null,"The deposit is kept in escrow and held by the governance ",(0,o.kt)("inlineCode",{parentName:"p"},"ModuleAccount")," until the\nproposal is finalized (passed or rejected)."),(0,o.kt)("h4",{id:"deposit-refund-and-burn"},"Deposit refund and burn"),(0,o.kt)("p",null,"When a proposal is finalized, the coins from the deposit are either refunded or burned\naccording to the final tally of the proposal:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If the proposal is approved or rejected but ",(0,o.kt)("em",{parentName:"li"},"not")," vetoed, each deposit will be\nautomatically refunded to its respective depositor (transferred from the governance\n",(0,o.kt)("inlineCode",{parentName:"li"},"ModuleAccount"),")."),(0,o.kt)("li",{parentName:"ul"},"When the proposal is vetoed with greater than 1/3, deposits will be burned from the\ngovernance ",(0,o.kt)("inlineCode",{parentName:"li"},"ModuleAccount")," and the proposal information along with its deposit\ninformation will be removed from state."),(0,o.kt)("li",{parentName:"ul"},"All refunded or burned deposits are removed from the state. Events are issued when\nburning or refunding a deposit.")),(0,o.kt)("h3",{id:"vote"},"Vote"),(0,o.kt)("h4",{id:"participants"},"Participants"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Participants")," are users that have the right to vote on proposals. On the\nCosmos Hub, participants are bonded Atom holders. Unbonded Atom holders and\nother users do not get the right to participate in governance. However, they\ncan submit and deposit on proposals."),(0,o.kt)("p",null,"Note that when ",(0,o.kt)("em",{parentName:"p"},"participants")," have bonded and unbonded Atoms, their voting power is calculated from their bonded Atom holdings only."),(0,o.kt)("h4",{id:"voting-period"},"Voting period"),(0,o.kt)("p",null,"Once a proposal reaches ",(0,o.kt)("inlineCode",{parentName:"p"},"MinDeposit"),", it immediately enters ",(0,o.kt)("inlineCode",{parentName:"p"},"Voting period"),". We\ndefine ",(0,o.kt)("inlineCode",{parentName:"p"},"Voting period")," as the interval between the moment the vote opens and\nthe moment the vote closes. The initial value of ",(0,o.kt)("inlineCode",{parentName:"p"},"Voting period")," is 2 weeks."),(0,o.kt)("h4",{id:"option-set"},"Option set"),(0,o.kt)("p",null,"The option set of a proposal refers to the set of choices a participant can\nchoose from when casting its vote."),(0,o.kt)("p",null,"The initial option set includes the following options:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Yes")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"No")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"NoWithVeto")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Abstain"))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"NoWithVeto")," counts as ",(0,o.kt)("inlineCode",{parentName:"p"},"No")," but also adds a ",(0,o.kt)("inlineCode",{parentName:"p"},"Veto")," vote. ",(0,o.kt)("inlineCode",{parentName:"p"},"Abstain")," option\nallows voters to signal that they do not intend to vote in favor or against the\nproposal but accept the result of the vote."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Note: from the UI, for urgent proposals we should maybe add a \u2018Not Urgent\u2019 option that casts a ",(0,o.kt)("inlineCode",{parentName:"em"},"NoWithVeto")," vote.")),(0,o.kt)("h4",{id:"weighted-votes"},"Weighted Votes"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-037-gov-split-vote.md"},"ADR-037")," introduces the weighted vote feature which allows a staker to split their votes into several voting options. For example, it could use 70% of its voting power to vote Yes and 30% of its voting power to vote No."),(0,o.kt)("p",null,'Often times the entity owning that address might not be a single individual. For example, a company might have different stakeholders who want to vote differently, and so it makes sense to allow them to split their voting power. Currently, it is not possible for them to do "passthrough voting" and giving their users voting rights over their tokens. However, with this system, exchanges can poll their users for voting preferences, and then vote on-chain proportionally to the results of the poll.'),(0,o.kt)("p",null,"To represent weighted vote on chain, we use the following Protobuf message."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/gov/v1beta1/gov.proto#L34-L47\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/gov/v1beta1/gov.proto#L181-L201\n")),(0,o.kt)("p",null,"For a weighted vote to be valid, the ",(0,o.kt)("inlineCode",{parentName:"p"},"options")," field must not contain duplicate vote options, and the sum of weights of all options must be equal to 1."),(0,o.kt)("h3",{id:"quorum"},"Quorum"),(0,o.kt)("p",null,"Quorum is defined as the minimum percentage of voting power that needs to be\ncast on a proposal for the result to be valid."),(0,o.kt)("h3",{id:"expedited-proposals"},"Expedited Proposals"),(0,o.kt)("p",null,"A proposal can be expedited, making the proposal use shorter voting duration and a higher tally threshold by its default. If an expedited proposal fails to meet the threshold within the scope of shorter voting duration, the expedited proposal is then converted to a regular proposal and restarts voting under regular voting conditions."),(0,o.kt)("h4",{id:"threshold"},"Threshold"),(0,o.kt)("p",null,"Threshold is defined as the minimum proportion of ",(0,o.kt)("inlineCode",{parentName:"p"},"Yes")," votes (excluding\n",(0,o.kt)("inlineCode",{parentName:"p"},"Abstain")," votes) for the proposal to be accepted."),(0,o.kt)("p",null,"Initially, the threshold is set at 50% of ",(0,o.kt)("inlineCode",{parentName:"p"},"Yes")," votes, excluding ",(0,o.kt)("inlineCode",{parentName:"p"},"Abstain"),"\nvotes. A possibility to veto exists if more than 1/3rd of all votes are\n",(0,o.kt)("inlineCode",{parentName:"p"},"NoWithVeto")," votes.  Note, both of these values are derived from the ",(0,o.kt)("inlineCode",{parentName:"p"},"TallyParams"),"\non-chain parameter, which is modifiable by governance.\nThis means that proposals are accepted iff:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"There exist bonded tokens."),(0,o.kt)("li",{parentName:"ul"},"Quorum has been achieved."),(0,o.kt)("li",{parentName:"ul"},"The proportion of ",(0,o.kt)("inlineCode",{parentName:"li"},"Abstain")," votes is inferior to 1/1."),(0,o.kt)("li",{parentName:"ul"},"The proportion of ",(0,o.kt)("inlineCode",{parentName:"li"},"NoWithVeto")," votes is inferior to 1/3, including\n",(0,o.kt)("inlineCode",{parentName:"li"},"Abstain")," votes."),(0,o.kt)("li",{parentName:"ul"},"The proportion of ",(0,o.kt)("inlineCode",{parentName:"li"},"Yes")," votes, excluding ",(0,o.kt)("inlineCode",{parentName:"li"},"Abstain")," votes, at the end of\nthe voting period is superior to 1/2.")),(0,o.kt)("p",null,"For expedited proposals, by default, the threshold is higher than with a ",(0,o.kt)("em",{parentName:"p"},"normal proposal"),", namely, 66.7%."),(0,o.kt)("h4",{id:"inheritance"},"Inheritance"),(0,o.kt)("p",null,"If a delegator does not vote, it will inherit its validator vote."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If the delegator votes before its validator, it will not inherit from the\nvalidator's vote."),(0,o.kt)("li",{parentName:"ul"},"If the delegator votes after its validator, it will override its validator\nvote with its own. If the proposal is urgent, it is possible\nthat the vote will close before delegators have a chance to react and\noverride their validator's vote. This is not a problem, as proposals require more than 2/3rd of the total voting power to pass, when tallied at the end of the voting period. Because as little as 1/3 + 1 validation power could collude to censor transactions, non-collusion is already assumed for ranges exceeding this threshold.")),(0,o.kt)("h4",{id:"validators-punishment-for-non-voting"},"Validator\u2019s punishment for non-voting"),(0,o.kt)("p",null,"At present, validators are not punished for failing to vote."),(0,o.kt)("h4",{id:"governance-address"},"Governance address"),(0,o.kt)("p",null,"Later, we may add permissioned keys that could only sign txs from certain modules. For the MVP, the ",(0,o.kt)("inlineCode",{parentName:"p"},"Governance address")," will be the main validator address generated at account creation. This address corresponds to a different PrivKey than the CometBFT PrivKey which is responsible for signing consensus messages. Validators thus do not have to sign governance transactions with the sensitive CometBFT PrivKey."),(0,o.kt)("h4",{id:"burnable-params"},"Burnable Params"),(0,o.kt)("p",null,"There are three parameters that define if the deposit of a proposal should be burned or returned to the depositors. "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BurnVoteVeto")," burns the proposal deposit if the proposal gets vetoed. "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BurnVoteQuorum")," burns the proposal deposit if the proposal deposit if the vote does not reach quorum."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BurnProposalDepositPrevote")," burns the proposal deposit if it does not enter the voting phase. ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: These parameters are modifiable via governance. ")),(0,o.kt)("h2",{id:"state"},"State"),(0,o.kt)("h3",{id:"constitution"},"Constitution"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Constitution")," is found in the genesis state.  It is a string field intended to be used to descibe the purpose of a particular blockchain, and its expected norms.  A few examples of how the constitution field can be used:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"define the purpose of the chain, laying a foundation for its future development"),(0,o.kt)("li",{parentName:"ul"},"set expectations for delegators"),(0,o.kt)("li",{parentName:"ul"},"set expectations for validators"),(0,o.kt)("li",{parentName:"ul"},'define the chain\'s relationship to "meatspace" entities, like a foundation or corporation')),(0,o.kt)("p",null,"Since this is more of a social feature than a technical feature, we'll now get into some items that may have been useful to have in a genesis constitution:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"What limitations on governance exist, if any?",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"is it okay for the community to slash the wallet of a whale that they no longer feel that they want around? (viz: Juno Proposal 4 and 16)"),(0,o.kt)("li",{parentName:"ul"},'can governance "socially slash" a validator who is using unapproved MEV? (viz: commonwealth.im/osmosis)'),(0,o.kt)("li",{parentName:"ul"},"In the event of an economic emergency, what should validators do?",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Terra crash of May, 2022, saw validators choose to run a new binary with code that had not been approved by governance, because the governance token had been inflated to nothing."))))),(0,o.kt)("li",{parentName:"ul"},"What is the purpose of the chain, specifically?",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"best example of this is the Cosmos hub, where different founding groups, have different interpertations of the purpose of the network.")))),(0,o.kt)("p",null,'This genesis entry, "constitution" hasn\'t been designed for existing chains, who should likely just ratify a constitution using their governance system.  Instead, this is for new chains.  It will allow for validators to have a much clearer idea of purpose and the expecations placed on them while operating thier nodes.  Likewise, for community members, the constitution will give them some idea of what to expect from both the "chain team" and the validators, respectively.'),(0,o.kt)("p",null,'This constitution is designed to be immutable, and placed only in genesis, though that could change over time by a pull request to the cosmos-sdk that allows for the constitution to be changed by governance.  Communities whishing to make amendments to their original constitution should use the governance mechanism and a "signaling proposal" to do exactly that.'),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Ideal use scenario for a cosmos chain constitution")),(0,o.kt)("p",null,"As a chain developer, you decide that you'd like to provide clarity to your key user groups:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"validators"),(0,o.kt)("li",{parentName:"ul"},"token holders"),(0,o.kt)("li",{parentName:"ul"},"developers (yourself)")),(0,o.kt)("p",null,"You use the constitution to immutably store some Markdown in genesis, so that when difficult questions come up, the constutituon can provide guidance to the community."),(0,o.kt)("h3",{id:"proposals"},"Proposals"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Proposal")," objects are used to tally votes and generally track the proposal's state.\nThey contain an array of arbitrary ",(0,o.kt)("inlineCode",{parentName:"p"},"sdk.Msg"),"'s which the governance module will attempt\nto resolve and then execute if the proposal passes. ",(0,o.kt)("inlineCode",{parentName:"p"},"Proposal"),"'s are identified by a\nunique id and contains a series of timestamps: ",(0,o.kt)("inlineCode",{parentName:"p"},"submit_time"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"deposit_end_time"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"voting_start_time"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"voting_end_time")," which track the lifecycle of a proposal"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/gov/v1/gov.proto#L51-L99\n")),(0,o.kt)("p",null,"A proposal will generally require more than just a set of messages to explain its\npurpose but need some greater justification and allow a means for interested participants\nto discuss and debate the proposal.\nIn most cases, ",(0,o.kt)("strong",{parentName:"p"},"it is encouraged to have an off-chain system that supports the on-chain governance process"),".\nTo accommodate for this, a proposal contains a special ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"metadata"))," field, a string,\nwhich can be used to add context to the proposal. The ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata")," field allows custom use for networks,\nhowever, it is expected that the field contains a URL or some form of CID using a system such as\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.ipfs.io/concepts/content-addressing/"},"IPFS"),". To support the case of\ninteroperability across networks, the SDK recommends that the ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata")," represents\nthe following ",(0,o.kt)("inlineCode",{parentName:"p"},"JSON")," template:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "...",\n  "description": "...",\n  "forum": "...", // a link to the discussion platform (i.e. Discord)\n  "other": "..." // any extra data that doesn\'t correspond to the other fields\n}\n')),(0,o.kt)("p",null,"This makes it far easier for clients to support multiple networks."),(0,o.kt)("p",null,"The metadata has a maximum length that is chosen by the app developer, and\npassed into the gov keeper as a config. The default maximum length in the SDK is 255 characters."),(0,o.kt)("h4",{id:"writing-a-module-that-uses-governance"},"Writing a module that uses governance"),(0,o.kt)("p",null,"There are many aspects of a chain, or of the individual modules that you may want to\nuse governance to perform such as changing various parameters. This is very simple\nto do. First, write out your message types and ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgServer")," implementation. Add an\n",(0,o.kt)("inlineCode",{parentName:"p"},"authority")," field to the keeper which will be populated in the constructor with the\ngovernance module account: ",(0,o.kt)("inlineCode",{parentName:"p"},"govKeeper.GetGovernanceAccount().GetAddress()"),". Then for\nthe methods in the ",(0,o.kt)("inlineCode",{parentName:"p"},"msg_server.go"),", perform a check on the message that the signer\nmatches ",(0,o.kt)("inlineCode",{parentName:"p"},"authority"),". This will prevent any user from executing that message."),(0,o.kt)("h3",{id:"parameters-and-base-types"},"Parameters and base types"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Parameters")," define the rules according to which votes are run. There can only\nbe one active parameter set at any given time. If governance wants to change a\nparameter set, either to modify a value or add/remove a parameter field, a new\nparameter set has to be created and the previous one rendered inactive."),(0,o.kt)("h4",{id:"depositparams"},"DepositParams"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/gov/v1/gov.proto#L152-L162\n")),(0,o.kt)("h4",{id:"votingparams"},"VotingParams"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/gov/v1/gov.proto#L164-L168\n")),(0,o.kt)("h4",{id:"tallyparams"},"TallyParams"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/gov/v1/gov.proto#L170-L182\n")),(0,o.kt)("p",null,"Parameters are stored in a global ",(0,o.kt)("inlineCode",{parentName:"p"},"GlobalParams")," KVStore."),(0,o.kt)("p",null,"Additionally, we introduce some basic types:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'type Vote byte\n\nconst (\n    VoteYes         = 0x1\n    VoteNo          = 0x2\n    VoteNoWithVeto  = 0x3\n    VoteAbstain     = 0x4\n)\n\ntype ProposalType  string\n\nconst (\n    ProposalTypePlainText       = "Text"\n    ProposalTypeSoftwareUpgrade = "SoftwareUpgrade"\n)\n\ntype ProposalStatus byte\n\n\nconst (\n    StatusNil           ProposalStatus = 0x00\n    StatusDepositPeriod ProposalStatus = 0x01  // Proposal is submitted. Participants can deposit on it but not vote\n    StatusVotingPeriod  ProposalStatus = 0x02  // MinDeposit is reached, participants can vote\n    StatusPassed        ProposalStatus = 0x03  // Proposal passed and successfully executed\n    StatusRejected      ProposalStatus = 0x04  // Proposal has been rejected\n    StatusFailed        ProposalStatus = 0x05  // Proposal passed but failed execution\n)\n')),(0,o.kt)("h3",{id:"deposit-1"},"Deposit"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/gov/v1/gov.proto#L38-L49\n")),(0,o.kt)("h3",{id:"validatorgovinfo"},"ValidatorGovInfo"),(0,o.kt)("p",null,"This type is used in a temp map when tallying"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"  type ValidatorGovInfo struct {\n    Minus     sdk.Dec\n    Vote      Vote\n  }\n")),(0,o.kt)("h2",{id:"stores"},"Stores"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Stores are KVStores in the multi-store. The key to find the store is the first parameter in the list")),(0,o.kt)("p",null,"We will use one KVStore ",(0,o.kt)("inlineCode",{parentName:"p"},"Governance")," to store four mappings:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A mapping from ",(0,o.kt)("inlineCode",{parentName:"li"},"proposalID|'proposal'")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"Proposal"),"."),(0,o.kt)("li",{parentName:"ul"},"A mapping from ",(0,o.kt)("inlineCode",{parentName:"li"},"proposalID|'addresses'|address")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"Vote"),". This mapping allows\nus to query all addresses that voted on the proposal along with their vote by\ndoing a range query on ",(0,o.kt)("inlineCode",{parentName:"li"},"proposalID:addresses"),"."),(0,o.kt)("li",{parentName:"ul"},"A mapping from ",(0,o.kt)("inlineCode",{parentName:"li"},"ParamsKey|'Params'")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"Params"),". This map allows to query all\nx/gov params."),(0,o.kt)("li",{parentName:"ul"},"A mapping from ",(0,o.kt)("inlineCode",{parentName:"li"},"VotingPeriodProposalKeyPrefix|proposalID")," to a single byte. This allows\nus to know if a proposal is in the voting period or not with very low gas cost.")),(0,o.kt)("p",null,"For pseudocode purposes, here are the two function we will use to read or write in stores:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"load(StoreKey, Key)"),": Retrieve item stored at key ",(0,o.kt)("inlineCode",{parentName:"li"},"Key")," in store found at key ",(0,o.kt)("inlineCode",{parentName:"li"},"StoreKey")," in the multistore"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"store(StoreKey, Key, value)"),": Write value ",(0,o.kt)("inlineCode",{parentName:"li"},"Value")," at key ",(0,o.kt)("inlineCode",{parentName:"li"},"Key")," in store found at key ",(0,o.kt)("inlineCode",{parentName:"li"},"StoreKey")," in the multistore")),(0,o.kt)("h3",{id:"proposal-processing-queue"},"Proposal Processing Queue"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Store:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ProposalProcessingQueue"),": A queue ",(0,o.kt)("inlineCode",{parentName:"li"},"queue[proposalID]")," containing all the\n",(0,o.kt)("inlineCode",{parentName:"li"},"ProposalIDs")," of proposals that reached ",(0,o.kt)("inlineCode",{parentName:"li"},"MinDeposit"),". During each ",(0,o.kt)("inlineCode",{parentName:"li"},"EndBlock"),",\nall the proposals that have reached the end of their voting period are processed.\nTo process a finished proposal, the application tallies the votes, computes the\nvotes of each validator and checks if every validator in the validator set has\nvoted. If the proposal is accepted, deposits are refunded. Finally, the proposal\ncontent ",(0,o.kt)("inlineCode",{parentName:"li"},"Handler")," is executed.")),(0,o.kt)("p",null,"And the pseudocode for the ",(0,o.kt)("inlineCode",{parentName:"p"},"ProposalProcessingQueue"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"  in EndBlock do\n\n    for finishedProposalID in GetAllFinishedProposalIDs(block.Time)\n      proposal = load(Governance, <proposalID|'proposal'>) // proposal is a const key\n\n      validators = Keeper.getAllValidators()\n      tmpValMap := map(sdk.AccAddress)ValidatorGovInfo\n\n      // Initiate mapping at 0. This is the amount of shares of the validator's vote that will be overridden by their delegator's votes\n      for each validator in validators\n        tmpValMap(validator.OperatorAddr).Minus = 0\n\n      // Tally\n      voterIterator = rangeQuery(Governance, <proposalID|'addresses'>) //return all the addresses that voted on the proposal\n      for each (voterAddress, vote) in voterIterator\n        delegations = stakingKeeper.getDelegations(voterAddress) // get all delegations for current voter\n\n        for each delegation in delegations\n          // make sure delegation.Shares does NOT include shares being unbonded\n          tmpValMap(delegation.ValidatorAddr).Minus += delegation.Shares\n          proposal.updateTally(vote, delegation.Shares)\n\n        _, isVal = stakingKeeper.getValidator(voterAddress)\n        if (isVal)\n          tmpValMap(voterAddress).Vote = vote\n\n      tallyingParam = load(GlobalParams, 'TallyingParam')\n\n      // Update tally if validator voted\n      for each validator in validators\n        if tmpValMap(validator).HasVoted\n          proposal.updateTally(tmpValMap(validator).Vote, (validator.TotalShares - tmpValMap(validator).Minus))\n\n\n\n      // Check if proposal is accepted or rejected\n      totalNonAbstain := proposal.YesVotes + proposal.NoVotes + proposal.NoWithVetoVotes\n      if (proposal.Votes.YesVotes/totalNonAbstain > tallyingParam.Threshold AND proposal.Votes.NoWithVetoVotes/totalNonAbstain  < tallyingParam.Veto)\n        //  proposal was accepted at the end of the voting period\n        //  refund deposits (non-voters already punished)\n        for each (amount, depositor) in proposal.Deposits\n          depositor.AtomBalance += amount\n\n        stateWriter, err := proposal.Handler()\n        if err != nil\n            // proposal passed but failed during state execution\n            proposal.CurrentStatus = ProposalStatusFailed\n         else\n            // proposal pass and state is persisted\n            proposal.CurrentStatus = ProposalStatusAccepted\n            stateWriter.save()\n      else\n        // proposal was rejected\n        proposal.CurrentStatus = ProposalStatusRejected\n\n      store(Governance, <proposalID|'proposal'>, proposal)\n")),(0,o.kt)("h3",{id:"legacy-proposal"},"Legacy Proposal"),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Legacy proposals are deprecated. Use the new proposal flow by granting the governance module the right to execute the message.")),(0,o.kt)("p",null,"A legacy proposal is the old implementation of governance proposal.\nContrary to proposal that can contain any messages, a legacy proposal allows to submit a set of pre-defined proposals.\nThese proposals are defined by their types and handled by handlers that are registered in the gov v1beta1 router."),(0,o.kt)("p",null,"More information on how to submit proposals in the ",(0,o.kt)("a",{parentName:"p",href:"#client"},"client section"),"."),(0,o.kt)("h2",{id:"messages"},"Messages"),(0,o.kt)("h3",{id:"proposal-submission-1"},"Proposal Submission"),(0,o.kt)("p",null,"Proposals can be submitted by any account via a ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgSubmitProposal")," transaction."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/gov/v1/tx.proto#L42-L69\n")),(0,o.kt)("p",null,"All ",(0,o.kt)("inlineCode",{parentName:"p"},"sdk.Msgs")," passed into the ",(0,o.kt)("inlineCode",{parentName:"p"},"messages")," field of a ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgSubmitProposal")," message\nmust be registered in the app's ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgServiceRouter"),". Each of these messages must\nhave one signer, namely the gov module account. And finally, the metadata length\nmust not be larger than the ",(0,o.kt)("inlineCode",{parentName:"p"},"maxMetadataLen")," config passed into the gov keeper."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"State modifications:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Generate new ",(0,o.kt)("inlineCode",{parentName:"li"},"proposalID")),(0,o.kt)("li",{parentName:"ul"},"Create new ",(0,o.kt)("inlineCode",{parentName:"li"},"Proposal")),(0,o.kt)("li",{parentName:"ul"},"Initialise ",(0,o.kt)("inlineCode",{parentName:"li"},"Proposal"),"'s attributes"),(0,o.kt)("li",{parentName:"ul"},"Decrease balance of sender by ",(0,o.kt)("inlineCode",{parentName:"li"},"InitialDeposit")),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"MinDeposit")," is reached:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Push ",(0,o.kt)("inlineCode",{parentName:"li"},"proposalID")," in ",(0,o.kt)("inlineCode",{parentName:"li"},"ProposalProcessingQueue")))),(0,o.kt)("li",{parentName:"ul"},"Transfer ",(0,o.kt)("inlineCode",{parentName:"li"},"InitialDeposit")," from the ",(0,o.kt)("inlineCode",{parentName:"li"},"Proposer")," to the governance ",(0,o.kt)("inlineCode",{parentName:"li"},"ModuleAccount"))),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgSubmitProposal")," transaction can be handled according to the following\npseudocode."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// PSEUDOCODE //\n// Check if MsgSubmitProposal is valid. If it is, create proposal //\n\nupon receiving txGovSubmitProposal from sender do\n\n  if !correctlyFormatted(txGovSubmitProposal)\n    // check if proposal is correctly formatted and the messages have routes to other modules. Includes fee payment.\n    // check if all messages' unique Signer is the gov acct.\n    // check if the metadata is not too long.\n    throw\n\n  initialDeposit = txGovSubmitProposal.InitialDeposit\n  if (initialDeposit.Atoms <= 0) OR (sender.AtomBalance < initialDeposit.Atoms)\n    // InitialDeposit is negative or null OR sender has insufficient funds\n    throw\n\n  if (txGovSubmitProposal.Type != ProposalTypePlainText) OR (txGovSubmitProposal.Type != ProposalTypeSoftwareUpgrade)\n\n  sender.AtomBalance -= initialDeposit.Atoms\n\n  depositParam = load(GlobalParams, 'DepositParam')\n\n  proposalID = generate new proposalID\n  proposal = NewProposal()\n\n  proposal.Messages = txGovSubmitProposal.Messages\n  proposal.Metadata = txGovSubmitProposal.Metadata\n  proposal.TotalDeposit = initialDeposit\n  proposal.SubmitTime = <CurrentTime>\n  proposal.DepositEndTime = <CurrentTime>.Add(depositParam.MaxDepositPeriod)\n  proposal.Deposits.append({initialDeposit, sender})\n  proposal.Submitter = sender\n  proposal.YesVotes = 0\n  proposal.NoVotes = 0\n  proposal.NoWithVetoVotes = 0\n  proposal.AbstainVotes = 0\n  proposal.CurrentStatus = ProposalStatusOpen\n\n  store(Proposals, <proposalID|'proposal'>, proposal) // Store proposal in Proposals mapping\n  return proposalID\n")),(0,o.kt)("h3",{id:"deposit-2"},"Deposit"),(0,o.kt)("p",null,"Once a proposal is submitted, if\n",(0,o.kt)("inlineCode",{parentName:"p"},"Proposal.TotalDeposit < ActiveParam.MinDeposit"),", Atom holders can send\n",(0,o.kt)("inlineCode",{parentName:"p"},"MsgDeposit")," transactions to increase the proposal's deposit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/gov/v1/tx.proto#L134-L147\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"State modifications:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Decrease balance of sender by ",(0,o.kt)("inlineCode",{parentName:"li"},"deposit")),(0,o.kt)("li",{parentName:"ul"},"Add ",(0,o.kt)("inlineCode",{parentName:"li"},"deposit")," of sender in ",(0,o.kt)("inlineCode",{parentName:"li"},"proposal.Deposits")),(0,o.kt)("li",{parentName:"ul"},"Increase ",(0,o.kt)("inlineCode",{parentName:"li"},"proposal.TotalDeposit")," by sender's ",(0,o.kt)("inlineCode",{parentName:"li"},"deposit")),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"MinDeposit")," is reached:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Push ",(0,o.kt)("inlineCode",{parentName:"li"},"proposalID")," in ",(0,o.kt)("inlineCode",{parentName:"li"},"ProposalProcessingQueueEnd")))),(0,o.kt)("li",{parentName:"ul"},"Transfer ",(0,o.kt)("inlineCode",{parentName:"li"},"Deposit")," from the ",(0,o.kt)("inlineCode",{parentName:"li"},"proposer")," to the governance ",(0,o.kt)("inlineCode",{parentName:"li"},"ModuleAccount"))),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgDeposit")," transaction has to go through a number of checks to be valid.\nThese checks are outlined in the following pseudocode."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// PSEUDOCODE //\n// Check if MsgDeposit is valid. If it is, increase deposit and check if MinDeposit is reached\n\nupon receiving txGovDeposit from sender do\n  // check if proposal is correctly formatted. Includes fee payment.\n\n  if !correctlyFormatted(txGovDeposit)\n    throw\n\n  proposal = load(Proposals, <txGovDeposit.ProposalID|'proposal'>) // proposal is a const key, proposalID is variable\n\n  if (proposal == nil)\n    // There is no proposal for this proposalID\n    throw\n\n  if (txGovDeposit.Deposit.Atoms <= 0) OR (sender.AtomBalance < txGovDeposit.Deposit.Atoms) OR (proposal.CurrentStatus != ProposalStatusOpen)\n\n    // deposit is negative or null\n    // OR sender has insufficient funds\n    // OR proposal is not open for deposit anymore\n\n    throw\n\n  depositParam = load(GlobalParams, 'DepositParam')\n\n  if (CurrentBlock >= proposal.SubmitBlock + depositParam.MaxDepositPeriod)\n    proposal.CurrentStatus = ProposalStatusClosed\n\n  else\n    // sender can deposit\n    sender.AtomBalance -= txGovDeposit.Deposit.Atoms\n\n    proposal.Deposits.append({txGovVote.Deposit, sender})\n    proposal.TotalDeposit.Plus(txGovDeposit.Deposit)\n\n    if (proposal.TotalDeposit >= depositParam.MinDeposit)\n      // MinDeposit is reached, vote opens\n\n      proposal.VotingStartBlock = CurrentBlock\n      proposal.CurrentStatus = ProposalStatusActive\n      ProposalProcessingQueue.push(txGovDeposit.ProposalID)\n\n  store(Proposals, <txGovVote.ProposalID|'proposal'>, proposal)\n")),(0,o.kt)("h3",{id:"vote-1"},"Vote"),(0,o.kt)("p",null,"Once ",(0,o.kt)("inlineCode",{parentName:"p"},"ActiveParam.MinDeposit")," is reached, voting period starts. From there,\nbonded Atom holders are able to send ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgVote")," transactions to cast their\nvote on the proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/gov/v1/tx.proto#L92-L108\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"State modifications:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Record ",(0,o.kt)("inlineCode",{parentName:"li"},"Vote")," of sender")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Gas cost for this message has to take into account the future tallying of the vote in EndBlocker.")),(0,o.kt)("p",null,"Next is a pseudocode outline of the way ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgVote")," transactions are handled:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"  // PSEUDOCODE //\n  // Check if MsgVote is valid. If it is, count vote//\n\n  upon receiving txGovVote from sender do\n    // check if proposal is correctly formatted. Includes fee payment.\n\n    if !correctlyFormatted(txGovDeposit)\n      throw\n\n    proposal = load(Proposals, <txGovDeposit.ProposalID|'proposal'>)\n\n    if (proposal == nil)\n      // There is no proposal for this proposalID\n      throw\n\n\n    if  (proposal.CurrentStatus == ProposalStatusActive)\n\n\n        // Sender can vote if\n        // Proposal is active\n        // Sender has some bonds\n\n        store(Governance, <txGovVote.ProposalID|'addresses'|sender>, txGovVote.Vote)   // Voters can vote multiple times. Re-voting overrides previous vote. This is ok because tallying is done once at the end.\n")),(0,o.kt)("h2",{id:"events"},"Events"),(0,o.kt)("p",null,"The governance module emits the following events:"),(0,o.kt)("h3",{id:"endblocker"},"EndBlocker"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"inactive_proposal"),(0,o.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalID}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"inactive_proposal"),(0,o.kt)("td",{parentName:"tr",align:null},"proposal_result"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalResult}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"active_proposal"),(0,o.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalID}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"active_proposal"),(0,o.kt)("td",{parentName:"tr",align:null},"proposal_result"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalResult}")))),(0,o.kt)("h3",{id:"handlers"},"Handlers"),(0,o.kt)("h4",{id:"msgsubmitproposal"},"MsgSubmitProposal"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"submit_proposal"),(0,o.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalID}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"submit_proposal ","[0]"),(0,o.kt)("td",{parentName:"tr",align:null},"voting_period_start"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalID}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"proposal_deposit"),(0,o.kt)("td",{parentName:"tr",align:null},"amount"),(0,o.kt)("td",{parentName:"tr",align:null},"{depositAmount}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"proposal_deposit"),(0,o.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalID}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"module"),(0,o.kt)("td",{parentName:"tr",align:null},"governance")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"action"),(0,o.kt)("td",{parentName:"tr",align:null},"submit_proposal")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"sender"),(0,o.kt)("td",{parentName:"tr",align:null},"{senderAddress}")))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[0]"," Event only emitted if the voting period starts during the submission.")),(0,o.kt)("h4",{id:"msgvote"},"MsgVote"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"proposal_vote"),(0,o.kt)("td",{parentName:"tr",align:null},"option"),(0,o.kt)("td",{parentName:"tr",align:null},"{voteOption}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"proposal_vote"),(0,o.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalID}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"module"),(0,o.kt)("td",{parentName:"tr",align:null},"governance")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"action"),(0,o.kt)("td",{parentName:"tr",align:null},"vote")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"sender"),(0,o.kt)("td",{parentName:"tr",align:null},"{senderAddress}")))),(0,o.kt)("h4",{id:"msgvoteweighted"},"MsgVoteWeighted"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"proposal_vote"),(0,o.kt)("td",{parentName:"tr",align:null},"option"),(0,o.kt)("td",{parentName:"tr",align:null},"{weightedVoteOptions}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"proposal_vote"),(0,o.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalID}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"module"),(0,o.kt)("td",{parentName:"tr",align:null},"governance")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"action"),(0,o.kt)("td",{parentName:"tr",align:null},"vote")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"sender"),(0,o.kt)("td",{parentName:"tr",align:null},"{senderAddress}")))),(0,o.kt)("h4",{id:"msgdeposit"},"MsgDeposit"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,o.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"proposal_deposit"),(0,o.kt)("td",{parentName:"tr",align:null},"amount"),(0,o.kt)("td",{parentName:"tr",align:null},"{depositAmount}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"proposal_deposit"),(0,o.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalID}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"proposal_deposit ","[0]"),(0,o.kt)("td",{parentName:"tr",align:null},"voting_period_start"),(0,o.kt)("td",{parentName:"tr",align:null},"{proposalID}")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"module"),(0,o.kt)("td",{parentName:"tr",align:null},"governance")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"action"),(0,o.kt)("td",{parentName:"tr",align:null},"deposit")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"message"),(0,o.kt)("td",{parentName:"tr",align:null},"sender"),(0,o.kt)("td",{parentName:"tr",align:null},"{senderAddress}")))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[0]"," Event only emitted if the voting period starts during the submission.")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("p",null,"The governance module contains the following parameters:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Key"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Example"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"min_deposit"),(0,o.kt)("td",{parentName:"tr",align:null},"array (coins)"),(0,o.kt)("td",{parentName:"tr",align:null},'[{"denom":"uatom","amount":"10000000"}]')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"max_deposit_period"),(0,o.kt)("td",{parentName:"tr",align:null},"string (time ns)"),(0,o.kt)("td",{parentName:"tr",align:null},'"172800000000000" (17280s)')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"voting_period"),(0,o.kt)("td",{parentName:"tr",align:null},"string (time ns)"),(0,o.kt)("td",{parentName:"tr",align:null},'"172800000000000" (17280s)')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"quorum"),(0,o.kt)("td",{parentName:"tr",align:null},"string (dec)"),(0,o.kt)("td",{parentName:"tr",align:null},'"0.334000000000000000"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"threshold"),(0,o.kt)("td",{parentName:"tr",align:null},"string (dec)"),(0,o.kt)("td",{parentName:"tr",align:null},'"0.500000000000000000"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"veto"),(0,o.kt)("td",{parentName:"tr",align:null},"string (dec)"),(0,o.kt)("td",{parentName:"tr",align:null},'"0.334000000000000000"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"expedited_threshold"),(0,o.kt)("td",{parentName:"tr",align:null},"string (time ns)"),(0,o.kt)("td",{parentName:"tr",align:null},'"0.667000000000000000"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"expedited_voting_period"),(0,o.kt)("td",{parentName:"tr",align:null},"string (time ns)"),(0,o.kt)("td",{parentName:"tr",align:null},'"86400000000000" (8600s)')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"expedited_min_deposit"),(0,o.kt)("td",{parentName:"tr",align:null},"array (coins)"),(0,o.kt)("td",{parentName:"tr",align:null},'[{"denom":"uatom","amount":"50000000"}]')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"burn_proposal_deposit_prevote"),(0,o.kt)("td",{parentName:"tr",align:null},"bool"),(0,o.kt)("td",{parentName:"tr",align:null},"false")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"burn_vote_quorum"),(0,o.kt)("td",{parentName:"tr",align:null},"bool"),(0,o.kt)("td",{parentName:"tr",align:null},"false")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"burn_vote_veto"),(0,o.kt)("td",{parentName:"tr",align:null},"bool"),(0,o.kt)("td",{parentName:"tr",align:null},"true")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE"),": The governance module contains parameters that are objects unlike other\nmodules. If only a subset of parameters are desired to be changed, only they need\nto be included and not the entire parameter object structure."),(0,o.kt)("h2",{id:"client"},"Client"),(0,o.kt)("h3",{id:"cli"},"CLI"),(0,o.kt)("p",null,"A user can query and interact with the ",(0,o.kt)("inlineCode",{parentName:"p"},"gov")," module using the CLI."),(0,o.kt)("h4",{id:"query"},"Query"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"query")," commands allow users to query ",(0,o.kt)("inlineCode",{parentName:"p"},"gov")," state."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov --help\n")),(0,o.kt)("h5",{id:"deposit-3"},"deposit"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"deposit")," command allows users to query a deposit for a given proposal from a given depositor."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov deposit [proposal-id] [depositer-addr] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov deposit 1 cosmos1..\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'amount:\n- amount: "100"\n  denom: stake\ndepositor: cosmos1..\nproposal_id: "1"\n')),(0,o.kt)("h5",{id:"deposits"},"deposits"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"deposits")," command allows users to query all deposits for a given proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov deposits [proposal-id] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov deposits 1\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'deposits:\n- amount:\n  - amount: "100"\n    denom: stake\n  depositor: cosmos1..\n  proposal_id: "1"\npagination:\n  next_key: null\n  total: "0"\n')),(0,o.kt)("h5",{id:"param"},"param"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"param")," command allows users to query a given parameter for the ",(0,o.kt)("inlineCode",{parentName:"p"},"gov")," module."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov param [param-type] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov param voting\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'voting_period: "172800000000000"\n')),(0,o.kt)("h5",{id:"params"},"params"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"params")," command allows users to query all parameters for the ",(0,o.kt)("inlineCode",{parentName:"p"},"gov")," module."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov params [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov params\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'deposit_params:\n  max_deposit_period: 172800s\n  min_deposit:\n  - amount: "10000000"\n    denom: stake\nparams:\n  expedited_min_deposit:\n  - amount: "50000000"\n    denom: stake\n  expedited_threshold: "0.670000000000000000"\n  expedited_voting_period: 86400s\n  max_deposit_period: 172800s\n  min_deposit:\n  - amount: "10000000"\n    denom: stake\n  min_initial_deposit_ratio: "0.000000000000000000"\n  proposal_cancel_burn_rate: "0.500000000000000000"\n  quorum: "0.334000000000000000"\n  threshold: "0.500000000000000000"\n  veto_threshold: "0.334000000000000000"\n  voting_period: 172800s\ntally_params:\n  quorum: "0.334000000000000000"\n  threshold: "0.500000000000000000"\n  veto_threshold: "0.334000000000000000"\nvoting_params:\n  voting_period: 172800s\n')),(0,o.kt)("h5",{id:"proposal"},"proposal"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"proposal")," command allows users to query a given proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov proposal [proposal-id] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov proposal 1\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'deposit_end_time: "2022-03-30T11:50:20.819676256Z"\nfinal_tally_result:\n  abstain_count: "0"\n  no_count: "0"\n  no_with_veto_count: "0"\n  yes_count: "0"\nid: "1"\nmessages:\n- \'@type\': /cosmos.bank.v1beta1.MsgSend\n  amount:\n  - amount: "10"\n    denom: stake\n  from_address: cosmos1..\n  to_address: cosmos1..\nmetadata: AQ==\nstatus: PROPOSAL_STATUS_DEPOSIT_PERIOD\nsubmit_time: "2022-03-28T11:50:20.819676256Z"\ntotal_deposit:\n- amount: "10"\n  denom: stake\nvoting_end_time: null\nvoting_start_time: null\n')),(0,o.kt)("h5",{id:"proposals-1"},"proposals"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"proposals")," command allows users to query all proposals with optional filters."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov proposals [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov proposals\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'pagination:\n  next_key: null\n  total: "0"\nproposals:\n- deposit_end_time: "2022-03-30T11:50:20.819676256Z"\n  final_tally_result:\n    abstain_count: "0"\n    no_count: "0"\n    no_with_veto_count: "0"\n    yes_count: "0"\n  id: "1"\n  messages:\n  - \'@type\': /cosmos.bank.v1beta1.MsgSend\n    amount:\n    - amount: "10"\n      denom: stake\n    from_address: cosmos1..\n    to_address: cosmos1..\n  metadata: AQ==\n  status: PROPOSAL_STATUS_DEPOSIT_PERIOD\n  submit_time: "2022-03-28T11:50:20.819676256Z"\n  total_deposit:\n  - amount: "10"\n    denom: stake\n  voting_end_time: null\n  voting_start_time: null\n- deposit_end_time: "2022-03-30T14:02:41.165025015Z"\n  final_tally_result:\n    abstain_count: "0"\n    no_count: "0"\n    no_with_veto_count: "0"\n    yes_count: "0"\n  id: "2"\n  messages:\n  - \'@type\': /cosmos.bank.v1beta1.MsgSend\n    amount:\n    - amount: "10"\n      denom: stake\n    from_address: cosmos1..\n    to_address: cosmos1..\n  metadata: AQ==\n  status: PROPOSAL_STATUS_DEPOSIT_PERIOD\n  submit_time: "2022-03-28T14:02:41.165025015Z"\n  total_deposit:\n  - amount: "10"\n    denom: stake\n  voting_end_time: null\n  voting_start_time: null\n')),(0,o.kt)("h5",{id:"proposer"},"proposer"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"proposer")," command allows users to query the proposer for a given proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov proposer [proposal-id] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov proposer 1\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'proposal_id: "1"\nproposer: cosmos1..\n')),(0,o.kt)("h5",{id:"tally"},"tally"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"tally")," command allows users to query the tally of a given proposal vote."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov tally [proposal-id] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov tally 1\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'abstain: "0"\n"no": "0"\nno_with_veto: "0"\n"yes": "1"\n')),(0,o.kt)("h5",{id:"vote-2"},"vote"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"vote")," command allows users to query a vote for a given proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov vote [proposal-id] [voter-addr] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov vote 1 cosmos1..\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'option: VOTE_OPTION_YES\noptions:\n- option: VOTE_OPTION_YES\n  weight: "1.000000000000000000"\nproposal_id: "1"\nvoter: cosmos1..\n')),(0,o.kt)("h5",{id:"votes"},"votes"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"votes")," command allows users to query all votes for a given proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov votes [proposal-id] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd query gov votes 1\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'pagination:\n  next_key: null\n  total: "0"\nvotes:\n- option: VOTE_OPTION_YES\n  options:\n  - option: VOTE_OPTION_YES\n    weight: "1.000000000000000000"\n  proposal_id: "1"\n  voter: cosmos1..\n')),(0,o.kt)("h4",{id:"transactions"},"Transactions"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"tx")," commands allow users to interact with the ",(0,o.kt)("inlineCode",{parentName:"p"},"gov")," module."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov --help\n")),(0,o.kt)("h5",{id:"deposit-4"},"deposit"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"deposit")," command allows users to deposit tokens for a given proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov deposit [proposal-id] [deposit] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov deposit 1 10000000stake --from cosmos1..\n")),(0,o.kt)("h5",{id:"draft-proposal"},"draft-proposal"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"draft-proposal")," command allows users to draft any type of proposal.\nThe command returns a ",(0,o.kt)("inlineCode",{parentName:"p"},"draft_proposal.json"),", to be used by ",(0,o.kt)("inlineCode",{parentName:"p"},"submit-proposal")," after being completed.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"draft_metadata.json")," is meant to be uploaded to ",(0,o.kt)("a",{parentName:"p",href:"#metadata"},"IPFS"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov draft-proposal\n")),(0,o.kt)("h5",{id:"submit-proposal"},"submit-proposal"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"submit-proposal")," command allows users to submit a governance proposal along with some messages and metadata.\nMessages, metadata and deposit are defined in a JSON file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov submit-proposal [path-to-proposal-json] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov submit-proposal /path/to/proposal.json --from cosmos1..\n")),(0,o.kt)("p",null,"where ",(0,o.kt)("inlineCode",{parentName:"p"},"proposal.json")," contains:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "messages": [\n    {\n      "@type": "/cosmos.bank.v1beta1.MsgSend",\n      "from_address": "cosmos1...", // The gov module module address\n      "to_address": "cosmos1...",\n      "amount":[{"denom": "stake","amount": "10"}]\n    }\n  ],\n  "metadata": "AQ==",\n  "deposit": "10stake",\n  "title": "Proposal Title",\n  "summary": "Proposal Summary"\n}\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"By default the metadata, summary and title are both limited by 255 characters, this can be overridden by the application developer.")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"When metadata is not specified, the title is limited to 255 characters and the summary 40x the title length.")),(0,o.kt)("h5",{id:"submit-legacy-proposal"},"submit-legacy-proposal"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"submit-legacy-proposal")," command allows users to submit a governance legacy proposal along with an initial deposit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov submit-legacy-proposal [command] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx gov submit-legacy-proposal --title="Test Proposal" --description="testing" --type="Text" --deposit="100000000stake" --from cosmos1..\n')),(0,o.kt)("p",null,"Example (",(0,o.kt)("inlineCode",{parentName:"p"},"param-change"),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov submit-legacy-proposal param-change proposal.json --from cosmos1..\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "Test Proposal",\n  "description": "testing, testing, 1, 2, 3",\n  "changes": [\n    {\n      "subspace": "staking",\n      "key": "MaxValidators",\n      "value": 100\n    }\n  ],\n  "deposit": "10000000stake"\n}\n')),(0,o.kt)("h4",{id:"cancel-proposal"},"cancel-proposal"),(0,o.kt)("p",null,"Once proposal is canceled, from the deposits of proposal ",(0,o.kt)("inlineCode",{parentName:"p"},"deposits * proposal_cancel_ratio")," will be burned or sent to ",(0,o.kt)("inlineCode",{parentName:"p"},"ProposalCancelDest")," address , if ",(0,o.kt)("inlineCode",{parentName:"p"},"ProposalCancelDest")," is empty then deposits will be burned. The ",(0,o.kt)("inlineCode",{parentName:"p"},"remaining deposits")," will be sent to depositers."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov cancel-proposal [proposal-id] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov cancel-proposal 1 --from cosmos1...\n")),(0,o.kt)("h5",{id:"vote-3"},"vote"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"vote")," command allows users to submit a vote for a given governance proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov vote [command] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov vote 1 yes --from cosmos1..\n")),(0,o.kt)("h5",{id:"weighted-vote"},"weighted-vote"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"weighted-vote")," command allows users to submit a weighted vote for a given governance proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov weighted-vote [proposal-id] [weighted-options] [flags]\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx gov weighted-vote 1 yes=0.5,no=0.5 --from cosmos1..\n")),(0,o.kt)("h3",{id:"grpc"},"gRPC"),(0,o.kt)("p",null,"A user can query the ",(0,o.kt)("inlineCode",{parentName:"p"},"gov")," module using gRPC endpoints."),(0,o.kt)("h4",{id:"proposal-1"},"Proposal"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Proposal")," endpoint allows users to query a given proposal."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1beta1.Query/Proposal\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1"}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1beta1.Query/Proposal\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposal": {\n    "proposalId": "1",\n    "content": {"@type":"/cosmos.gov.v1beta1.TextProposal","description":"testing, testing, 1, 2, 3","title":"Test Proposal"},\n    "status": "PROPOSAL_STATUS_VOTING_PERIOD",\n    "finalTallyResult": {\n      "yes": "0",\n      "abstain": "0",\n      "no": "0",\n      "noWithVeto": "0"\n    },\n    "submitTime": "2021-09-16T19:40:08.712440474Z",\n    "depositEndTime": "2021-09-18T19:40:08.712440474Z",\n    "totalDeposit": [\n      {\n        "denom": "stake",\n        "amount": "10000000"\n      }\n    ],\n    "votingStartTime": "2021-09-16T19:40:08.712440474Z",\n    "votingEndTime": "2021-09-18T19:40:08.712440474Z",\n    "title": "Test Proposal",\n    "summary": "testing, testing, 1, 2, 3"\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1.Query/Proposal\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1"}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1.Query/Proposal\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposal": {\n    "id": "1",\n    "messages": [\n      {"@type":"/cosmos.bank.v1beta1.MsgSend","amount":[{"denom":"stake","amount":"10"}],"fromAddress":"cosmos1..","toAddress":"cosmos1.."}\n    ],\n    "status": "PROPOSAL_STATUS_VOTING_PERIOD",\n    "finalTallyResult": {\n      "yesCount": "0",\n      "abstainCount": "0",\n      "noCount": "0",\n      "noWithVetoCount": "0"\n    },\n    "submitTime": "2022-03-28T11:50:20.819676256Z",\n    "depositEndTime": "2022-03-30T11:50:20.819676256Z",\n    "totalDeposit": [\n      {\n        "denom": "stake",\n        "amount": "10000000"\n      }\n    ],\n    "votingStartTime": "2022-03-28T14:25:26.644857113Z",\n    "votingEndTime": "2022-03-30T14:25:26.644857113Z",\n    "metadata": "AQ==",\n    "title": "Test Proposal",\n    "summary": "testing, testing, 1, 2, 3"\n  }\n}\n')),(0,o.kt)("h4",{id:"proposals-2"},"Proposals"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Proposals")," endpoint allows users to query all proposals with optional filters."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1beta1.Query/Proposals\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"grpcurl -plaintext \\\n    localhost:9090 \\\n    cosmos.gov.v1beta1.Query/Proposals\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposals": [\n    {\n      "proposalId": "1",\n      "status": "PROPOSAL_STATUS_VOTING_PERIOD",\n      "finalTallyResult": {\n        "yes": "0",\n        "abstain": "0",\n        "no": "0",\n        "noWithVeto": "0"\n      },\n      "submitTime": "2022-03-28T11:50:20.819676256Z",\n      "depositEndTime": "2022-03-30T11:50:20.819676256Z",\n      "totalDeposit": [\n        {\n          "denom": "stake",\n          "amount": "10000000010"\n        }\n      ],\n      "votingStartTime": "2022-03-28T14:25:26.644857113Z",\n      "votingEndTime": "2022-03-30T14:25:26.644857113Z"\n    },\n    {\n      "proposalId": "2",\n      "status": "PROPOSAL_STATUS_DEPOSIT_PERIOD",\n      "finalTallyResult": {\n        "yes": "0",\n        "abstain": "0",\n        "no": "0",\n        "noWithVeto": "0"\n      },\n      "submitTime": "2022-03-28T14:02:41.165025015Z",\n      "depositEndTime": "2022-03-30T14:02:41.165025015Z",\n      "totalDeposit": [\n        {\n          "denom": "stake",\n          "amount": "10"\n        }\n      ],\n      "votingStartTime": "0001-01-01T00:00:00Z",\n      "votingEndTime": "0001-01-01T00:00:00Z"\n    }\n  ],\n  "pagination": {\n    "total": "2"\n  }\n}\n\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1.Query/Proposals\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"grpcurl -plaintext \\\n    localhost:9090 \\\n    cosmos.gov.v1.Query/Proposals\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposals": [\n    {\n      "id": "1",\n      "messages": [\n        {"@type":"/cosmos.bank.v1beta1.MsgSend","amount":[{"denom":"stake","amount":"10"}],"fromAddress":"cosmos1..","toAddress":"cosmos1.."}\n      ],\n      "status": "PROPOSAL_STATUS_VOTING_PERIOD",\n      "finalTallyResult": {\n        "yesCount": "0",\n        "abstainCount": "0",\n        "noCount": "0",\n        "noWithVetoCount": "0"\n      },\n      "submitTime": "2022-03-28T11:50:20.819676256Z",\n      "depositEndTime": "2022-03-30T11:50:20.819676256Z",\n      "totalDeposit": [\n        {\n          "denom": "stake",\n          "amount": "10000000010"\n        }\n      ],\n      "votingStartTime": "2022-03-28T14:25:26.644857113Z",\n      "votingEndTime": "2022-03-30T14:25:26.644857113Z",\n      "metadata": "AQ==",\n      "title": "Proposal Title",\n      "summary": "Proposal Summary"\n    },\n    {\n      "id": "2",\n      "messages": [\n        {"@type":"/cosmos.bank.v1beta1.MsgSend","amount":[{"denom":"stake","amount":"10"}],"fromAddress":"cosmos1..","toAddress":"cosmos1.."}\n      ],\n      "status": "PROPOSAL_STATUS_DEPOSIT_PERIOD",\n      "finalTallyResult": {\n        "yesCount": "0",\n        "abstainCount": "0",\n        "noCount": "0",\n        "noWithVetoCount": "0"\n      },\n      "submitTime": "2022-03-28T14:02:41.165025015Z",\n      "depositEndTime": "2022-03-30T14:02:41.165025015Z",\n      "totalDeposit": [\n        {\n          "denom": "stake",\n          "amount": "10"\n        }\n      ],\n      "metadata": "AQ==",\n      "title": "Proposal Title",\n      "summary": "Proposal Summary"\n    }\n  ],\n  "pagination": {\n    "total": "2"\n  }\n}\n')),(0,o.kt)("h4",{id:"vote-4"},"Vote"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Vote")," endpoint allows users to query a vote for a given proposal."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1beta1.Query/Vote\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1","voter":"cosmos1.."}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1beta1.Query/Vote\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "vote": {\n    "proposalId": "1",\n    "voter": "cosmos1..",\n    "option": "VOTE_OPTION_YES",\n    "options": [\n      {\n        "option": "VOTE_OPTION_YES",\n        "weight": "1000000000000000000"\n      }\n    ]\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1.Query/Vote\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1","voter":"cosmos1.."}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1.Query/Vote\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "vote": {\n    "proposalId": "1",\n    "voter": "cosmos1..",\n    "option": "VOTE_OPTION_YES",\n    "options": [\n      {\n        "option": "VOTE_OPTION_YES",\n        "weight": "1.000000000000000000"\n      }\n    ]\n  }\n}\n')),(0,o.kt)("h4",{id:"votes-1"},"Votes"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Votes")," endpoint allows users to query all votes for a given proposal."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1beta1.Query/Votes\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1"}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1beta1.Query/Votes\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "votes": [\n    {\n      "proposalId": "1",\n      "voter": "cosmos1..",\n      "options": [\n        {\n          "option": "VOTE_OPTION_YES",\n          "weight": "1000000000000000000"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1.Query/Votes\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1"}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1.Query/Votes\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "votes": [\n    {\n      "proposalId": "1",\n      "voter": "cosmos1..",\n      "options": [\n        {\n          "option": "VOTE_OPTION_YES",\n          "weight": "1.000000000000000000"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,o.kt)("h4",{id:"params-1"},"Params"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Params")," endpoint allows users to query all parameters for the ",(0,o.kt)("inlineCode",{parentName:"p"},"gov")," module."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1beta1.Query/Params\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"params_type":"voting"}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1beta1.Query/Params\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "votingParams": {\n    "votingPeriod": "172800s"\n  },\n  "depositParams": {\n    "maxDepositPeriod": "0s"\n  },\n  "tallyParams": {\n    "quorum": "MA==",\n    "threshold": "MA==",\n    "vetoThreshold": "MA=="\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1.Query/Params\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"params_type":"voting"}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1.Query/Params\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "votingParams": {\n    "votingPeriod": "172800s"\n  }\n}\n')),(0,o.kt)("h4",{id:"deposit-5"},"Deposit"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Deposit")," endpoint allows users to query a deposit for a given proposal from a given depositor."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1beta1.Query/Deposit\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    \'{"proposal_id":"1","depositor":"cosmos1.."}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1beta1.Query/Deposit\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "deposit": {\n    "proposalId": "1",\n    "depositor": "cosmos1..",\n    "amount": [\n      {\n        "denom": "stake",\n        "amount": "10000000"\n      }\n    ]\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1.Query/Deposit\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    \'{"proposal_id":"1","depositor":"cosmos1.."}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1.Query/Deposit\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "deposit": {\n    "proposalId": "1",\n    "depositor": "cosmos1..",\n    "amount": [\n      {\n        "denom": "stake",\n        "amount": "10000000"\n      }\n    ]\n  }\n}\n')),(0,o.kt)("h4",{id:"deposits-1"},"deposits"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Deposits")," endpoint allows users to query all deposits for a given proposal."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1beta1.Query/Deposits\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1"}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1beta1.Query/Deposits\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "deposits": [\n    {\n      "proposalId": "1",\n      "depositor": "cosmos1..",\n      "amount": [\n        {\n          "denom": "stake",\n          "amount": "10000000"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1.Query/Deposits\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1"}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1.Query/Deposits\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "deposits": [\n    {\n      "proposalId": "1",\n      "depositor": "cosmos1..",\n      "amount": [\n        {\n          "denom": "stake",\n          "amount": "10000000"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,o.kt)("h4",{id:"tallyresult"},"TallyResult"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"TallyResult")," endpoint allows users to query the tally of a given proposal."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1beta1.Query/TallyResult\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1"}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1beta1.Query/TallyResult\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "tally": {\n    "yes": "1000000",\n    "abstain": "0",\n    "no": "0",\n    "noWithVeto": "0"\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.gov.v1.Query/TallyResult\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1"}\' \\\n    localhost:9090 \\\n    cosmos.gov.v1.Query/TallyResult\n')),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "tally": {\n    "yes": "1000000",\n    "abstain": "0",\n    "no": "0",\n    "noWithVeto": "0"\n  }\n}\n')),(0,o.kt)("h3",{id:"rest"},"REST"),(0,o.kt)("p",null,"A user can query the ",(0,o.kt)("inlineCode",{parentName:"p"},"gov")," module using REST endpoints."),(0,o.kt)("h4",{id:"proposal-2"},"proposal"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"proposals")," endpoint allows users to query a given proposal."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1beta1/proposals/{proposal_id}\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1beta1/proposals/1\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposal": {\n    "proposal_id": "1",\n    "content": null,\n    "status": "PROPOSAL_STATUS_VOTING_PERIOD",\n    "final_tally_result": {\n      "yes": "0",\n      "abstain": "0",\n      "no": "0",\n      "no_with_veto": "0"\n    },\n    "submit_time": "2022-03-28T11:50:20.819676256Z",\n    "deposit_end_time": "2022-03-30T11:50:20.819676256Z",\n    "total_deposit": [\n      {\n        "denom": "stake",\n        "amount": "10000000010"\n      }\n    ],\n    "voting_start_time": "2022-03-28T14:25:26.644857113Z",\n    "voting_end_time": "2022-03-30T14:25:26.644857113Z"\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1/proposals/{proposal_id}\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1/proposals/1\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposal": {\n    "id": "1",\n    "messages": [\n      {\n        "@type": "/cosmos.bank.v1beta1.MsgSend",\n        "from_address": "cosmos1..",\n        "to_address": "cosmos1..",\n        "amount": [\n          {\n            "denom": "stake",\n            "amount": "10"\n          }\n        ]\n      }\n    ],\n    "status": "PROPOSAL_STATUS_VOTING_PERIOD",\n    "final_tally_result": {\n      "yes_count": "0",\n      "abstain_count": "0",\n      "no_count": "0",\n      "no_with_veto_count": "0"\n    },\n    "submit_time": "2022-03-28T11:50:20.819676256Z",\n    "deposit_end_time": "2022-03-30T11:50:20.819676256Z",\n    "total_deposit": [\n      {\n        "denom": "stake",\n        "amount": "10000000"\n      }\n    ],\n    "voting_start_time": "2022-03-28T14:25:26.644857113Z",\n    "voting_end_time": "2022-03-30T14:25:26.644857113Z",\n    "metadata": "AQ==",\n    "title": "Proposal Title",\n    "summary": "Proposal Summary"\n  }\n}\n')),(0,o.kt)("h4",{id:"proposals-3"},"proposals"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"proposals")," endpoint also allows users to query all proposals with optional filters."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1beta1/proposals\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1beta1/proposals\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposals": [\n    {\n      "proposal_id": "1",\n      "content": null,\n      "status": "PROPOSAL_STATUS_VOTING_PERIOD",\n      "final_tally_result": {\n        "yes": "0",\n        "abstain": "0",\n        "no": "0",\n        "no_with_veto": "0"\n      },\n      "submit_time": "2022-03-28T11:50:20.819676256Z",\n      "deposit_end_time": "2022-03-30T11:50:20.819676256Z",\n      "total_deposit": [\n        {\n          "denom": "stake",\n          "amount": "10000000"\n        }\n      ],\n      "voting_start_time": "2022-03-28T14:25:26.644857113Z",\n      "voting_end_time": "2022-03-30T14:25:26.644857113Z"\n    },\n    {\n      "proposal_id": "2",\n      "content": null,\n      "status": "PROPOSAL_STATUS_DEPOSIT_PERIOD",\n      "final_tally_result": {\n        "yes": "0",\n        "abstain": "0",\n        "no": "0",\n        "no_with_veto": "0"\n      },\n      "submit_time": "2022-03-28T14:02:41.165025015Z",\n      "deposit_end_time": "2022-03-30T14:02:41.165025015Z",\n      "total_deposit": [\n        {\n          "denom": "stake",\n          "amount": "10"\n        }\n      ],\n      "voting_start_time": "0001-01-01T00:00:00Z",\n      "voting_end_time": "0001-01-01T00:00:00Z"\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "2"\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1/proposals\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1/proposals\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposals": [\n    {\n      "id": "1",\n      "messages": [\n        {\n          "@type": "/cosmos.bank.v1beta1.MsgSend",\n          "from_address": "cosmos1..",\n          "to_address": "cosmos1..",\n          "amount": [\n            {\n              "denom": "stake",\n              "amount": "10"\n            }\n          ]\n        }\n      ],\n      "status": "PROPOSAL_STATUS_VOTING_PERIOD",\n      "final_tally_result": {\n        "yes_count": "0",\n        "abstain_count": "0",\n        "no_count": "0",\n        "no_with_veto_count": "0"\n      },\n      "submit_time": "2022-03-28T11:50:20.819676256Z",\n      "deposit_end_time": "2022-03-30T11:50:20.819676256Z",\n      "total_deposit": [\n        {\n          "denom": "stake",\n          "amount": "10000000010"\n        }\n      ],\n      "voting_start_time": "2022-03-28T14:25:26.644857113Z",\n      "voting_end_time": "2022-03-30T14:25:26.644857113Z",\n      "metadata": "AQ==",\n      "title": "Proposal Title",\n      "summary": "Proposal Summary"\n    },\n    {\n      "id": "2",\n      "messages": [\n        {\n          "@type": "/cosmos.bank.v1beta1.MsgSend",\n          "from_address": "cosmos1..",\n          "to_address": "cosmos1..",\n          "amount": [\n            {\n              "denom": "stake",\n              "amount": "10"\n            }\n          ]\n        }\n      ],\n      "status": "PROPOSAL_STATUS_DEPOSIT_PERIOD",\n      "final_tally_result": {\n        "yes_count": "0",\n        "abstain_count": "0",\n        "no_count": "0",\n        "no_with_veto_count": "0"\n      },\n      "submit_time": "2022-03-28T14:02:41.165025015Z",\n      "deposit_end_time": "2022-03-30T14:02:41.165025015Z",\n      "total_deposit": [\n        {\n          "denom": "stake",\n          "amount": "10"\n        }\n      ],\n      "voting_start_time": null,\n      "voting_end_time": null,\n      "metadata": "AQ==",\n      "title": "Proposal Title",\n      "summary": "Proposal Summary"\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "2"\n  }\n}\n')),(0,o.kt)("h4",{id:"voter-vote"},"voter vote"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"votes")," endpoint allows users to query a vote for a given proposal."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1beta1/proposals/1/votes/cosmos1..\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "vote": {\n    "proposal_id": "1",\n    "voter": "cosmos1..",\n    "option": "VOTE_OPTION_YES",\n    "options": [\n      {\n        "option": "VOTE_OPTION_YES",\n        "weight": "1.000000000000000000"\n      }\n    ]\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1/proposals/1/votes/cosmos1..\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "vote": {\n    "proposal_id": "1",\n    "voter": "cosmos1..",\n    "options": [\n      {\n        "option": "VOTE_OPTION_YES",\n        "weight": "1.000000000000000000"\n      }\n    ],\n    "metadata": ""\n  }\n}\n')),(0,o.kt)("h4",{id:"votes-2"},"votes"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"votes")," endpoint allows users to query all votes for a given proposal."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1beta1/proposals/{proposal_id}/votes\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1beta1/proposals/1/votes\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "votes": [\n    {\n      "proposal_id": "1",\n      "voter": "cosmos1..",\n      "option": "VOTE_OPTION_YES",\n      "options": [\n        {\n          "option": "VOTE_OPTION_YES",\n          "weight": "1.000000000000000000"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1/proposals/{proposal_id}/votes\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1/proposals/1/votes\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "votes": [\n    {\n      "proposal_id": "1",\n      "voter": "cosmos1..",\n      "options": [\n        {\n          "option": "VOTE_OPTION_YES",\n          "weight": "1.000000000000000000"\n        }\n      ],\n      "metadata": ""\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,o.kt)("h4",{id:"params-2"},"params"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"params")," endpoint allows users to query all parameters for the ",(0,o.kt)("inlineCode",{parentName:"p"},"gov")," module."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1beta1/params/{params_type}\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1beta1/params/voting\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "voting_params": {\n    "voting_period": "172800s"\n  },\n  "deposit_params": {\n    "min_deposit": [\n    ],\n    "max_deposit_period": "0s"\n  },\n  "tally_params": {\n    "quorum": "0.000000000000000000",\n    "threshold": "0.000000000000000000",\n    "veto_threshold": "0.000000000000000000"\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1/params/{params_type}\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1/params/voting\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "voting_params": {\n    "voting_period": "172800s"\n  },\n  "deposit_params": {\n    "min_deposit": [\n    ],\n    "max_deposit_period": "0s"\n  },\n  "tally_params": {\n    "quorum": "0.000000000000000000",\n    "threshold": "0.000000000000000000",\n    "veto_threshold": "0.000000000000000000"\n  }\n}\n')),(0,o.kt)("h4",{id:"deposits-2"},"deposits"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"deposits")," endpoint allows users to query a deposit for a given proposal from a given depositor."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1beta1/proposals/1/deposits/cosmos1..\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "deposit": {\n    "proposal_id": "1",\n    "depositor": "cosmos1..",\n    "amount": [\n      {\n        "denom": "stake",\n        "amount": "10000000"\n      }\n    ]\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1/proposals/1/deposits/cosmos1..\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "deposit": {\n    "proposal_id": "1",\n    "depositor": "cosmos1..",\n    "amount": [\n      {\n        "denom": "stake",\n        "amount": "10000000"\n      }\n    ]\n  }\n}\n')),(0,o.kt)("h4",{id:"proposal-deposits"},"proposal deposits"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"deposits")," endpoint allows users to query all deposits for a given proposal."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1beta1/proposals/1/deposits\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "deposits": [\n    {\n      "proposal_id": "1",\n      "depositor": "cosmos1..",\n      "amount": [\n        {\n          "denom": "stake",\n          "amount": "10000000"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1/proposals/{proposal_id}/deposits\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1/proposals/1/deposits\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "deposits": [\n    {\n      "proposal_id": "1",\n      "depositor": "cosmos1..",\n      "amount": [\n        {\n          "denom": "stake",\n          "amount": "10000000"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,o.kt)("h4",{id:"tally-1"},"tally"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"tally")," endpoint allows users to query the tally of a given proposal."),(0,o.kt)("p",null,"Using legacy v1beta1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1beta1/proposals/{proposal_id}/tally\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1beta1/proposals/1/tally\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "tally": {\n    "yes": "1000000",\n    "abstain": "0",\n    "no": "0",\n    "no_with_veto": "0"\n  }\n}\n')),(0,o.kt)("p",null,"Using v1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/gov/v1/proposals/{proposal_id}/tally\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/gov/v1/proposals/1/tally\n")),(0,o.kt)("p",null,"Example Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "tally": {\n    "yes": "1000000",\n    "abstain": "0",\n    "no": "0",\n    "no_with_veto": "0"\n  }\n}\n')),(0,o.kt)("h2",{id:"metadata"},"Metadata"),(0,o.kt)("p",null,"The gov module has two locations for metadata where users can provide further context about the on-chain actions they are taking. By default all metadata fields have a 255 character length field where metadata can be stored in json format, either on-chain or off-chain depending on the amount of data required. Here we provide a recommendation for the json structure and where the data should be stored. There are two important factors in making these recommendations. First, that the gov and group modules are consistent with one another, note the number of proposals made by all groups may be quite large. Second, that client applications such as block explorers and governance interfaces have confidence in the consistency of metadata structure accross chains."),(0,o.kt)("h3",{id:"proposal-3"},"Proposal"),(0,o.kt)("p",null,"Location: off-chain as json object stored on IPFS (mirrors ",(0,o.kt)("a",{parentName:"p",href:"/main/modules/group/#metadata"},"group proposal"),")"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "",\n  "authors": [""],\n  "summary": "",\n  "details": "",\n  "proposal_forum_url": "",\n  "vote_option_context": "",\n}\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"authors")," field is an array of strings, this is to allow for multiple authors to be listed in the metadata.\nIn v0.46, the ",(0,o.kt)("inlineCode",{parentName:"p"},"authors")," field is a comma-separated string. Frontends are encouraged to support both formats for backwards compatibility.")),(0,o.kt)("h3",{id:"vote-5"},"Vote"),(0,o.kt)("p",null,"Location: on-chain as json within 255 character limit (mirrors ",(0,o.kt)("a",{parentName:"p",href:"/main/modules/group/#metadata"},"group vote"),")"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "justification": "",\n}\n')),(0,o.kt)("h2",{id:"future-improvements"},"Future Improvements"),(0,o.kt)("p",null,"The current documentation only describes the minimum viable product for the\ngovernance module. Future improvements may include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"BountyProposals"),":")," If accepted, a ",(0,o.kt)("inlineCode",{parentName:"li"},"BountyProposal")," creates an open\nbounty. The ",(0,o.kt)("inlineCode",{parentName:"li"},"BountyProposal")," specifies how many Atoms will be given upon\ncompletion. These Atoms will be taken from the ",(0,o.kt)("inlineCode",{parentName:"li"},"reserve pool"),". After a\n",(0,o.kt)("inlineCode",{parentName:"li"},"BountyProposal")," is accepted by governance, anybody can submit a\n",(0,o.kt)("inlineCode",{parentName:"li"},"SoftwareUpgradeProposal")," with the code to claim the bounty. Note that once a\n",(0,o.kt)("inlineCode",{parentName:"li"},"BountyProposal")," is accepted, the corresponding funds in the ",(0,o.kt)("inlineCode",{parentName:"li"},"reserve pool"),"\nare locked so that payment can always be honored. In order to link a\n",(0,o.kt)("inlineCode",{parentName:"li"},"SoftwareUpgradeProposal")," to an open bounty, the submitter of the\n",(0,o.kt)("inlineCode",{parentName:"li"},"SoftwareUpgradeProposal")," will use the ",(0,o.kt)("inlineCode",{parentName:"li"},"Proposal.LinkedProposal")," attribute.\nIf a ",(0,o.kt)("inlineCode",{parentName:"li"},"SoftwareUpgradeProposal")," linked to an open bounty is accepted by\ngovernance, the funds that were reserved are automatically transferred to the\nsubmitter."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Complex delegation:")," Delegators could choose other representatives than\ntheir validators. Ultimately, the chain of representatives would always end\nup to a validator, but delegators could inherit the vote of their chosen\nrepresentative before they inherit the vote of their validator. In other\nwords, they would only inherit the vote of their validator if their other\nappointed representative did not vote."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Better process for proposal review:")," There would be two parts to\n",(0,o.kt)("inlineCode",{parentName:"li"},"proposal.Deposit"),", one for anti-spam (same as in MVP) and an other one to\nreward third party auditors.")))}m.isMDXComponent=!0}}]);