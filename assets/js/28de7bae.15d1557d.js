"use strict";(self.webpackChunkcosmos_sdk_docs=self.webpackChunkcosmos_sdk_docs||[]).push([[1112],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=d(a),g=l,k=u["".concat(s,".").concat(g)]||u[g]||m[g]||o;return a?n.createElement(k,i(i({ref:t},p),{},{components:a})):n.createElement(k,i({ref:t},p))}));function g(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=a.length,i=new Array(o);i[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:l,i[1]=r;for(var d=2;d<o;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},62778:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var n=a(87462),l=(a(67294),a(3905));const o={sidebar_position:1},i="x/staking",r={unversionedId:"modules/staking/README",id:"modules/staking/README",title:"x/staking",description:"Abstract",source:"@site/docs/modules/staking/README.md",sourceDirName:"modules/staking",slug:"/modules/staking/",permalink:"/main/modules/staking/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"x/slashing",permalink:"/main/modules/slashing/"},next:{title:"x/upgrade",permalink:"/main/modules/upgrade/"}},s={},d=[{value:"Abstract",id:"abstract",level:2},{value:"Contents",id:"contents",level:2},{value:"State",id:"state",level:2},{value:"Pool",id:"pool",level:3},{value:"LastTotalPower",id:"lasttotalpower",level:3},{value:"ValidatorUpdates",id:"validatorupdates",level:3},{value:"UnbondingID",id:"unbondingid",level:3},{value:"Params",id:"params",level:3},{value:"Validator",id:"validator",level:3},{value:"Delegation",id:"delegation",level:3},{value:"Delegator Shares",id:"delegator-shares",level:4},{value:"UnbondingDelegation",id:"unbondingdelegation",level:3},{value:"Redelegation",id:"redelegation",level:3},{value:"Queues",id:"queues",level:3},{value:"UnbondingDelegationQueue",id:"unbondingdelegationqueue",level:4},{value:"RedelegationQueue",id:"redelegationqueue",level:4},{value:"ValidatorQueue",id:"validatorqueue",level:4},{value:"HistoricalInfo",id:"historicalinfo",level:3},{value:"State Transitions",id:"state-transitions",level:2},{value:"Validators",id:"validators",level:3},{value:"Not bonded to Bonded",id:"not-bonded-to-bonded",level:4},{value:"Bonded to Unbonding",id:"bonded-to-unbonding",level:4},{value:"Unbonding to Unbonded",id:"unbonding-to-unbonded",level:4},{value:"Jail/Unjail",id:"jailunjail",level:4},{value:"Delegations",id:"delegations",level:3},{value:"Delegate",id:"delegate",level:4},{value:"Begin Unbonding",id:"begin-unbonding",level:4},{value:"Cancel an <code>UnbondingDelegation</code> Entry",id:"cancel-an-unbondingdelegation-entry",level:4},{value:"Complete Unbonding",id:"complete-unbonding",level:4},{value:"Begin Redelegation",id:"begin-redelegation",level:4},{value:"Complete Redelegation",id:"complete-redelegation",level:4},{value:"Slashing",id:"slashing",level:3},{value:"Slash Validator",id:"slash-validator",level:4},{value:"Slash Unbonding Delegation",id:"slash-unbonding-delegation",level:4},{value:"Slash Redelegation",id:"slash-redelegation",level:4},{value:"How Shares are calculated",id:"how-shares-are-calculated",level:3},{value:"Messages",id:"messages",level:2},{value:"MsgCreateValidator",id:"msgcreatevalidator",level:3},{value:"MsgEditValidator",id:"msgeditvalidator",level:3},{value:"MsgDelegate",id:"msgdelegate",level:3},{value:"MsgUndelegate",id:"msgundelegate",level:3},{value:"MsgCancelUnbondingDelegation",id:"msgcancelunbondingdelegation",level:3},{value:"MsgBeginRedelegate",id:"msgbeginredelegate",level:3},{value:"MsgUpdateParams",id:"msgupdateparams",level:3},{value:"Begin-Block",id:"begin-block",level:2},{value:"Historical Info Tracking",id:"historical-info-tracking",level:3},{value:"End-Block",id:"end-block",level:2},{value:"Validator Set Changes",id:"validator-set-changes",level:3},{value:"Queues",id:"queues-1",level:3},{value:"Unbonding Validators",id:"unbonding-validators",level:4},{value:"Unbonding Delegations",id:"unbonding-delegations",level:4},{value:"Redelegations",id:"redelegations",level:4},{value:"Hooks",id:"hooks",level:2},{value:"Events",id:"events",level:2},{value:"EndBlocker",id:"endblocker",level:3},{value:"Msg&#39;s",id:"msgs",level:2},{value:"MsgCreateValidator",id:"msgcreatevalidator-1",level:3},{value:"MsgEditValidator",id:"msgeditvalidator-1",level:3},{value:"MsgDelegate",id:"msgdelegate-1",level:3},{value:"MsgUndelegate",id:"msgundelegate-1",level:3},{value:"MsgCancelUnbondingDelegation",id:"msgcancelunbondingdelegation-1",level:3},{value:"MsgBeginRedelegate",id:"msgbeginredelegate-1",level:3},{value:"Parameters",id:"parameters",level:2},{value:"Client",id:"client",level:2},{value:"CLI",id:"cli",level:3},{value:"Query",id:"query",level:4},{value:"delegation",id:"delegation-1",level:5},{value:"delegations",id:"delegations-1",level:5},{value:"delegations-to",id:"delegations-to",level:5},{value:"historical-info",id:"historical-info",level:5},{value:"params",id:"params-1",level:5},{value:"pool",id:"pool-1",level:5},{value:"redelegation",id:"redelegation-1",level:5},{value:"redelegations",id:"redelegations-1",level:5},{value:"redelegations-from",id:"redelegations-from",level:5},{value:"unbonding-delegation",id:"unbonding-delegation",level:5},{value:"unbonding-delegations",id:"unbonding-delegations-1",level:5},{value:"unbonding-delegations-from",id:"unbonding-delegations-from",level:5},{value:"validator",id:"validator-1",level:5},{value:"validators",id:"validators-1",level:5},{value:"Transactions",id:"transactions",level:4},{value:"create-validator",id:"create-validator",level:5},{value:"delegate",id:"delegate-1",level:5},{value:"edit-validator",id:"edit-validator",level:5},{value:"redelegate",id:"redelegate",level:5},{value:"unbond",id:"unbond",level:5},{value:"cancel unbond",id:"cancel-unbond",level:5},{value:"gRPC",id:"grpc",level:3},{value:"Validators",id:"validators-2",level:4},{value:"Validator",id:"validator-2",level:4},{value:"ValidatorDelegations",id:"validatordelegations",level:4},{value:"ValidatorUnbondingDelegations",id:"validatorunbondingdelegations",level:4},{value:"Delegation",id:"delegation-2",level:4},{value:"UnbondingDelegation",id:"unbondingdelegation-1",level:4},{value:"DelegatorDelegations",id:"delegatordelegations",level:4},{value:"DelegatorUnbondingDelegations",id:"delegatorunbondingdelegations",level:4},{value:"Redelegations",id:"redelegations-2",level:4},{value:"DelegatorValidators",id:"delegatorvalidators",level:4},{value:"DelegatorValidator",id:"delegatorvalidator",level:4},{value:"HistoricalInfo",id:"historicalinfo-1",level:4},{value:"Pool",id:"pool-2",level:4},{value:"Params",id:"params-2",level:4},{value:"REST",id:"rest",level:3},{value:"DelegatorDelegations",id:"delegatordelegations-1",level:4},{value:"Redelegations",id:"redelegations-3",level:4},{value:"DelegatorUnbondingDelegations",id:"delegatorunbondingdelegations-1",level:4},{value:"DelegatorValidators",id:"delegatorvalidators-1",level:4},{value:"DelegatorValidator",id:"delegatorvalidator-1",level:4},{value:"HistoricalInfo",id:"historicalinfo-2",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Pool",id:"pool-3",level:4},{value:"Validators",id:"validators-3",level:4},{value:"Validator",id:"validator-3",level:4},{value:"ValidatorDelegations",id:"validatordelegations-1",level:4},{value:"Delegation",id:"delegation-3",level:4},{value:"UnbondingDelegation",id:"unbondingdelegation-2",level:4},{value:"ValidatorUnbondingDelegations",id:"validatorunbondingdelegations-1",level:4}],p={toc:d};function m(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"xstaking"},(0,l.kt)("inlineCode",{parentName:"h1"},"x/staking")),(0,l.kt)("h2",{id:"abstract"},"Abstract"),(0,l.kt)("p",null,"This paper specifies the Staking module of the Cosmos SDK that was first\ndescribed in the ",(0,l.kt)("a",{parentName:"p",href:"https://cosmos.network/about/whitepaper"},"Cosmos Whitepaper"),"\nin June 2016."),(0,l.kt)("p",null,"The module enables Cosmos SDK-based blockchain to support an advanced\nProof-of-Stake (PoS) system. In this system, holders of the native staking token of\nthe chain can become validators and can delegate tokens to validators,\nultimately determining the effective validator set for the system."),(0,l.kt)("p",null,"This module is used in the Cosmos Hub, the first Hub in the Cosmos\nnetwork."),(0,l.kt)("h2",{id:"contents"},"Contents"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#state"},"State"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#pool"},"Pool")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#lasttotalpower"},"LastTotalPower")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#validatorupdates"},"ValidatorUpdates")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#unbondingid"},"UnbondingID")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#params"},"Params")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#validator"},"Validator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#delegation"},"Delegation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#unbondingdelegation"},"UnbondingDelegation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#redelegation"},"Redelegation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#queues"},"Queues")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#historicalinfo"},"HistoricalInfo")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#state-transitions"},"State Transitions"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#validators"},"Validators")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#delegations"},"Delegations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#slashing"},"Slashing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#how-shares-are-calculated"},"How Shares are calculated")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#messages"},"Messages"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#msgcreatevalidator"},"MsgCreateValidator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#msgeditvalidator"},"MsgEditValidator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#msgdelegate"},"MsgDelegate")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#msgundelegate"},"MsgUndelegate")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#msgcancelunbondingdelegation"},"MsgCancelUnbondingDelegation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#msgbeginredelegate"},"MsgBeginRedelegate")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#msgupdateparams"},"MsgUpdateParams")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#begin-block"},"Begin-Block"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#historical-info-tracking"},"Historical Info Tracking")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#end-block"},"End-Block"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#validator-set-changes"},"Validator Set Changes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#queues-1"},"Queues")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#hooks"},"Hooks")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#events"},"Events"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#endblocker"},"EndBlocker")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#msgs"},"Msg's")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#parameters"},"Parameters")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#client"},"Client"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#cli"},"CLI")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#grpc"},"gRPC")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#rest"},"REST"))))),(0,l.kt)("h2",{id:"state"},"State"),(0,l.kt)("h3",{id:"pool"},"Pool"),(0,l.kt)("p",null,"Pool is used for tracking bonded and not-bonded token supply of the bond denomination."),(0,l.kt)("h3",{id:"lasttotalpower"},"LastTotalPower"),(0,l.kt)("p",null,'LastTotalPower tracks the total amounts of bonded tokens recorded during the previous end block.\nStore entries prefixed with "Last" must remain unchanged until EndBlock.'),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"LastTotalPower: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x12 -> ProtocolBuffer(math.Int)"))),(0,l.kt)("h3",{id:"validatorupdates"},"ValidatorUpdates"),(0,l.kt)("p",null,"ValidatorUpdates contains the validator updates returned to ABCI at the end of every block.\nThe values are overwritten in every block. "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ValidatorUpdates ",(0,l.kt)("inlineCode",{parentName:"li"},"0x61 -> []abci.ValidatorUpdate"))),(0,l.kt)("h3",{id:"unbondingid"},"UnbondingID"),(0,l.kt)("p",null,"UnbondingID stores the ID of the latest unbonding operation. It enables to create unique IDs for unbonding operation, i.e., UnbondingID is incremented every time a new unbonding operation (validator unbonding, unbonding delegation, redelegation) is initiated."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"UnbondingID: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x37 -> uint64"))),(0,l.kt)("h3",{id:"params"},"Params"),(0,l.kt)("p",null,"The staking module stores its params in state with the prefix of ",(0,l.kt)("inlineCode",{parentName:"p"},"0x51"),",\nit can be updated with governance or the address with authority."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Params: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x51 | ProtocolBuffer(Params)"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/staking.proto#L310-L333\n")),(0,l.kt)("h3",{id:"validator"},"Validator"),(0,l.kt)("p",null,"Validators can have one of three statuses"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Unbonded"),": The validator is not in the active set. They cannot sign blocks and do not earn\nrewards. They can receive delegations."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Bonded"),": Once the validator receives sufficient bonded tokens they automatically join the\nactive set during ",(0,l.kt)("a",{parentName:"li",href:"#validator-set-changes"},(0,l.kt)("inlineCode",{parentName:"a"},"EndBlock"))," and their status is updated to ",(0,l.kt)("inlineCode",{parentName:"li"},"Bonded"),".\nThey are signing blocks and receiving rewards. They can receive further delegations.\nThey can be slashed for misbehavior. Delegators to this validator who unbond their delegation\nmust wait the duration of the UnbondingTime, a chain-specific param, during which time\nthey are still slashable for offences of the source validator if those offences were committed\nduring the period of time that the tokens were bonded."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Unbonding"),": When a validator leaves the active set, either by choice or due to slashing, jailing or\ntombstoning, an unbonding of all their delegations begins. All delegations must then wait the UnbondingTime\nbefore their tokens are moved to their accounts from the ",(0,l.kt)("inlineCode",{parentName:"li"},"BondedPool"),".")),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Tombstoning is permanent, once tombstoned a validators consensus key can not be reused within the chain where the tombstoning happened. ")),(0,l.kt)("p",null,"Validators objects should be primarily stored and accessed by the\n",(0,l.kt)("inlineCode",{parentName:"p"},"OperatorAddr"),", an SDK validator address for the operator of the validator. Two\nadditional indices are maintained per validator object in order to fulfill\nrequired lookups for slashing and validator-set updates. A third special index\n(",(0,l.kt)("inlineCode",{parentName:"p"},"LastValidatorPower"),") is also maintained which however remains constant\nthroughout each block, unlike the first two indices which mirror the validator\nrecords within a block."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Validators: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x21 | OperatorAddrLen (1 byte) | OperatorAddr -> ProtocolBuffer(validator)")),(0,l.kt)("li",{parentName:"ul"},"ValidatorsByConsAddr: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x22 | ConsAddrLen (1 byte) | ConsAddr -> OperatorAddr")),(0,l.kt)("li",{parentName:"ul"},"ValidatorsByPower: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x23 | BigEndian(ConsensusPower) | OperatorAddrLen (1 byte) | OperatorAddr -> OperatorAddr")),(0,l.kt)("li",{parentName:"ul"},"LastValidatorsPower: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x11 | OperatorAddrLen (1 byte) | OperatorAddr -> ProtocolBuffer(ConsensusPower)")),(0,l.kt)("li",{parentName:"ul"},"ValidatorsByUnbondingID: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x38 | UnbondingID ->  0x21 | OperatorAddrLen (1 byte) | OperatorAddr"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Validators")," is the primary index - it ensures that each operator can have only one\nassociated validator, where the public key of that validator can change in the\nfuture. Delegators can refer to the immutable operator of the validator, without\nconcern for the changing public key."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorsByUnbondingID")," is an additional index that enables lookups for\nvalidators by the unbonding IDs corresponding to their current unbonding."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorByConsAddr")," is an additional index that enables lookups for slashing.\nWhen CometBFT reports evidence, it provides the validator address, so this\nmap is needed to find the operator. Note that the ",(0,l.kt)("inlineCode",{parentName:"p"},"ConsAddr")," corresponds to the\naddress which can be derived from the validator's ",(0,l.kt)("inlineCode",{parentName:"p"},"ConsPubKey"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorsByPower")," is an additional index that provides a sorted list of\npotential validators to quickly determine the current active set. Here\nConsensusPower is validator.Tokens/10^6 by default. Note that all validators\nwhere ",(0,l.kt)("inlineCode",{parentName:"p"},"Jailed")," is true are not stored within this index."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"LastValidatorsPower")," is a special index that provides a historical list of the\nlast-block's bonded validators. This index remains constant during a block but\nis updated during the validator set update process which takes place in ",(0,l.kt)("a",{parentName:"p",href:"#end-block"},(0,l.kt)("inlineCode",{parentName:"a"},"EndBlock")),"."),(0,l.kt)("p",null,"Each validator's state is stored in a ",(0,l.kt)("inlineCode",{parentName:"p"},"Validator")," struct:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/staking.proto#L82-L138\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/staking.proto#L26-L80\n")),(0,l.kt)("h3",{id:"delegation"},"Delegation"),(0,l.kt)("p",null,"Delegations are identified by combining ",(0,l.kt)("inlineCode",{parentName:"p"},"DelegatorAddr")," (the address of the delegator)\nwith the ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorAddr")," Delegators are indexed in the store as follows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Delegation: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x31 | DelegatorAddrLen (1 byte) | DelegatorAddr | ValidatorAddrLen (1 byte) | ValidatorAddr -> ProtocolBuffer(delegation)"))),(0,l.kt)("p",null,"Stake holders may delegate coins to validators; under this circumstance their\nfunds are held in a ",(0,l.kt)("inlineCode",{parentName:"p"},"Delegation")," data structure. It is owned by one\ndelegator, and is associated with the shares for one validator. The sender of\nthe transaction is the owner of the bond."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/staking.proto#L198-L216\n")),(0,l.kt)("h4",{id:"delegator-shares"},"Delegator Shares"),(0,l.kt)("p",null,"When one Delegates tokens to a Validator they are issued a number of delegator shares based on a\ndynamic exchange rate, calculated as follows from the total number of tokens delegated to the\nvalidator and the number of shares issued so far:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Shares per Token = validator.TotalShares() / validator.Tokens()")),(0,l.kt)("p",null,"Only the number of shares received is stored on the DelegationEntry. When a delegator then\nUndelegates, the token amount they receive is calculated from the number of shares they currently\nhold and the inverse exchange rate:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Tokens per Share = validator.Tokens() / validatorShares()")),(0,l.kt)("p",null,"These ",(0,l.kt)("inlineCode",{parentName:"p"},"Shares")," are simply an accounting mechanism. They are not a fungible asset. The reason for\nthis mechanism is to simplify the accounting around slashing. Rather than iteratively slashing the\ntokens of every delegation entry, instead the Validators total bonded tokens can be slashed,\neffectively reducing the value of each issued delegator share."),(0,l.kt)("h3",{id:"unbondingdelegation"},"UnbondingDelegation"),(0,l.kt)("p",null,"Shares in a ",(0,l.kt)("inlineCode",{parentName:"p"},"Delegation")," can be unbonded, but they must for some time exist as\nan ",(0,l.kt)("inlineCode",{parentName:"p"},"UnbondingDelegation"),", where shares can be reduced if Byzantine behavior is\ndetected."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"UnbondingDelegation")," are indexed in the store as:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"UnbondingDelegation: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x32 | DelegatorAddrLen (1 byte) | DelegatorAddr | ValidatorAddrLen (1 byte) | ValidatorAddr -> ProtocolBuffer(unbondingDelegation)")),(0,l.kt)("li",{parentName:"ul"},"UnbondingDelegationsFromValidator: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x33 | ValidatorAddrLen (1 byte) | ValidatorAddr | DelegatorAddrLen (1 byte) | DelegatorAddr -> nil")),(0,l.kt)("li",{parentName:"ul"},"UnbondingDelegationByUnbondingId: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x38 | UnbondingId -> 0x32 | DelegatorAddrLen (1 byte) | DelegatorAddr | ValidatorAddrLen (1 byte) | ValidatorAddr"),(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation")," is used in queries, to lookup all unbonding delegations for\na given delegator.")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"UnbondingDelegationsFromValidator")," is used in slashing, to lookup all\nunbonding delegations associated with a given validator that need to be\nslashed."),(0,l.kt)("p",null," ",(0,l.kt)("inlineCode",{parentName:"p"},"UnbondingDelegationByUnbondingId")," is an additional index that enables\nlookups for unbonding delegations by the unbonding IDs of the containing\nunbonding delegation entries."),(0,l.kt)("p",null,"A UnbondingDelegation object is created every time an unbonding is initiated."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/staking.proto#L218-L261\n")),(0,l.kt)("h3",{id:"redelegation"},"Redelegation"),(0,l.kt)("p",null,"The bonded tokens worth of a ",(0,l.kt)("inlineCode",{parentName:"p"},"Delegation")," may be instantly redelegated from a\nsource validator to a different validator (destination validator). However when\nthis occurs they must be tracked in a ",(0,l.kt)("inlineCode",{parentName:"p"},"Redelegation")," object, whereby their\nshares can be slashed if their tokens have contributed to a Byzantine fault\ncommitted by the source validator."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Redelegation")," are indexed in the store as:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Redelegations: ",(0,l.kt)("inlineCode",{parentName:"p"},"0x34 | DelegatorAddrLen (1 byte) | DelegatorAddr | ValidatorAddrLen (1 byte) | ValidatorSrcAddr | ValidatorDstAddr -> ProtocolBuffer(redelegation)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"RedelegationsBySrc: ",(0,l.kt)("inlineCode",{parentName:"p"},"0x35 | ValidatorSrcAddrLen (1 byte) | ValidatorSrcAddr | ValidatorDstAddrLen (1 byte) | ValidatorDstAddr | DelegatorAddrLen (1 byte) | DelegatorAddr -> nil"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"RedelegationsByDst: ",(0,l.kt)("inlineCode",{parentName:"p"},"0x36 | ValidatorDstAddrLen (1 byte) | ValidatorDstAddr | ValidatorSrcAddrLen (1 byte) | ValidatorSrcAddr | DelegatorAddrLen (1 byte) | DelegatorAddr -> nil"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"RedelegationByUnbondingId: ",(0,l.kt)("inlineCode",{parentName:"p"},"0x38 | UnbondingId -> 0x34 | DelegatorAddrLen (1 byte) | DelegatorAddr | ValidatorAddrLen (1 byte) | ValidatorSrcAddr | ValidatorDstAddr")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"Redelegations")," is used for queries, to lookup all redelegations for a given\ndelegator."),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"RedelegationsBySrc")," is used for slashing based on the ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorSrcAddr"),"."),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"RedelegationsByDst")," is used for slashing based on the ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorDstAddr")))),(0,l.kt)("p",null,"The first map here is used for queries, to lookup all redelegations for a given\ndelegator. The second map is used for slashing based on the ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorSrcAddr"),",\nwhile the third map is for slashing based on the ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorDstAddr"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"RedelegationByUnbondingId")," is an additional index that enables\nlookups for redelegations by the unbonding IDs of the containing\nredelegation entries."),(0,l.kt)("p",null,'A redelegation object is created every time a redelegation occurs. To prevent\n"redelegation hopping" redelegations may not occur under the situation that:'),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the (re)delegator already has another immature redelegation in progress\nwith a destination to a validator (let's call it ",(0,l.kt)("inlineCode",{parentName:"li"},"Validator X"),")"),(0,l.kt)("li",{parentName:"ul"},"and, the (re)delegator is attempting to create a ",(0,l.kt)("em",{parentName:"li"},"new")," redelegation\nwhere the source validator for this new redelegation is ",(0,l.kt)("inlineCode",{parentName:"li"},"Validator X"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/staking.proto#L263-L308\n")),(0,l.kt)("h3",{id:"queues"},"Queues"),(0,l.kt)("p",null,"All queues objects are sorted by timestamp. The time used within any queue is\nfirst rounded to the nearest nanosecond then sorted. The sortable time format\nused is a slight modification of the RFC3339Nano and uses the format string\n",(0,l.kt)("inlineCode",{parentName:"p"},'"2006-01-02T15:04:05.000000000"'),". Notably this format:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"right pads all zeros"),(0,l.kt)("li",{parentName:"ul"},"drops the time zone info (uses UTC)")),(0,l.kt)("p",null,"In all cases, the stored timestamp represents the maturation time of the queue\nelement."),(0,l.kt)("h4",{id:"unbondingdelegationqueue"},"UnbondingDelegationQueue"),(0,l.kt)("p",null,"For the purpose of tracking progress of unbonding delegations the unbonding\ndelegations queue is kept."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"UnbondingDelegation: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x41 | format(time) -> []DVPair"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/staking.proto#L162-L172\n")),(0,l.kt)("h4",{id:"redelegationqueue"},"RedelegationQueue"),(0,l.kt)("p",null,"For the purpose of tracking progress of redelegations the redelegation queue is\nkept."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"RedelegationQueue: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x42 | format(time) -> []DVVTriplet"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/staking.proto#L179-L191\n")),(0,l.kt)("h4",{id:"validatorqueue"},"ValidatorQueue"),(0,l.kt)("p",null,"For the purpose of tracking progress of unbonding validators the validator\nqueue is kept."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ValidatorQueueTime: ",(0,l.kt)("inlineCode",{parentName:"li"},"0x43 | format(time) -> []sdk.ValAddress"))),(0,l.kt)("p",null,"The stored object as each key is an array of validator operator addresses from\nwhich the validator object can be accessed. Typically it is expected that only\na single validator record will be associated with a given timestamp however it is possible\nthat multiple validators exist in the queue at the same location."),(0,l.kt)("h3",{id:"historicalinfo"},"HistoricalInfo"),(0,l.kt)("p",null,"HistoricalInfo objects are stored and pruned at each block such that the staking keeper persists\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," most recent historical info defined by staking module parameter: ",(0,l.kt)("inlineCode",{parentName:"p"},"HistoricalEntries"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/staking.proto#L17-L24\n")),(0,l.kt)("p",null,"At each BeginBlock, the staking keeper will persist the current Header and the Validators that committed\nthe current block in a ",(0,l.kt)("inlineCode",{parentName:"p"},"HistoricalInfo")," object. The Validators are sorted on their address to ensure that\nthey are in a deterministic order.\nThe oldest HistoricalEntries will be pruned to ensure that there only exist the parameter-defined number of\nhistorical entries."),(0,l.kt)("h2",{id:"state-transitions"},"State Transitions"),(0,l.kt)("h3",{id:"validators"},"Validators"),(0,l.kt)("p",null,"State transitions in validators are performed on every ",(0,l.kt)("a",{parentName:"p",href:"#validator-set-changes"},(0,l.kt)("inlineCode",{parentName:"a"},"EndBlock")),"\nin order to check for changes in the active ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorSet"),"."),(0,l.kt)("p",null,"A validator can be ",(0,l.kt)("inlineCode",{parentName:"p"},"Unbonded"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Unbonding")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"Bonded"),". ",(0,l.kt)("inlineCode",{parentName:"p"},"Unbonded"),"\nand ",(0,l.kt)("inlineCode",{parentName:"p"},"Unbonding")," are collectively called ",(0,l.kt)("inlineCode",{parentName:"p"},"Not Bonded"),". A validator can move\ndirectly between all the states, except for from ",(0,l.kt)("inlineCode",{parentName:"p"},"Bonded")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"Unbonded"),"."),(0,l.kt)("h4",{id:"not-bonded-to-bonded"},"Not bonded to Bonded"),(0,l.kt)("p",null,"The following transition occurs when a validator's ranking in the ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorPowerIndex")," surpasses\nthat of the ",(0,l.kt)("inlineCode",{parentName:"p"},"LastValidator"),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"set ",(0,l.kt)("inlineCode",{parentName:"li"},"validator.Status")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"Bonded")),(0,l.kt)("li",{parentName:"ul"},"send the ",(0,l.kt)("inlineCode",{parentName:"li"},"validator.Tokens")," from the ",(0,l.kt)("inlineCode",{parentName:"li"},"NotBondedTokens")," to the ",(0,l.kt)("inlineCode",{parentName:"li"},"BondedPool")," ",(0,l.kt)("inlineCode",{parentName:"li"},"ModuleAccount")),(0,l.kt)("li",{parentName:"ul"},"delete the existing record from ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorByPowerIndex")),(0,l.kt)("li",{parentName:"ul"},"add a new updated record to the ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorByPowerIndex")),(0,l.kt)("li",{parentName:"ul"},"update the ",(0,l.kt)("inlineCode",{parentName:"li"},"Validator")," object for this validator"),(0,l.kt)("li",{parentName:"ul"},"if it exists, delete any ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorQueue")," record for this validator")),(0,l.kt)("h4",{id:"bonded-to-unbonding"},"Bonded to Unbonding"),(0,l.kt)("p",null,"When a validator begins the unbonding process the following operations occur:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"send the ",(0,l.kt)("inlineCode",{parentName:"li"},"validator.Tokens")," from the ",(0,l.kt)("inlineCode",{parentName:"li"},"BondedPool")," to the ",(0,l.kt)("inlineCode",{parentName:"li"},"NotBondedTokens")," ",(0,l.kt)("inlineCode",{parentName:"li"},"ModuleAccount")),(0,l.kt)("li",{parentName:"ul"},"set ",(0,l.kt)("inlineCode",{parentName:"li"},"validator.Status")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"Unbonding")),(0,l.kt)("li",{parentName:"ul"},"delete the existing record from ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorByPowerIndex")),(0,l.kt)("li",{parentName:"ul"},"add a new updated record to the ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorByPowerIndex")),(0,l.kt)("li",{parentName:"ul"},"update the ",(0,l.kt)("inlineCode",{parentName:"li"},"Validator")," object for this validator"),(0,l.kt)("li",{parentName:"ul"},"insert a new record into the ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorQueue")," for this validator")),(0,l.kt)("h4",{id:"unbonding-to-unbonded"},"Unbonding to Unbonded"),(0,l.kt)("p",null,"A validator moves from unbonding to unbonded when the ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorQueue")," object\nmoves from bonded to unbonded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"update the ",(0,l.kt)("inlineCode",{parentName:"li"},"Validator")," object for this validator"),(0,l.kt)("li",{parentName:"ul"},"set ",(0,l.kt)("inlineCode",{parentName:"li"},"validator.Status")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"Unbonded"))),(0,l.kt)("h4",{id:"jailunjail"},"Jail/Unjail"),(0,l.kt)("p",null,"when a validator is jailed it is effectively removed from the CometBFT set.\nthis process may be also be reversed. the following operations occur:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"set ",(0,l.kt)("inlineCode",{parentName:"li"},"Validator.Jailed")," and update object"),(0,l.kt)("li",{parentName:"ul"},"if jailed delete record from ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorByPowerIndex")),(0,l.kt)("li",{parentName:"ul"},"if unjailed add record to ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorByPowerIndex"))),(0,l.kt)("p",null,"Jailed validators are not present in any of the following stores:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the power store (from consensus power to address)")),(0,l.kt)("h3",{id:"delegations"},"Delegations"),(0,l.kt)("h4",{id:"delegate"},"Delegate"),(0,l.kt)("p",null,"When a delegation occurs both the validator and the delegation objects are affected"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"determine the delegators shares based on tokens delegated and the validator's exchange rate"),(0,l.kt)("li",{parentName:"ul"},"remove tokens from the sending account"),(0,l.kt)("li",{parentName:"ul"},"add shares the delegation object or add them to a created validator object"),(0,l.kt)("li",{parentName:"ul"},"add new delegator shares and update the ",(0,l.kt)("inlineCode",{parentName:"li"},"Validator")," object"),(0,l.kt)("li",{parentName:"ul"},"transfer the ",(0,l.kt)("inlineCode",{parentName:"li"},"delegation.Amount")," from the delegator's account to the ",(0,l.kt)("inlineCode",{parentName:"li"},"BondedPool")," or the ",(0,l.kt)("inlineCode",{parentName:"li"},"NotBondedPool")," ",(0,l.kt)("inlineCode",{parentName:"li"},"ModuleAccount")," depending if the ",(0,l.kt)("inlineCode",{parentName:"li"},"validator.Status")," is ",(0,l.kt)("inlineCode",{parentName:"li"},"Bonded")," or not"),(0,l.kt)("li",{parentName:"ul"},"delete the existing record from ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorByPowerIndex")),(0,l.kt)("li",{parentName:"ul"},"add an new updated record to the ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorByPowerIndex"))),(0,l.kt)("h4",{id:"begin-unbonding"},"Begin Unbonding"),(0,l.kt)("p",null,"As a part of the Undelegate and Complete Unbonding state transitions Unbond\nDelegation may be called."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"subtract the unbonded shares from delegator"),(0,l.kt)("li",{parentName:"ul"},"add the unbonded tokens to an ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegationEntry")),(0,l.kt)("li",{parentName:"ul"},"update the delegation or remove the delegation if there are no more shares"),(0,l.kt)("li",{parentName:"ul"},"if the delegation is the operator of the validator and no more shares exist then trigger a jail validator"),(0,l.kt)("li",{parentName:"ul"},"update the validator with removed the delegator shares and associated coins"),(0,l.kt)("li",{parentName:"ul"},"if the validator state is ",(0,l.kt)("inlineCode",{parentName:"li"},"Bonded"),", transfer the ",(0,l.kt)("inlineCode",{parentName:"li"},"Coins")," worth of the unbonded\nshares from the ",(0,l.kt)("inlineCode",{parentName:"li"},"BondedPool")," to the ",(0,l.kt)("inlineCode",{parentName:"li"},"NotBondedPool")," ",(0,l.kt)("inlineCode",{parentName:"li"},"ModuleAccount")),(0,l.kt)("li",{parentName:"ul"},"remove the validator if it is unbonded and there are no more delegation shares."),(0,l.kt)("li",{parentName:"ul"},"remove the validator if it is unbonded and there are no more delegation shares"),(0,l.kt)("li",{parentName:"ul"},"get a unique ",(0,l.kt)("inlineCode",{parentName:"li"},"unbondingId")," and map it to the ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegationEntry")," in ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegationByUnbondingId")," "),(0,l.kt)("li",{parentName:"ul"},"call the ",(0,l.kt)("inlineCode",{parentName:"li"},"AfterUnbondingInitiated(unbondingId)")," hook"),(0,l.kt)("li",{parentName:"ul"},"add the unbonding delegation to ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegationQueue")," with the completion time set to ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingTime"))),(0,l.kt)("h4",{id:"cancel-an-unbondingdelegation-entry"},"Cancel an ",(0,l.kt)("inlineCode",{parentName:"h4"},"UnbondingDelegation")," Entry"),(0,l.kt)("p",null,"When a ",(0,l.kt)("inlineCode",{parentName:"p"},"cancel unbond delegation")," occurs both the ",(0,l.kt)("inlineCode",{parentName:"p"},"validator"),", the ",(0,l.kt)("inlineCode",{parentName:"p"},"delegation")," and an ",(0,l.kt)("inlineCode",{parentName:"p"},"UnbondingDelegationQueue")," state will be updated."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"if cancel unbonding delegation amount equals to the ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation")," entry ",(0,l.kt)("inlineCode",{parentName:"li"},"balance"),", then the ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation")," entry deleted from ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegationQueue"),"."),(0,l.kt)("li",{parentName:"ul"},"if the ",(0,l.kt)("inlineCode",{parentName:"li"},"cancel unbonding delegation amount is less than the "),"UnbondingDelegation",(0,l.kt)("inlineCode",{parentName:"li"},"entry balance, then the"),"UnbondingDelegation",(0,l.kt)("inlineCode",{parentName:"li"},"entry will be updated with new balance in the"),"UnbondingDelegationQueue`. "),(0,l.kt)("li",{parentName:"ul"},"cancel ",(0,l.kt)("inlineCode",{parentName:"li"},"amount")," is ",(0,l.kt)("a",{parentName:"li",href:"#delegations"},"Delegated")," back to  the original ",(0,l.kt)("inlineCode",{parentName:"li"},"validator"),".")),(0,l.kt)("h4",{id:"complete-unbonding"},"Complete Unbonding"),(0,l.kt)("p",null,"For undelegations which do not complete immediately, the following operations\noccur when the unbonding delegation queue element matures:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"remove the entry from the ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation")," object"),(0,l.kt)("li",{parentName:"ul"},"transfer the tokens from the ",(0,l.kt)("inlineCode",{parentName:"li"},"NotBondedPool")," ",(0,l.kt)("inlineCode",{parentName:"li"},"ModuleAccount")," to the delegator ",(0,l.kt)("inlineCode",{parentName:"li"},"Account"))),(0,l.kt)("h4",{id:"begin-redelegation"},"Begin Redelegation"),(0,l.kt)("p",null,"Redelegations affect the delegation, source and destination validators."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"perform an ",(0,l.kt)("inlineCode",{parentName:"li"},"unbond")," delegation from the source validator to retrieve the tokens worth of the unbonded shares"),(0,l.kt)("li",{parentName:"ul"},"using the unbonded tokens, ",(0,l.kt)("inlineCode",{parentName:"li"},"Delegate")," them to the destination validator"),(0,l.kt)("li",{parentName:"ul"},"if the ",(0,l.kt)("inlineCode",{parentName:"li"},"sourceValidator.Status")," is ",(0,l.kt)("inlineCode",{parentName:"li"},"Bonded"),", and the ",(0,l.kt)("inlineCode",{parentName:"li"},"destinationValidator")," is not,\ntransfer the newly delegated tokens from the ",(0,l.kt)("inlineCode",{parentName:"li"},"BondedPool")," to the ",(0,l.kt)("inlineCode",{parentName:"li"},"NotBondedPool")," ",(0,l.kt)("inlineCode",{parentName:"li"},"ModuleAccount")),(0,l.kt)("li",{parentName:"ul"},"otherwise, if the ",(0,l.kt)("inlineCode",{parentName:"li"},"sourceValidator.Status")," is not ",(0,l.kt)("inlineCode",{parentName:"li"},"Bonded"),", and the ",(0,l.kt)("inlineCode",{parentName:"li"},"destinationValidator"),"\nis ",(0,l.kt)("inlineCode",{parentName:"li"},"Bonded"),", transfer the newly delegated tokens from the ",(0,l.kt)("inlineCode",{parentName:"li"},"NotBondedPool")," to the ",(0,l.kt)("inlineCode",{parentName:"li"},"BondedPool")," ",(0,l.kt)("inlineCode",{parentName:"li"},"ModuleAccount")),(0,l.kt)("li",{parentName:"ul"},"record the token amount in an new entry in the relevant ",(0,l.kt)("inlineCode",{parentName:"li"},"Redelegation"))),(0,l.kt)("p",null,'From when a redelegation begins until it completes, the delegator is in a state of "pseudo-unbonding", and can still be\nslashed for infractions that occurred before the redelegation began.'),(0,l.kt)("h4",{id:"complete-redelegation"},"Complete Redelegation"),(0,l.kt)("p",null,"When a redelegations complete the following occurs:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"remove the entry from the ",(0,l.kt)("inlineCode",{parentName:"li"},"Redelegation")," object")),(0,l.kt)("h3",{id:"slashing"},"Slashing"),(0,l.kt)("h4",{id:"slash-validator"},"Slash Validator"),(0,l.kt)("p",null,"When a Validator is slashed, the following occurs:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The total ",(0,l.kt)("inlineCode",{parentName:"li"},"slashAmount")," is calculated as the ",(0,l.kt)("inlineCode",{parentName:"li"},"slashFactor")," (a chain parameter) ","*"," ",(0,l.kt)("inlineCode",{parentName:"li"},"TokensFromConsensusPower"),",\nthe total number of tokens bonded to the validator at the time of the infraction."),(0,l.kt)("li",{parentName:"ul"},"Every unbonding delegation and pseudo-unbonding redelegation such that the infraction occured before the unbonding or\nredelegation began from the validator are slashed by the ",(0,l.kt)("inlineCode",{parentName:"li"},"slashFactor")," percentage of the initialBalance."),(0,l.kt)("li",{parentName:"ul"},"Each amount slashed from redelegations and unbonding delegations is subtracted from the\ntotal slash amount."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"remaingSlashAmount")," is then slashed from the validator's tokens in the ",(0,l.kt)("inlineCode",{parentName:"li"},"BondedPool")," or\n",(0,l.kt)("inlineCode",{parentName:"li"},"NonBondedPool")," depending on the validator's status. This reduces the total supply of tokens.")),(0,l.kt)("p",null,"In the case of a slash due to any infraction that requires evidence to submitted (for example double-sign), the slash\noccurs at the block where the evidence is included, not at the block where the infraction occured.\nPut otherwise, validators are not slashed retroactively, only when they are caught."),(0,l.kt)("h4",{id:"slash-unbonding-delegation"},"Slash Unbonding Delegation"),(0,l.kt)("p",null,"When a validator is slashed, so are those unbonding delegations from the validator that began unbonding\nafter the time of the infraction. Every entry in every unbonding delegation from the validator\nis slashed by ",(0,l.kt)("inlineCode",{parentName:"p"},"slashFactor"),". The amount slashed is calculated from the ",(0,l.kt)("inlineCode",{parentName:"p"},"InitialBalance")," of the\ndelegation and is capped to prevent a resulting negative balance. Completed (or mature) unbondings are not slashed."),(0,l.kt)("h4",{id:"slash-redelegation"},"Slash Redelegation"),(0,l.kt)("p",null,"When a validator is slashed, so are all redelegations from the validator that began after the\ninfraction. Redelegations are slashed by ",(0,l.kt)("inlineCode",{parentName:"p"},"slashFactor"),".\nRedelegations that began before the infraction are not slashed.\nThe amount slashed is calculated from the ",(0,l.kt)("inlineCode",{parentName:"p"},"InitialBalance")," of the delegation and is capped to\nprevent a resulting negative balance.\nMature redelegations (that have completed pseudo-unbonding) are not slashed."),(0,l.kt)("h3",{id:"how-shares-are-calculated"},"How Shares are calculated"),(0,l.kt)("p",null,"At any given point in time, each validator has a number of tokens, ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),", and has a number of shares issued, ",(0,l.kt)("inlineCode",{parentName:"p"},"S"),".\nEach delegator, ",(0,l.kt)("inlineCode",{parentName:"p"},"i"),", holds a number of shares, ",(0,l.kt)("inlineCode",{parentName:"p"},"S_i"),".\nThe number of tokens is the sum of all tokens delegated to the validator, plus the rewards, minus the slashes."),(0,l.kt)("p",null,"The delegator is entitled to a portion of the underlying tokens proportional to their proportion of shares.\nSo delegator ",(0,l.kt)("inlineCode",{parentName:"p"},"i")," is entitled to ",(0,l.kt)("inlineCode",{parentName:"p"},"T * S_i / S")," of the validator's tokens."),(0,l.kt)("p",null,"When a delegator delegates new tokens to the validator, they receive a number of shares proportional to their contribution.\nSo when delegator ",(0,l.kt)("inlineCode",{parentName:"p"},"j")," delegates ",(0,l.kt)("inlineCode",{parentName:"p"},"T_j")," tokens, they receive ",(0,l.kt)("inlineCode",{parentName:"p"},"S_j = S * T_j / T")," shares.\nThe total number of tokens is now ",(0,l.kt)("inlineCode",{parentName:"p"},"T + T_j"),", and the total number of shares is ",(0,l.kt)("inlineCode",{parentName:"p"},"S + S_j"),".\n",(0,l.kt)("inlineCode",{parentName:"p"},"j"),"s proportion of the shares is the same as their proportion of the total tokens contributed: ",(0,l.kt)("inlineCode",{parentName:"p"},"(S + S_j) / S = (T + T_j) / T"),"."),(0,l.kt)("p",null,"A special case is the initial delegation, when ",(0,l.kt)("inlineCode",{parentName:"p"},"T = 0")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"S = 0"),", so ",(0,l.kt)("inlineCode",{parentName:"p"},"T_j / T")," is undefined.\nFor the initial delegation, delegator ",(0,l.kt)("inlineCode",{parentName:"p"},"j")," who delegates ",(0,l.kt)("inlineCode",{parentName:"p"},"T_j")," tokens receive ",(0,l.kt)("inlineCode",{parentName:"p"},"S_j = T_j")," shares.\nSo a validator that hasn't received any rewards and has not been slashed will have ",(0,l.kt)("inlineCode",{parentName:"p"},"T = S"),"."),(0,l.kt)("h2",{id:"messages"},"Messages"),(0,l.kt)("p",null,"In this section we describe the processing of the staking messages and the corresponding updates to the state. All created/modified state objects specified by each message are defined within the ",(0,l.kt)("a",{parentName:"p",href:"#state"},"state")," section."),(0,l.kt)("h3",{id:"msgcreatevalidator"},"MsgCreateValidator"),(0,l.kt)("p",null,"A validator is created using the ",(0,l.kt)("inlineCode",{parentName:"p"},"MsgCreateValidator")," message.\nThe validator must be created with an initial delegation from the operator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L20-L21\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L50-L73\n")),(0,l.kt)("p",null,"This message is expected to fail if:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"another validator with this operator address is already registered"),(0,l.kt)("li",{parentName:"ul"},"another validator with this pubkey is already registered"),(0,l.kt)("li",{parentName:"ul"},"the initial self-delegation tokens are of a denom not specified as the bonding denom"),(0,l.kt)("li",{parentName:"ul"},"the commission parameters are faulty, namely:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MaxRate")," is either > 1 or < 0"),(0,l.kt)("li",{parentName:"ul"},"the initial ",(0,l.kt)("inlineCode",{parentName:"li"},"Rate")," is either negative or > ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxRate")),(0,l.kt)("li",{parentName:"ul"},"the initial ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxChangeRate")," is either negative or > ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxRate")))),(0,l.kt)("li",{parentName:"ul"},"the description fields are too large")),(0,l.kt)("p",null,"This message creates and stores the ",(0,l.kt)("inlineCode",{parentName:"p"},"Validator")," object at appropriate indexes.\nAdditionally a self-delegation is made with the initial tokens delegation\ntokens ",(0,l.kt)("inlineCode",{parentName:"p"},"Delegation"),". The validator always starts as unbonded but may be bonded\nin the first end-block."),(0,l.kt)("h3",{id:"msgeditvalidator"},"MsgEditValidator"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Description"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"CommissionRate")," of a validator can be updated using the\n",(0,l.kt)("inlineCode",{parentName:"p"},"MsgEditValidator")," message."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L23-L24\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L78-L97\n")),(0,l.kt)("p",null,"This message is expected to fail if:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the initial ",(0,l.kt)("inlineCode",{parentName:"li"},"CommissionRate")," is either negative or > ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxRate")),(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"CommissionRate")," has already been updated within the previous 24 hours"),(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"CommissionRate")," is > ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxChangeRate")),(0,l.kt)("li",{parentName:"ul"},"the description fields are too large")),(0,l.kt)("p",null,"This message stores the updated ",(0,l.kt)("inlineCode",{parentName:"p"},"Validator")," object."),(0,l.kt)("h3",{id:"msgdelegate"},"MsgDelegate"),(0,l.kt)("p",null,"Within this message the delegator provides coins, and in return receives\nsome amount of their validator's (newly created) delegator-shares that are\nassigned to ",(0,l.kt)("inlineCode",{parentName:"p"},"Delegation.Shares"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L26-L28\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L102-L114\n")),(0,l.kt)("p",null,"This message is expected to fail if:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the validator does not exist"),(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"Amount")," ",(0,l.kt)("inlineCode",{parentName:"li"},"Coin")," has a denomination different than one defined by ",(0,l.kt)("inlineCode",{parentName:"li"},"params.BondDenom")),(0,l.kt)("li",{parentName:"ul"},"the exchange rate is invalid, meaning the validator has no tokens (due to slashing) but there are outstanding shares"),(0,l.kt)("li",{parentName:"ul"},"the amount delegated is less than the minimum allowed delegation")),(0,l.kt)("p",null,"If an existing ",(0,l.kt)("inlineCode",{parentName:"p"},"Delegation")," object for provided addresses does not already\nexist then it is created as part of this message otherwise the existing\n",(0,l.kt)("inlineCode",{parentName:"p"},"Delegation")," is updated to include the newly received shares."),(0,l.kt)("p",null,"The delegator receives newly minted shares at the current exchange rate.\nThe exchange rate is the number of existing shares in the validator divided by\nthe number of currently delegated tokens."),(0,l.kt)("p",null,"The validator is updated in the ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorByPower")," index, and the delegation is\ntracked in validator object in the ",(0,l.kt)("inlineCode",{parentName:"p"},"Validators")," index."),(0,l.kt)("p",null,"It is possible to delegate to a jailed validator, the only difference being it\nwill not be added to the power index until it is unjailed."),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/cosmos/cosmos-sdk/release/v0.46.x/docs/uml/svg/delegation_sequence.svg",alt:"Delegation sequence"})),(0,l.kt)("h3",{id:"msgundelegate"},"MsgUndelegate"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"MsgUndelegate")," message allows delegators to undelegate their tokens from\nvalidator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L34-L36\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L140-L152\n")),(0,l.kt)("p",null,"This message returns a response containing the completion time of the undelegation:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L154-L158\n")),(0,l.kt)("p",null,"This message is expected to fail if:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the delegation doesn't exist"),(0,l.kt)("li",{parentName:"ul"},"the validator doesn't exist"),(0,l.kt)("li",{parentName:"ul"},"the delegation has less shares than the ones worth of ",(0,l.kt)("inlineCode",{parentName:"li"},"Amount")),(0,l.kt)("li",{parentName:"ul"},"existing ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation")," has maximum entries as defined by ",(0,l.kt)("inlineCode",{parentName:"li"},"params.MaxEntries")),(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"Amount")," has a denomination different than one defined by ",(0,l.kt)("inlineCode",{parentName:"li"},"params.BondDenom"))),(0,l.kt)("p",null,"When this message is processed the following actions occur:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"validator's ",(0,l.kt)("inlineCode",{parentName:"li"},"DelegatorShares")," and the delegation's ",(0,l.kt)("inlineCode",{parentName:"li"},"Shares")," are both reduced by the message ",(0,l.kt)("inlineCode",{parentName:"li"},"SharesAmount")),(0,l.kt)("li",{parentName:"ul"},"calculate the token worth of the shares remove that amount tokens held within the validator"),(0,l.kt)("li",{parentName:"ul"},"with those removed tokens, if the validator is:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Bonded")," - add them to an entry in ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation")," (create ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation")," if it doesn't exist) with a completion time a full unbonding period from the current time. Update pool shares to reduce BondedTokens and increase NotBondedTokens by token worth of the shares."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Unbonding")," - add them to an entry in ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation")," (create ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation")," if it doesn't exist) with the same completion time as the validator (",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingMinTime"),")."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Unbonded")," - then send the coins the message ",(0,l.kt)("inlineCode",{parentName:"li"},"DelegatorAddr")))),(0,l.kt)("li",{parentName:"ul"},"if there are no more ",(0,l.kt)("inlineCode",{parentName:"li"},"Shares")," in the delegation, then the delegation object is removed from the store",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"under this situation if the delegation is the validator's self-delegation then also jail the validator.")))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/cosmos/cosmos-sdk/release/v0.46.x/docs/uml/svg/unbond_sequence.svg",alt:"Unbond sequence"})),(0,l.kt)("h3",{id:"msgcancelunbondingdelegation"},"MsgCancelUnbondingDelegation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"MsgCancelUnbondingDelegation")," message allows delegators to cancel the ",(0,l.kt)("inlineCode",{parentName:"p"},"unbondingDelegation")," entry and delegate back to a previous validator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L38-L42\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L160-L175\n")),(0,l.kt)("p",null,"This message is expected to fail if:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"unbondingDelegation")," entry is already processed."),(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"cancel unbonding delegation")," amount is greater than the ",(0,l.kt)("inlineCode",{parentName:"li"},"unbondingDelegation")," entry balance."),(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"cancel unbonding delegation")," height doesn't exist in the ",(0,l.kt)("inlineCode",{parentName:"li"},"unbondingDelegationQueue")," of the delegator.")),(0,l.kt)("p",null,"When this message is processed the following actions occur:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"if the ",(0,l.kt)("inlineCode",{parentName:"li"},"unbondingDelegation")," Entry balance is zero ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"in this condition ",(0,l.kt)("inlineCode",{parentName:"li"},"unbondingDelegation")," entry will be removed from ",(0,l.kt)("inlineCode",{parentName:"li"},"unbondingDelegationQueue"),"."),(0,l.kt)("li",{parentName:"ul"},"otherwise ",(0,l.kt)("inlineCode",{parentName:"li"},"unbondingDelegationQueue")," will be updated with new ",(0,l.kt)("inlineCode",{parentName:"li"},"unbondingDelegation")," entry balance and initial balance"))),(0,l.kt)("li",{parentName:"ul"},"the validator's ",(0,l.kt)("inlineCode",{parentName:"li"},"DelegatorShares")," and the delegation's ",(0,l.kt)("inlineCode",{parentName:"li"},"Shares")," are both increased by the message ",(0,l.kt)("inlineCode",{parentName:"li"},"Amount"),".")),(0,l.kt)("h3",{id:"msgbeginredelegate"},"MsgBeginRedelegate"),(0,l.kt)("p",null,"The redelegation command allows delegators to instantly switch validators. Once\nthe unbonding period has passed, the redelegation is automatically completed in\nthe EndBlocker."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L30-L32\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L119-L132\n")),(0,l.kt)("p",null,"This message returns a response containing the completion time of the redelegation:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L133-L138\n")),(0,l.kt)("p",null,"This message is expected to fail if:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the delegation doesn't exist"),(0,l.kt)("li",{parentName:"ul"},"the source or destination validators don't exist"),(0,l.kt)("li",{parentName:"ul"},"the delegation has less shares than the ones worth of ",(0,l.kt)("inlineCode",{parentName:"li"},"Amount")),(0,l.kt)("li",{parentName:"ul"},"the source validator has a receiving redelegation which is not matured (aka. the redelegation may be transitive)"),(0,l.kt)("li",{parentName:"ul"},"existing ",(0,l.kt)("inlineCode",{parentName:"li"},"Redelegation")," has maximum entries as defined by ",(0,l.kt)("inlineCode",{parentName:"li"},"params.MaxEntries")),(0,l.kt)("li",{parentName:"ul"},"the ",(0,l.kt)("inlineCode",{parentName:"li"},"Amount")," ",(0,l.kt)("inlineCode",{parentName:"li"},"Coin")," has a denomination different than one defined by ",(0,l.kt)("inlineCode",{parentName:"li"},"params.BondDenom"))),(0,l.kt)("p",null,"When this message is processed the following actions occur:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the source validator's ",(0,l.kt)("inlineCode",{parentName:"li"},"DelegatorShares")," and the delegations ",(0,l.kt)("inlineCode",{parentName:"li"},"Shares")," are both reduced by the message ",(0,l.kt)("inlineCode",{parentName:"li"},"SharesAmount")),(0,l.kt)("li",{parentName:"ul"},"calculate the token worth of the shares remove that amount tokens held within the source validator."),(0,l.kt)("li",{parentName:"ul"},"if the source validator is:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Bonded")," - add an entry to the ",(0,l.kt)("inlineCode",{parentName:"li"},"Redelegation")," (create ",(0,l.kt)("inlineCode",{parentName:"li"},"Redelegation")," if it doesn't exist) with a completion time a full unbonding period from the current time. Update pool shares to reduce BondedTokens and increase NotBondedTokens by token worth of the shares (this may be effectively reversed in the next step however)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Unbonding")," - add an entry to the ",(0,l.kt)("inlineCode",{parentName:"li"},"Redelegation")," (create ",(0,l.kt)("inlineCode",{parentName:"li"},"Redelegation")," if it doesn't exist) with the same completion time as the validator (",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingMinTime"),")."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Unbonded")," - no action required in this step"))),(0,l.kt)("li",{parentName:"ul"},"Delegate the token worth to the destination validator, possibly moving tokens back to the bonded state."),(0,l.kt)("li",{parentName:"ul"},"if there are no more ",(0,l.kt)("inlineCode",{parentName:"li"},"Shares")," in the source delegation, then the source delegation object is removed from the store",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"under this situation if the delegation is the validator's self-delegation then also jail the validator.")))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/cosmos/cosmos-sdk/release/v0.46.x/docs/uml/svg/begin_redelegation_sequence.svg",alt:"Begin redelegation sequence"})),(0,l.kt)("h3",{id:"msgupdateparams"},"MsgUpdateParams"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"MsgUpdateParams")," update the staking module parameters.\nThe params are updated through a governance proposal where the signer is the gov module account address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/staking/v1beta1/tx.proto#L182-L195\n")),(0,l.kt)("p",null,"The message handling can fail if:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"signer is not the authority defined in the staking keeper (usually the gov module account).")),(0,l.kt)("h2",{id:"begin-block"},"Begin-Block"),(0,l.kt)("p",null,"Each abci begin block call, the historical info will get stored and pruned\naccording to the ",(0,l.kt)("inlineCode",{parentName:"p"},"HistoricalEntries")," parameter."),(0,l.kt)("h3",{id:"historical-info-tracking"},"Historical Info Tracking"),(0,l.kt)("p",null,"If the ",(0,l.kt)("inlineCode",{parentName:"p"},"HistoricalEntries")," parameter is 0, then the ",(0,l.kt)("inlineCode",{parentName:"p"},"BeginBlock")," performs a no-op."),(0,l.kt)("p",null,"Otherwise, the latest historical info is stored under the key ",(0,l.kt)("inlineCode",{parentName:"p"},"historicalInfoKey|height"),", while any entries older than ",(0,l.kt)("inlineCode",{parentName:"p"},"height - HistoricalEntries")," is deleted.\nIn most cases, this results in a single entry being pruned per block.\nHowever, if the parameter ",(0,l.kt)("inlineCode",{parentName:"p"},"HistoricalEntries")," has changed to a lower value there will be multiple entries in the store that must be pruned."),(0,l.kt)("h2",{id:"end-block"},"End-Block"),(0,l.kt)("p",null,"Each abci end block call, the operations to update queues and validator set\nchanges are specified to execute."),(0,l.kt)("h3",{id:"validator-set-changes"},"Validator Set Changes"),(0,l.kt)("p",null,"The staking validator set is updated during this process by state transitions\nthat run at the end of every block. As a part of this process any updated\nvalidators are also returned back to CometBFT for inclusion in the CometBFT\nvalidator set which is responsible for validating CometBFT messages at the\nconsensus layer. Operations are as following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the new validator set is taken as the top ",(0,l.kt)("inlineCode",{parentName:"li"},"params.MaxValidators")," number of\nvalidators retrieved from the ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidatorsByPower")," index"),(0,l.kt)("li",{parentName:"ul"},"the previous validator set is compared with the new validator set:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"missing validators begin unbonding and their ",(0,l.kt)("inlineCode",{parentName:"li"},"Tokens")," are transferred from the\n",(0,l.kt)("inlineCode",{parentName:"li"},"BondedPool")," to the ",(0,l.kt)("inlineCode",{parentName:"li"},"NotBondedPool")," ",(0,l.kt)("inlineCode",{parentName:"li"},"ModuleAccount")),(0,l.kt)("li",{parentName:"ul"},"new validators are instantly bonded and their ",(0,l.kt)("inlineCode",{parentName:"li"},"Tokens")," are transferred from the\n",(0,l.kt)("inlineCode",{parentName:"li"},"NotBondedPool")," to the ",(0,l.kt)("inlineCode",{parentName:"li"},"BondedPool")," ",(0,l.kt)("inlineCode",{parentName:"li"},"ModuleAccount"))))),(0,l.kt)("p",null,"In all cases, any validators leaving or entering the bonded validator set or\nchanging balances and staying within the bonded validator set incur an update\nmessage reporting their new consensus power which is passed back to CometBFT."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"LastTotalPower")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"LastValidatorsPower")," hold the state of the total power\nand validator power from the end of the last block, and are used to check for\nchanges that have occurred in ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorsByPower")," and the total new power, which\nis calculated during ",(0,l.kt)("inlineCode",{parentName:"p"},"EndBlock"),"."),(0,l.kt)("h3",{id:"queues-1"},"Queues"),(0,l.kt)("p",null,"Within staking, certain state-transitions are not instantaneous but take place\nover a duration of time (typically the unbonding period). When these\ntransitions are mature certain operations must take place in order to complete\nthe state operation. This is achieved through the use of queues which are\nchecked/processed at the end of each block."),(0,l.kt)("h4",{id:"unbonding-validators"},"Unbonding Validators"),(0,l.kt)("p",null,'When a validator is kicked out of the bonded validator set (either through\nbeing jailed, or not having sufficient bonded tokens) it begins the unbonding\nprocess along with all its delegations begin unbonding (while still being\ndelegated to this validator). At this point the validator is said to be an\n"unbonding validator", whereby it will mature to become an "unbonded validator"\nafter the unbonding period has passed.'),(0,l.kt)("p",null,"Each block the validator queue is to be checked for mature unbonding validators\n(namely with a completion time <= current time and completion height <= current\nblock height). At this point any mature validators which do not have any\ndelegations remaining are deleted from state. For all other mature unbonding\nvalidators that still have remaining delegations, the ",(0,l.kt)("inlineCode",{parentName:"p"},"validator.Status")," is\nswitched from ",(0,l.kt)("inlineCode",{parentName:"p"},"types.Unbonding")," to\n",(0,l.kt)("inlineCode",{parentName:"p"},"types.Unbonded"),"."),(0,l.kt)("p",null,"Unbonding operations can be put on hold by external modules via the ",(0,l.kt)("inlineCode",{parentName:"p"},"PutUnbondingOnHold(unbondingId)")," method.\nAs a result, an unbonding operation (e.g., an unbonding delegation) that is on hold, cannot complete\neven if it reaches maturity. For an unbonding operation with ",(0,l.kt)("inlineCode",{parentName:"p"},"unbondingId")," to eventually complete\n(after it reaches maturity), every call to ",(0,l.kt)("inlineCode",{parentName:"p"},"PutUnbondingOnHold(unbondingId)")," must be matched\nby a call to ",(0,l.kt)("inlineCode",{parentName:"p"},"UnbondingCanComplete(unbondingId)"),". "),(0,l.kt)("h4",{id:"unbonding-delegations"},"Unbonding Delegations"),(0,l.kt)("p",null,"Complete the unbonding of all mature ",(0,l.kt)("inlineCode",{parentName:"p"},"UnbondingDelegations.Entries")," within the\n",(0,l.kt)("inlineCode",{parentName:"p"},"UnbondingDelegations")," queue with the following procedure:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"transfer the balance coins to the delegator's wallet address"),(0,l.kt)("li",{parentName:"ul"},"remove the mature entry from ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation.Entries")),(0,l.kt)("li",{parentName:"ul"},"remove the ",(0,l.kt)("inlineCode",{parentName:"li"},"UnbondingDelegation")," object from the store if there are no\nremaining entries.")),(0,l.kt)("h4",{id:"redelegations"},"Redelegations"),(0,l.kt)("p",null,"Complete the unbonding of all mature ",(0,l.kt)("inlineCode",{parentName:"p"},"Redelegation.Entries")," within the\n",(0,l.kt)("inlineCode",{parentName:"p"},"Redelegations")," queue with the following procedure:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"remove the mature entry from ",(0,l.kt)("inlineCode",{parentName:"li"},"Redelegation.Entries")),(0,l.kt)("li",{parentName:"ul"},"remove the ",(0,l.kt)("inlineCode",{parentName:"li"},"Redelegation")," object from the store if there are no\nremaining entries.")),(0,l.kt)("h2",{id:"hooks"},"Hooks"),(0,l.kt)("p",null,"Other modules may register operations to execute when a certain event has\noccurred within staking.  These events can be registered to execute either\nright ",(0,l.kt)("inlineCode",{parentName:"p"},"Before")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"After")," the staking event (as per the hook name). The\nfollowing hooks can registered with staking:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"AfterValidatorCreated(Context, ValAddress) error"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"called when a validator is created"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"BeforeValidatorModified(Context, ValAddress) error"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"called when a validator's state is changed"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"AfterValidatorRemoved(Context, ConsAddress, ValAddress) error"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"called when a validator is deleted"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"AfterValidatorBonded(Context, ConsAddress, ValAddress) error"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"called when a validator is bonded"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"AfterValidatorBeginUnbonding(Context, ConsAddress, ValAddress) error"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"called when a validator begins unbonding"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"BeforeDelegationCreated(Context, AccAddress, ValAddress) error"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"called when a delegation is created"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"BeforeDelegationSharesModified(Context, AccAddress, ValAddress) error"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"called when a delegation's shares are modified"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"AfterDelegationModified(Context, AccAddress, ValAddress) error"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"called when a delegation is created or modified"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"BeforeDelegationRemoved(Context, AccAddress, ValAddress) error"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"called when a delegation is removed"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"AfterUnbondingInitiated(Context, UnbondingID)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"called when an unbonding operation (validator unbonding, unbonding delegation, redelegation) was initiated")))),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("p",null,"The staking module emits the following events:"),(0,l.kt)("h3",{id:"endblocker"},"EndBlocker"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"complete_unbonding"),(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"{totalUnbondingAmount}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"complete_unbonding"),(0,l.kt)("td",{parentName:"tr",align:null},"validator"),(0,l.kt)("td",{parentName:"tr",align:null},"{validatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"complete_unbonding"),(0,l.kt)("td",{parentName:"tr",align:null},"delegator"),(0,l.kt)("td",{parentName:"tr",align:null},"{delegatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"complete_redelegation"),(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"{totalRedelegationAmount}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"complete_redelegation"),(0,l.kt)("td",{parentName:"tr",align:null},"source_validator"),(0,l.kt)("td",{parentName:"tr",align:null},"{srcValidatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"complete_redelegation"),(0,l.kt)("td",{parentName:"tr",align:null},"destination_validator"),(0,l.kt)("td",{parentName:"tr",align:null},"{dstValidatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"complete_redelegation"),(0,l.kt)("td",{parentName:"tr",align:null},"delegator"),(0,l.kt)("td",{parentName:"tr",align:null},"{delegatorAddress}")))),(0,l.kt)("h2",{id:"msgs"},"Msg's"),(0,l.kt)("h3",{id:"msgcreatevalidator-1"},"MsgCreateValidator"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"create_validator"),(0,l.kt)("td",{parentName:"tr",align:null},"validator"),(0,l.kt)("td",{parentName:"tr",align:null},"{validatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"create_validator"),(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"{delegationAmount}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"module"),(0,l.kt)("td",{parentName:"tr",align:null},"staking")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"action"),(0,l.kt)("td",{parentName:"tr",align:null},"create_validator")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"sender"),(0,l.kt)("td",{parentName:"tr",align:null},"{senderAddress}")))),(0,l.kt)("h3",{id:"msgeditvalidator-1"},"MsgEditValidator"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"edit_validator"),(0,l.kt)("td",{parentName:"tr",align:null},"commission_rate"),(0,l.kt)("td",{parentName:"tr",align:null},"{commissionRate}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"edit_validator"),(0,l.kt)("td",{parentName:"tr",align:null},"min_self_delegation"),(0,l.kt)("td",{parentName:"tr",align:null},"{minSelfDelegation}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"module"),(0,l.kt)("td",{parentName:"tr",align:null},"staking")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"action"),(0,l.kt)("td",{parentName:"tr",align:null},"edit_validator")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"sender"),(0,l.kt)("td",{parentName:"tr",align:null},"{senderAddress}")))),(0,l.kt)("h3",{id:"msgdelegate-1"},"MsgDelegate"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"validator"),(0,l.kt)("td",{parentName:"tr",align:null},"{validatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delegate"),(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"{delegationAmount}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"module"),(0,l.kt)("td",{parentName:"tr",align:null},"staking")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"action"),(0,l.kt)("td",{parentName:"tr",align:null},"delegate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"sender"),(0,l.kt)("td",{parentName:"tr",align:null},"{senderAddress}")))),(0,l.kt)("h3",{id:"msgundelegate-1"},"MsgUndelegate"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"unbond"),(0,l.kt)("td",{parentName:"tr",align:null},"validator"),(0,l.kt)("td",{parentName:"tr",align:null},"{validatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"unbond"),(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"{unbondAmount}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"unbond"),(0,l.kt)("td",{parentName:"tr",align:null},"completion_time ","[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"{completionTime}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"module"),(0,l.kt)("td",{parentName:"tr",align:null},"staking")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"action"),(0,l.kt)("td",{parentName:"tr",align:null},"begin_unbonding")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"sender"),(0,l.kt)("td",{parentName:"tr",align:null},"{senderAddress}")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"[0]"," Time is formatted in the RFC3339 standard")),(0,l.kt)("h3",{id:"msgcancelunbondingdelegation-1"},"MsgCancelUnbondingDelegation"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cancel_unbonding_delegation"),(0,l.kt)("td",{parentName:"tr",align:null},"validator"),(0,l.kt)("td",{parentName:"tr",align:null},"{validatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cancel_unbonding_delegation"),(0,l.kt)("td",{parentName:"tr",align:null},"delegator"),(0,l.kt)("td",{parentName:"tr",align:null},"{delegatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cancel_unbonding_delegation"),(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"{cancelUnbondingDelegationAmount}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cancel_unbonding_delegation"),(0,l.kt)("td",{parentName:"tr",align:null},"creation_height"),(0,l.kt)("td",{parentName:"tr",align:null},"{unbondingCreationHeight}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"module"),(0,l.kt)("td",{parentName:"tr",align:null},"staking")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"action"),(0,l.kt)("td",{parentName:"tr",align:null},"cancel_unbond")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"sender"),(0,l.kt)("td",{parentName:"tr",align:null},"{senderAddress}")))),(0,l.kt)("h3",{id:"msgbeginredelegate-1"},"MsgBeginRedelegate"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"redelegate"),(0,l.kt)("td",{parentName:"tr",align:null},"source_validator"),(0,l.kt)("td",{parentName:"tr",align:null},"{srcValidatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"redelegate"),(0,l.kt)("td",{parentName:"tr",align:null},"destination_validator"),(0,l.kt)("td",{parentName:"tr",align:null},"{dstValidatorAddress}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"redelegate"),(0,l.kt)("td",{parentName:"tr",align:null},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"{unbondAmount}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"redelegate"),(0,l.kt)("td",{parentName:"tr",align:null},"completion_time ","[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"{completionTime}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"module"),(0,l.kt)("td",{parentName:"tr",align:null},"staking")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"action"),(0,l.kt)("td",{parentName:"tr",align:null},"begin_redelegate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"sender"),(0,l.kt)("td",{parentName:"tr",align:null},"{senderAddress}")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"[0]"," Time is formatted in the RFC3339 standard")),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("p",null,"The staking module contains the following parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"UnbondingTime"),(0,l.kt)("td",{parentName:"tr",align:null},"string (time ns)"),(0,l.kt)("td",{parentName:"tr",align:null},'"259200000000000"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MaxValidators"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"100")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"KeyMaxEntries"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"HistoricalEntries"),(0,l.kt)("td",{parentName:"tr",align:null},"uint16"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"BondDenom"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},'"stake"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MinCommissionRate"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},'"0.000000000000000000"')))),(0,l.kt)("h2",{id:"client"},"Client"),(0,l.kt)("h3",{id:"cli"},"CLI"),(0,l.kt)("p",null,"A user can query and interact with the ",(0,l.kt)("inlineCode",{parentName:"p"},"staking")," module using the CLI."),(0,l.kt)("h4",{id:"query"},"Query"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"query")," commands allows users to query ",(0,l.kt)("inlineCode",{parentName:"p"},"staking")," state."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking --help\n")),(0,l.kt)("h5",{id:"delegation-1"},"delegation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"delegation")," command allows users to query delegations for an individual delegator on an individual validator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking delegation [delegator-addr] [validator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking delegation cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'balance:\n  amount: "10000000000"\n  denom: stake\ndelegation:\n  delegator_address: cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n  shares: "10000000000.000000000000000000"\n  validator_address: cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n')),(0,l.kt)("h5",{id:"delegations-1"},"delegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"delegations")," command allows users to query delegations for an individual delegator on all validators."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking delegations [delegator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking delegations cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'delegation_responses:\n- balance:\n    amount: "10000000000"\n    denom: stake\n  delegation:\n    delegator_address: cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n    shares: "10000000000.000000000000000000"\n    validator_address: cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n- balance:\n    amount: "10000000000"\n    denom: stake\n  delegation:\n    delegator_address: cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n    shares: "10000000000.000000000000000000"\n    validator_address: cosmosvaloper1x20lytyf6zkcrv5edpkfkn8sz578qg5sqfyqnp\npagination:\n  next_key: null\n  total: "0"\n')),(0,l.kt)("h5",{id:"delegations-to"},"delegations-to"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"delegations-to")," command allows users to query delegations on an individual validator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking delegations-to [validator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking delegations-to cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'- balance:\n    amount: "504000000"\n    denom: stake\n  delegation:\n    delegator_address: cosmos1q2qwwynhv8kh3lu5fkeex4awau9x8fwt45f5cp\n    shares: "504000000.000000000000000000"\n    validator_address: cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n- balance:\n    amount: "78125000000"\n    denom: uixo\n  delegation:\n    delegator_address: cosmos1qvppl3479hw4clahe0kwdlfvf8uvjtcd99m2ca\n    shares: "78125000000.000000000000000000"\n    validator_address: cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\npagination:\n  next_key: null\n  total: "0"\n')),(0,l.kt)("h5",{id:"historical-info"},"historical-info"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"historical-info")," command allows users to query historical information at given height."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking historical-info [height] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking historical-info 10\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'header:\n  app_hash: Lbx8cXpI868wz8sgp4qPYVrlaKjevR5WP/IjUxwp3oo=\n  chain_id: testnet\n  consensus_hash: BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\n  data_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  evidence_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  height: "10"\n  last_block_id:\n    hash: RFbkpu6pWfSThXxKKl6EZVDnBSm16+U0l0xVjTX08Fk=\n    part_set_header:\n      hash: vpIvXD4rxD5GM4MXGz0Sad9I7//iVYLzZsEU4BVgWIU=\n      total: 1\n  last_commit_hash: Ne4uXyx4QtNp4Zx89kf9UK7oG9QVbdB6e7ZwZkhy8K0=\n  last_results_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  next_validators_hash: nGBgKeWBjoxeKFti00CxHsnULORgKY4LiuQwBuUrhCs=\n  proposer_address: mMEP2c2IRPLr99LedSRtBg9eONM=\n  time: "2021-10-01T06:00:49.785790894Z"\n  validators_hash: nGBgKeWBjoxeKFti00CxHsnULORgKY4LiuQwBuUrhCs=\n  version:\n    app: "0"\n    block: "11"\nvalset:\n- commission:\n    commission_rates:\n      max_change_rate: "0.010000000000000000"\n      max_rate: "0.200000000000000000"\n      rate: "0.100000000000000000"\n    update_time: "2021-10-01T05:52:50.380144238Z"\n  consensus_pubkey:\n    \'@type\': /cosmos.crypto.ed25519.PubKey\n    key: Auxs3865HpB/EfssYOzfqNhEJjzys2Fo6jD5B8tPgC8=\n  delegator_shares: "10000000.000000000000000000"\n  description:\n    details: ""\n    identity: ""\n    moniker: myvalidator\n    security_contact: ""\n    website: ""\n  jailed: false\n  min_self_delegation: "1"\n  operator_address: cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc\n  status: BOND_STATUS_BONDED\n  tokens: "10000000"\n  unbonding_height: "0"\n  unbonding_time: "1970-01-01T00:00:00Z"\n')),(0,l.kt)("h5",{id:"params-1"},"params"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," command allows users to query values set as staking parameters."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking params [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking params\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"bond_denom: stake\nhistorical_entries: 10000\nmax_entries: 7\nmax_validators: 50\nunbonding_time: 1814400s\n")),(0,l.kt)("h5",{id:"pool-1"},"pool"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"pool")," command allows users to query values for amounts stored in the staking pool."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd q staking pool [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd q staking pool\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'bonded_tokens: "10000000"\nnot_bonded_tokens: "0"\n')),(0,l.kt)("h5",{id:"redelegation-1"},"redelegation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"redelegation")," command allows users to query a redelegation record based on delegator and a source and destination validator address."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking redelegation [delegator-addr] [src-validator-addr] [dst-validator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking redelegation cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p cosmosvaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pagination: null\nredelegation_responses:\n- entries:\n  - balance: "50000000"\n    redelegation_entry:\n      completion_time: "2021-10-24T20:33:21.960084845Z"\n      creation_height: 2.382847e+06\n      initial_balance: "50000000"\n      shares_dst: "50000000.000000000000000000"\n  - balance: "5000000000"\n    redelegation_entry:\n      completion_time: "2021-10-25T21:33:54.446846862Z"\n      creation_height: 2.397271e+06\n      initial_balance: "5000000000"\n      shares_dst: "5000000000.000000000000000000"\n  redelegation:\n    delegator_address: cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n    entries: null\n    validator_dst_address: cosmosvaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm\n    validator_src_address: cosmosvaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm\n')),(0,l.kt)("h5",{id:"redelegations-1"},"redelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"redelegations")," command allows users to query all redelegation records for an individual delegator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking redelegations [delegator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking redelegation cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pagination:\n  next_key: null\n  total: "0"\nredelegation_responses:\n- entries:\n  - balance: "50000000"\n    redelegation_entry:\n      completion_time: "2021-10-24T20:33:21.960084845Z"\n      creation_height: 2.382847e+06\n      initial_balance: "50000000"\n      shares_dst: "50000000.000000000000000000"\n  - balance: "5000000000"\n    redelegation_entry:\n      completion_time: "2021-10-25T21:33:54.446846862Z"\n      creation_height: 2.397271e+06\n      initial_balance: "5000000000"\n      shares_dst: "5000000000.000000000000000000"\n  redelegation:\n    delegator_address: cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n    entries: null\n    validator_dst_address: cosmosvaloper1uccl5ugxrm7vqlzwqr04pjd320d2fz0z3hc6vm\n    validator_src_address: cosmosvaloper1zppjyal5emta5cquje8ndkpz0rs046m7zqxrpp\n- entries:\n  - balance: "562770000000"\n    redelegation_entry:\n      completion_time: "2021-10-25T21:42:07.336911677Z"\n      creation_height: 2.39735e+06\n      initial_balance: "562770000000"\n      shares_dst: "562770000000.000000000000000000"\n  redelegation:\n    delegator_address: cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n    entries: null\n    validator_dst_address: cosmosvaloper1uccl5ugxrm7vqlzwqr04pjd320d2fz0z3hc6vm\n    validator_src_address: cosmosvaloper1zppjyal5emta5cquje8ndkpz0rs046m7zqxrpp\n')),(0,l.kt)("h5",{id:"redelegations-from"},"redelegations-from"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"redelegations-from")," command allows users to query delegations that are redelegating ",(0,l.kt)("em",{parentName:"p"},"from")," a validator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking redelegations-from [validator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking redelegations-from cosmosvaloper1y4rzzrgl66eyhzt6gse2k7ej3zgwmngeleucjy\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pagination:\n  next_key: null\n  total: "0"\nredelegation_responses:\n- entries:\n  - balance: "50000000"\n    redelegation_entry:\n      completion_time: "2021-10-24T20:33:21.960084845Z"\n      creation_height: 2.382847e+06\n      initial_balance: "50000000"\n      shares_dst: "50000000.000000000000000000"\n  - balance: "5000000000"\n    redelegation_entry:\n      completion_time: "2021-10-25T21:33:54.446846862Z"\n      creation_height: 2.397271e+06\n      initial_balance: "5000000000"\n      shares_dst: "5000000000.000000000000000000"\n  redelegation:\n    delegator_address: cosmos1pm6e78p4pgn0da365plzl4t56pxy8hwtqp2mph\n    entries: null\n    validator_dst_address: cosmosvaloper1uccl5ugxrm7vqlzwqr04pjd320d2fz0z3hc6vm\n    validator_src_address: cosmosvaloper1y4rzzrgl66eyhzt6gse2k7ej3zgwmngeleucjy\n- entries:\n  - balance: "221000000"\n    redelegation_entry:\n      completion_time: "2021-10-05T21:05:45.669420544Z"\n      creation_height: 2.120693e+06\n      initial_balance: "221000000"\n      shares_dst: "221000000.000000000000000000"\n  redelegation:\n    delegator_address: cosmos1zqv8qxy2zgn4c58fz8jt8jmhs3d0attcussrf6\n    entries: null\n    validator_dst_address: cosmosvaloper10mseqwnwtjaqfrwwp2nyrruwmjp6u5jhah4c3y\n    validator_src_address: cosmosvaloper1y4rzzrgl66eyhzt6gse2k7ej3zgwmngeleucjy\n')),(0,l.kt)("h5",{id:"unbonding-delegation"},"unbonding-delegation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"unbonding-delegation")," command allows users to query unbonding delegations for an individual delegator on an individual validator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking unbonding-delegation [delegator-addr] [validator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking unbonding-delegation cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'delegator_address: cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\nentries:\n- balance: "52000000"\n  completion_time: "2021-11-02T11:35:55.391594709Z"\n  creation_height: "55078"\n  initial_balance: "52000000"\nvalidator_address: cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n')),(0,l.kt)("h5",{id:"unbonding-delegations-1"},"unbonding-delegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"unbonding-delegations")," command allows users to query all unbonding-delegations records for one delegator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking unbonding-delegations [delegator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking unbonding-delegations cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pagination:\n  next_key: null\n  total: "0"\nunbonding_responses:\n- delegator_address: cosmos1gghjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n  entries:\n  - balance: "52000000"\n    completion_time: "2021-11-02T11:35:55.391594709Z"\n    creation_height: "55078"\n    initial_balance: "52000000"\n  validator_address: cosmosvaloper1t8ehvswxjfn3ejzkjtntcyrqwvmvuknzmvtaaa\n\n')),(0,l.kt)("h5",{id:"unbonding-delegations-from"},"unbonding-delegations-from"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"unbonding-delegations-from")," command allows users to query delegations that are unbonding ",(0,l.kt)("em",{parentName:"p"},"from")," a validator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking unbonding-delegations-from [validator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking unbonding-delegations-from cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pagination:\n  next_key: null\n  total: "0"\nunbonding_responses:\n- delegator_address: cosmos1qqq9txnw4c77sdvzx0tkedsafl5s3vk7hn53fn\n  entries:\n  - balance: "150000000"\n    completion_time: "2021-11-01T21:41:13.098141574Z"\n    creation_height: "46823"\n    initial_balance: "150000000"\n  validator_address: cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n- delegator_address: cosmos1peteje73eklqau66mr7h7rmewmt2vt99y24f5z\n  entries:\n  - balance: "24000000"\n    completion_time: "2021-10-31T02:57:18.192280361Z"\n    creation_height: "21516"\n    initial_balance: "24000000"\n  validator_address: cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n')),(0,l.kt)("h5",{id:"validator-1"},"validator"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"validator")," command allows users to query details about an individual validator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking validator [validator-addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking validator cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'commission:\n  commission_rates:\n    max_change_rate: "0.020000000000000000"\n    max_rate: "0.200000000000000000"\n    rate: "0.050000000000000000"\n  update_time: "2021-10-01T19:24:52.663191049Z"\nconsensus_pubkey:\n  \'@type\': /cosmos.crypto.ed25519.PubKey\n  key: sIiexdJdYWn27+7iUHQJDnkp63gq/rzUq1Y+fxoGjXc=\ndelegator_shares: "32948270000.000000000000000000"\ndescription:\n  details: Witval is the validator arm from Vitwit. Vitwit is into software consulting\n    and services business since 2015. We are working closely with Cosmos ecosystem\n    since 2018. We are also building tools for the ecosystem, Aneka is our explorer\n    for the cosmos ecosystem.\n  identity: 51468B615127273A\n  moniker: Witval\n  security_contact: ""\n  website: ""\njailed: false\nmin_self_delegation: "1"\noperator_address: cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\nstatus: BOND_STATUS_BONDED\ntokens: "32948270000"\nunbonding_height: "0"\nunbonding_time: "1970-01-01T00:00:00Z"\n')),(0,l.kt)("h5",{id:"validators-1"},"validators"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"validators")," command allows users to query details about all validators on a network."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking validators [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd query staking validators\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pagination:\n  next_key: FPTi7TKAjN63QqZh+BaXn6gBmD5/\n  total: "0"\nvalidators:\ncommission:\n  commission_rates:\n    max_change_rate: "0.020000000000000000"\n    max_rate: "0.200000000000000000"\n    rate: "0.050000000000000000"\n  update_time: "2021-10-01T19:24:52.663191049Z"\nconsensus_pubkey:\n  \'@type\': /cosmos.crypto.ed25519.PubKey\n  key: sIiexdJdYWn27+7iUHQJDnkp63gq/rzUq1Y+fxoGjXc=\ndelegator_shares: "32948270000.000000000000000000"\ndescription:\n    details: Witval is the validator arm from Vitwit. Vitwit is into software consulting\n      and services business since 2015. We are working closely with Cosmos ecosystem\n      since 2018. We are also building tools for the ecosystem, Aneka is our explorer\n      for the cosmos ecosystem.\n    identity: 51468B615127273A\n    moniker: Witval\n    security_contact: ""\n    website: ""\n  jailed: false\n  min_self_delegation: "1"\n  operator_address: cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj\n  status: BOND_STATUS_BONDED\n  tokens: "32948270000"\n  unbonding_height: "0"\n  unbonding_time: "1970-01-01T00:00:00Z"\n- commission:\n    commission_rates:\n      max_change_rate: "0.100000000000000000"\n      max_rate: "0.200000000000000000"\n      rate: "0.050000000000000000"\n    update_time: "2021-10-04T18:02:21.446645619Z"\n  consensus_pubkey:\n    \'@type\': /cosmos.crypto.ed25519.PubKey\n    key: GDNpuKDmCg9GnhnsiU4fCWktuGUemjNfvpCZiqoRIYA=\n  delegator_shares: "559343421.000000000000000000"\n  description:\n    details: Noderunners is a professional validator in POS networks. We have a huge\n      node running experience, reliable soft and hardware. Our commissions are always\n      low, our support to delegators is always full. Stake with us and start receiving\n      your Cosmos rewards now!\n    identity: 812E82D12FEA3493\n    moniker: Noderunners\n    security_contact: info@noderunners.biz\n    website: http://noderunners.biz\n  jailed: false\n  min_self_delegation: "1"\n  operator_address: cosmosvaloper1q5ku90atkhktze83j9xjaks2p7uruag5zp6wt7\n  status: BOND_STATUS_BONDED\n  tokens: "559343421"\n  unbonding_height: "0"\n  unbonding_time: "1970-01-01T00:00:00Z"\n')),(0,l.kt)("h4",{id:"transactions"},"Transactions"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"tx")," commands allows users to interact with the ",(0,l.kt)("inlineCode",{parentName:"p"},"staking")," module."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking --help\n")),(0,l.kt)("h5",{id:"create-validator"},"create-validator"),(0,l.kt)("p",null,"The command ",(0,l.kt)("inlineCode",{parentName:"p"},"create-validator")," allows users to create new validator initialized with a self-delegation to it."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking create-validator [path/to/validator.json] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx staking create-validator /path/to/validator.json \\\n  --chain-id="name_of_chain_id" \\\n  --gas="auto" \\\n  --gas-adjustment="1.2" \\\n  --gas-prices="0.025stake" \\\n  --from=mykey\n')),(0,l.kt)("p",null,"where ",(0,l.kt)("inlineCode",{parentName:"p"},"validator.json")," contains:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pubkey": {"@type":"/cosmos.crypto.ed25519.PubKey","key":"BnbwFpeONLqvWqJb3qaUbL5aoIcW3fSuAp9nT3z5f20="},\n  "amount": "1000000stake",\n  "moniker": "my-moniker",\n  "website": "https://myweb.site",\n  "security": "security-contact@gmail.com",\n  "details": "description of your validator",\n  "commission-rate": "0.10",\n  "commission-max-rate": "0.20",\n  "commission-max-change-rate": "0.01",\n  "min-self-delegation": "1"\n}\n')),(0,l.kt)("p",null,"and pubkey can be obtained by using ",(0,l.kt)("inlineCode",{parentName:"p"},"simd tendermint show-validator")," command."),(0,l.kt)("h5",{id:"delegate-1"},"delegate"),(0,l.kt)("p",null,"The command ",(0,l.kt)("inlineCode",{parentName:"p"},"delegate")," allows users to delegate liquid tokens to a validator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking delegate [validator-addr] [amount] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking delegate cosmosvaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm 1000stake --from mykey\n")),(0,l.kt)("h5",{id:"edit-validator"},"edit-validator"),(0,l.kt)("p",null,"The command ",(0,l.kt)("inlineCode",{parentName:"p"},"edit-validator")," allows users to edit an existing validator account."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking edit-validator [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx staking edit-validator --moniker "new_moniker_name" --website "new_webiste_url" --from mykey\n')),(0,l.kt)("h5",{id:"redelegate"},"redelegate"),(0,l.kt)("p",null,"The command ",(0,l.kt)("inlineCode",{parentName:"p"},"redelegate")," allows users to redelegate illiquid tokens from one validator to another."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking redelegate [src-validator-addr] [dst-validator-addr] [amount] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking redelegate cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj cosmosvaloper1l2rsakp388kuv9k8qzq6lrm9taddae7fpx59wm 100stake --from mykey\n")),(0,l.kt)("h5",{id:"unbond"},"unbond"),(0,l.kt)("p",null,"The command ",(0,l.kt)("inlineCode",{parentName:"p"},"unbond")," allows users to unbond shares from a validator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking unbond [validator-addr] [amount] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking unbond cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 100stake --from mykey\n")),(0,l.kt)("h5",{id:"cancel-unbond"},"cancel unbond"),(0,l.kt)("p",null,"The command ",(0,l.kt)("inlineCode",{parentName:"p"},"cancel-unbond")," allow users to cancel the unbonding delegation entry and delegate back to the original validator."),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking cancel-unbond [validator-addr] [amount] [creation-height]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx staking cancel-unbond cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj 100stake 123123 --from mykey\n")),(0,l.kt)("h3",{id:"grpc"},"gRPC"),(0,l.kt)("p",null,"A user can query the ",(0,l.kt)("inlineCode",{parentName:"p"},"staking")," module using gRPC endpoints."),(0,l.kt)("h4",{id:"validators-2"},"Validators"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Validators")," endpoint queries all validators that match the given status."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/Validators\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"grpcurl -plaintext localhost:9090 cosmos.staking.v1beta1.Query/Validators\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "validators": [\n    {\n      "operatorAddress": "cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc",\n      "consensusPubkey": {"@type":"/cosmos.crypto.ed25519.PubKey","key":"Auxs3865HpB/EfssYOzfqNhEJjzys2Fo6jD5B8tPgC8="},\n      "status": "BOND_STATUS_BONDED",\n      "tokens": "10000000",\n      "delegatorShares": "10000000000000000000000000",\n      "description": {\n        "moniker": "myvalidator"\n      },\n      "unbondingTime": "1970-01-01T00:00:00Z",\n      "commission": {\n        "commissionRates": {\n          "rate": "100000000000000000",\n          "maxRate": "200000000000000000",\n          "maxChangeRate": "10000000000000000"\n        },\n        "updateTime": "2021-10-01T05:52:50.380144238Z"\n      },\n      "minSelfDelegation": "1"\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"validator-2"},"Validator"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Validator")," endpoint queries validator information for given validator address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/Validator\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext -d \'{"validator_addr":"cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc"}\' \\\nlocalhost:9090 cosmos.staking.v1beta1.Query/Validator\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "validator": {\n    "operatorAddress": "cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc",\n    "consensusPubkey": {"@type":"/cosmos.crypto.ed25519.PubKey","key":"Auxs3865HpB/EfssYOzfqNhEJjzys2Fo6jD5B8tPgC8="},\n    "status": "BOND_STATUS_BONDED",\n    "tokens": "10000000",\n    "delegatorShares": "10000000000000000000000000",\n    "description": {\n      "moniker": "myvalidator"\n    },\n    "unbondingTime": "1970-01-01T00:00:00Z",\n    "commission": {\n      "commissionRates": {\n        "rate": "100000000000000000",\n        "maxRate": "200000000000000000",\n        "maxChangeRate": "10000000000000000"\n      },\n      "updateTime": "2021-10-01T05:52:50.380144238Z"\n    },\n    "minSelfDelegation": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"validatordelegations"},"ValidatorDelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorDelegations")," endpoint queries delegate information for given validator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/ValidatorDelegations\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext -d \'{"validator_addr":"cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc"}\' \\\nlocalhost:9090 cosmos.staking.v1beta1.Query/ValidatorDelegations\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "delegationResponses": [\n    {\n      "delegation": {\n        "delegatorAddress": "cosmos1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgy3ua5t",\n        "validatorAddress": "cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc",\n        "shares": "10000000000000000000000000"\n      },\n      "balance": {\n        "denom": "stake",\n        "amount": "10000000"\n      }\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"validatorunbondingdelegations"},"ValidatorUnbondingDelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorUnbondingDelegations")," endpoint queries delegate information for given validator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/ValidatorUnbondingDelegations\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext -d \'{"validator_addr":"cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc"}\' \\\nlocalhost:9090 cosmos.staking.v1beta1.Query/ValidatorUnbondingDelegations\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "unbonding_responses": [\n    {\n      "delegator_address": "cosmos1z3pzzw84d6xn00pw9dy3yapqypfde7vg6965fy",\n      "validator_address": "cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc",\n      "entries": [\n        {\n          "creation_height": "25325",\n          "completion_time": "2021-10-31T09:24:36.797320636Z",\n          "initial_balance": "20000000",\n          "balance": "20000000"\n        }\n      ]\n    },\n    {\n      "delegator_address": "cosmos1y8nyfvmqh50p6ldpzljk3yrglppdv3t8phju77",\n      "validator_address": "cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc",\n      "entries": [\n        {\n          "creation_height": "13100",\n          "completion_time": "2021-10-30T12:53:02.272266791Z",\n          "initial_balance": "1000000",\n          "balance": "1000000"\n        }\n      ]\n    },\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "8"\n  }\n}\n')),(0,l.kt)("h4",{id:"delegation-2"},"Delegation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Delegation")," endpoint queries delegate information for given validator delegator pair."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/Delegation\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n-d \'{"delegator_addr": "cosmos1y8nyfvmqh50p6ldpzljk3yrglppdv3t8phju77", validator_addr":"cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc"}\' \\\nlocalhost:9090 cosmos.staking.v1beta1.Query/Delegation\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "delegation_response":\n  {\n    "delegation":\n      {\n        "delegator_address":"cosmos1y8nyfvmqh50p6ldpzljk3yrglppdv3t8phju77",\n        "validator_address":"cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc",\n        "shares":"25083119936.000000000000000000"\n      },\n    "balance":\n      {\n        "denom":"stake",\n        "amount":"25083119936"\n      }\n  }\n}\n')),(0,l.kt)("h4",{id:"unbondingdelegation-1"},"UnbondingDelegation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"UnbondingDelegation")," endpoint queries unbonding information for given validator delegator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/UnbondingDelegation\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n-d \'{"delegator_addr": "cosmos1y8nyfvmqh50p6ldpzljk3yrglppdv3t8phju77", validator_addr":"cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc"}\' \\\nlocalhost:9090 cosmos.staking.v1beta1.Query/UnbondingDelegation\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "unbond": {\n    "delegator_address": "cosmos1y8nyfvmqh50p6ldpzljk3yrglppdv3t8phju77",\n    "validator_address": "cosmosvaloper1rne8lgs98p0jqe82sgt0qr4rdn4hgvmgp9ggcc",\n    "entries": [\n      {\n        "creation_height": "136984",\n        "completion_time": "2021-11-08T05:38:47.505593891Z",\n        "initial_balance": "400000000",\n        "balance": "400000000"\n      },\n      {\n        "creation_height": "137005",\n        "completion_time": "2021-11-08T05:40:53.526196312Z",\n        "initial_balance": "385000000",\n        "balance": "385000000"\n      }\n    ]\n  }\n}\n')),(0,l.kt)("h4",{id:"delegatordelegations"},"DelegatorDelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"DelegatorDelegations")," endpoint queries all delegations of a given delegator address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/DelegatorDelegations\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n-d \'{"delegator_addr": "cosmos1y8nyfvmqh50p6ldpzljk3yrglppdv3t8phju77"}\' \\\nlocalhost:9090 cosmos.staking.v1beta1.Query/DelegatorDelegations\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "delegation_responses": [\n    {"delegation":{"delegator_address":"cosmos1y8nyfvmqh50p6ldpzljk3yrglppdv3t8phju77","validator_address":"cosmosvaloper1eh5mwu044gd5ntkkc2xgfg8247mgc56fww3vc8","shares":"25083339023.000000000000000000"},"balance":{"denom":"stake","amount":"25083339023"}}\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"delegatorunbondingdelegations"},"DelegatorUnbondingDelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"DelegatorUnbondingDelegations")," endpoint queries all unbonding delegations of a given delegator address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/DelegatorUnbondingDelegations\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n-d \'{"delegator_addr": "cosmos1y8nyfvmqh50p6ldpzljk3yrglppdv3t8phju77"}\' \\\nlocalhost:9090 cosmos.staking.v1beta1.Query/DelegatorUnbondingDelegations\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "unbonding_responses": [\n    {\n      "delegator_address": "cosmos1y8nyfvmqh50p6ldpzljk3yrglppdv3t8phju77",\n      "validator_address": "cosmosvaloper1sjllsnramtg3ewxqwwrwjxfgc4n4ef9uxyejze",\n      "entries": [\n        {\n          "creation_height": "136984",\n          "completion_time": "2021-11-08T05:38:47.505593891Z",\n          "initial_balance": "400000000",\n          "balance": "400000000"\n        },\n        {\n          "creation_height": "137005",\n          "completion_time": "2021-11-08T05:40:53.526196312Z",\n          "initial_balance": "385000000",\n          "balance": "385000000"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"redelegations-2"},"Redelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Redelegations")," endpoint queries redelegations of given address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/Redelegations\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n-d \'{"delegator_addr": "cosmos1ld5p7hn43yuh8ht28gm9pfjgj2fctujp2tgwvf", "src_validator_addr" : "cosmosvaloper1j7euyj85fv2jugejrktj540emh9353ltgppc3g", "dst_validator_addr" : "cosmosvaloper1yy3tnegzmkdcm7czzcy3flw5z0zyr9vkkxrfse"}\' \\\nlocalhost:9090 cosmos.staking.v1beta1.Query/Redelegations\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "redelegation_responses": [\n    {\n      "redelegation": {\n        "delegator_address": "cosmos1ld5p7hn43yuh8ht28gm9pfjgj2fctujp2tgwvf",\n        "validator_src_address": "cosmosvaloper1j7euyj85fv2jugejrktj540emh9353ltgppc3g",\n        "validator_dst_address": "cosmosvaloper1yy3tnegzmkdcm7czzcy3flw5z0zyr9vkkxrfse",\n        "entries": null\n      },\n      "entries": [\n        {\n          "redelegation_entry": {\n            "creation_height": 135932,\n            "completion_time": "2021-11-08T03:52:55.299147901Z",\n            "initial_balance": "2900000",\n            "shares_dst": "2900000.000000000000000000"\n          },\n          "balance": "2900000"\n        }\n      ]\n    }\n  ],\n  "pagination": null\n}\n')),(0,l.kt)("h4",{id:"delegatorvalidators"},"DelegatorValidators"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"DelegatorValidators")," endpoint queries all validators information for given delegator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/DelegatorValidators\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n-d \'{"delegator_addr": "cosmos1ld5p7hn43yuh8ht28gm9pfjgj2fctujp2tgwvf"}\' \\\nlocalhost:9090 cosmos.staking.v1beta1.Query/DelegatorValidators\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "validators": [\n    {\n      "operator_address": "cosmosvaloper1eh5mwu044gd5ntkkc2xgfg8247mgc56fww3vc8",\n      "consensus_pubkey": {\n        "@type": "/cosmos.crypto.ed25519.PubKey",\n        "key": "UPwHWxH1zHJWGOa/m6JB3f5YjHMvPQPkVbDqqi+U7Uw="\n      },\n      "jailed": false,\n      "status": "BOND_STATUS_BONDED",\n      "tokens": "347260647559",\n      "delegator_shares": "347260647559.000000000000000000",\n      "description": {\n        "moniker": "BouBouNode",\n        "identity": "",\n        "website": "https://boubounode.com",\n        "security_contact": "",\n        "details": "AI-based Validator. #1 AI Validator on Game of Stakes. Fairly priced. Don\'t trust (humans), verify. Made with BouBou love."\n      },\n      "unbonding_height": "0",\n      "unbonding_time": "1970-01-01T00:00:00Z",\n      "commission": {\n        "commission_rates": {\n          "rate": "0.061000000000000000",\n          "max_rate": "0.300000000000000000",\n          "max_change_rate": "0.150000000000000000"\n        },\n        "update_time": "2021-10-01T15:00:00Z"\n      },\n      "min_self_delegation": "1"\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"delegatorvalidator"},"DelegatorValidator"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"DelegatorValidator")," endpoint queries validator information for given delegator validator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/DelegatorValidator\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n-d \'{"delegator_addr": "cosmos1eh5mwu044gd5ntkkc2xgfg8247mgc56f3n8rr7", "validator_addr": "cosmosvaloper1eh5mwu044gd5ntkkc2xgfg8247mgc56fww3vc8"}\' \\\nlocalhost:9090 cosmos.staking.v1beta1.Query/DelegatorValidator\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "validator": {\n    "operator_address": "cosmosvaloper1eh5mwu044gd5ntkkc2xgfg8247mgc56fww3vc8",\n    "consensus_pubkey": {\n      "@type": "/cosmos.crypto.ed25519.PubKey",\n      "key": "UPwHWxH1zHJWGOa/m6JB3f5YjHMvPQPkVbDqqi+U7Uw="\n    },\n    "jailed": false,\n    "status": "BOND_STATUS_BONDED",\n    "tokens": "347262754841",\n    "delegator_shares": "347262754841.000000000000000000",\n    "description": {\n      "moniker": "BouBouNode",\n      "identity": "",\n      "website": "https://boubounode.com",\n      "security_contact": "",\n      "details": "AI-based Validator. #1 AI Validator on Game of Stakes. Fairly priced. Don\'t trust (humans), verify. Made with BouBou love."\n    },\n    "unbonding_height": "0",\n    "unbonding_time": "1970-01-01T00:00:00Z",\n    "commission": {\n      "commission_rates": {\n        "rate": "0.061000000000000000",\n        "max_rate": "0.300000000000000000",\n        "max_change_rate": "0.150000000000000000"\n      },\n      "update_time": "2021-10-01T15:00:00Z"\n    },\n    "min_self_delegation": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"historicalinfo-1"},"HistoricalInfo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/HistoricalInfo\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"grpcurl -plaintext -d '{\"height\" : 1}' localhost:9090 cosmos.staking.v1beta1.Query/HistoricalInfo\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "hist": {\n    "header": {\n      "version": {\n        "block": "11",\n        "app": "0"\n      },\n      "chain_id": "simd-1",\n      "height": "140142",\n      "time": "2021-10-11T10:56:29.720079569Z",\n      "last_block_id": {\n        "hash": "9gri/4LLJUBFqioQ3NzZIP9/7YHR9QqaM6B2aJNQA7o=",\n        "part_set_header": {\n          "total": 1,\n          "hash": "Hk1+C864uQkl9+I6Zn7IurBZBKUevqlVtU7VqaZl1tc="\n        }\n      },\n      "last_commit_hash": "VxrcS27GtvGruS3I9+AlpT7udxIT1F0OrRklrVFSSKc=",\n      "data_hash": "80BjOrqNYUOkTnmgWyz9AQ8n7SoEmPVi4QmAe8RbQBY=",\n      "validators_hash": "95W49n2hw8RWpr1GPTAO5MSPi6w6Wjr3JjjS7AjpBho=",\n      "next_validators_hash": "95W49n2hw8RWpr1GPTAO5MSPi6w6Wjr3JjjS7AjpBho=",\n      "consensus_hash": "BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=",\n      "app_hash": "ZZaxnSY3E6Ex5Bvkm+RigYCK82g8SSUL53NymPITeOE=",\n      "last_results_hash": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",\n      "evidence_hash": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",\n      "proposer_address": "aH6dO428B+ItuoqPq70efFHrSMY="\n    },\n  "valset": [\n      {\n        "operator_address": "cosmosvaloper196ax4vc0lwpxndu9dyhvca7jhxp70rmcqcnylw",\n        "consensus_pubkey": {\n          "@type": "/cosmos.crypto.ed25519.PubKey",\n          "key": "/O7BtNW0pafwfvomgR4ZnfldwPXiFfJs9mHg3gwfv5Q="\n        },\n        "jailed": false,\n        "status": "BOND_STATUS_BONDED",\n        "tokens": "1426045203613",\n        "delegator_shares": "1426045203613.000000000000000000",\n        "description": {\n          "moniker": "SG-1",\n          "identity": "48608633F99D1B60",\n          "website": "https://sg-1.online",\n          "security_contact": "",\n          "details": "SG-1 - your favorite validator on Witval. We offer 100% Soft Slash protection."\n        },\n        "unbonding_height": "0",\n        "unbonding_time": "1970-01-01T00:00:00Z",\n        "commission": {\n          "commission_rates": {\n            "rate": "0.037500000000000000",\n            "max_rate": "0.200000000000000000",\n            "max_change_rate": "0.030000000000000000"\n          },\n          "update_time": "2021-10-01T15:00:00Z"\n        },\n        "min_self_delegation": "1"\n      }\n    ]\n  }\n}\n\n')),(0,l.kt)("h4",{id:"pool-2"},"Pool"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Pool")," endpoint queries the pool information."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/Pool\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"grpcurl -plaintext -d localhost:9090 cosmos.staking.v1beta1.Query/Pool\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "pool": {\n    "not_bonded_tokens": "369054400189",\n    "bonded_tokens": "15657192425623"\n  }\n}\n')),(0,l.kt)("h4",{id:"params-2"},"Params"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Params")," endpoint queries the pool information."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.staking.v1beta1.Query/Params\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"grpcurl -plaintext localhost:9090 cosmos.staking.v1beta1.Query/Params\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "params": {\n    "unbondingTime": "1814400s",\n    "maxValidators": 100,\n    "maxEntries": 7,\n    "historicalEntries": 10000,\n    "bondDenom": "stake"\n  }\n}\n')),(0,l.kt)("h3",{id:"rest"},"REST"),(0,l.kt)("p",null,"A user can query the ",(0,l.kt)("inlineCode",{parentName:"p"},"staking")," module using REST endpoints."),(0,l.kt)("h4",{id:"delegatordelegations-1"},"DelegatorDelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"DelegtaorDelegations")," REST endpoint queries all delegations of a given delegator address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET "http://localhost:1317/cosmos/staking/v1beta1/delegations/cosmos1vcs68xf2tnqes5tg0khr0vyevm40ff6zdxatp5" -H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "delegation_responses": [\n    {\n      "delegation": {\n        "delegator_address": "cosmos1vcs68xf2tnqes5tg0khr0vyevm40ff6zdxatp5",\n        "validator_address": "cosmosvaloper1quqxfrxkycr0uzt4yk0d57tcq3zk7srm7sm6r8",\n        "shares": "256250000.000000000000000000"\n      },\n      "balance": {\n        "denom": "stake",\n        "amount": "256250000"\n      }\n    },\n    {\n      "delegation": {\n        "delegator_address": "cosmos1vcs68xf2tnqes5tg0khr0vyevm40ff6zdxatp5",\n        "validator_address": "cosmosvaloper194v8uwee2fvs2s8fa5k7j03ktwc87h5ym39jfv",\n        "shares": "255150000.000000000000000000"\n      },\n      "balance": {\n        "denom": "stake",\n        "amount": "255150000"\n      }\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "2"\n  }\n}\n')),(0,l.kt)("h4",{id:"redelegations-3"},"Redelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Redelegations")," REST endpoint queries redelegations of given address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET \\\n"http://localhost:1317/cosmos/staking/v1beta1/delegators/cosmos1thfntksw0d35n2tkr0k8v54fr8wxtxwxl2c56e/redelegations?srcValidatorAddr=cosmosvaloper1lzhlnpahvznwfv4jmay2tgaha5kmz5qx4cuznf&dstValidatorAddr=cosmosvaloper1vq8tw77kp8lvxq9u3c8eeln9zymn68rng8pgt4" \\\n-H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "redelegation_responses": [\n    {\n      "redelegation": {\n        "delegator_address": "cosmos1thfntksw0d35n2tkr0k8v54fr8wxtxwxl2c56e",\n        "validator_src_address": "cosmosvaloper1lzhlnpahvznwfv4jmay2tgaha5kmz5qx4cuznf",\n        "validator_dst_address": "cosmosvaloper1vq8tw77kp8lvxq9u3c8eeln9zymn68rng8pgt4",\n        "entries": null\n      },\n      "entries": [\n        {\n          "redelegation_entry": {\n            "creation_height": 151523,\n            "completion_time": "2021-11-09T06:03:25.640682116Z",\n            "initial_balance": "200000000",\n            "shares_dst": "200000000.000000000000000000"\n          },\n          "balance": "200000000"\n        }\n      ]\n    }\n  ],\n  "pagination": null\n}\n')),(0,l.kt)("h4",{id:"delegatorunbondingdelegations-1"},"DelegatorUnbondingDelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"DelegatorUnbondingDelegations")," REST endpoint queries all unbonding delegations of a given delegator address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET \\\n"http://localhost:1317/cosmos/staking/v1beta1/delegators/cosmos1nxv42u3lv642q0fuzu2qmrku27zgut3n3z7lll/unbonding_delegations" \\\n-H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "unbonding_responses": [\n    {\n      "delegator_address": "cosmos1nxv42u3lv642q0fuzu2qmrku27zgut3n3z7lll",\n      "validator_address": "cosmosvaloper1e7mvqlz50ch6gw4yjfemsc069wfre4qwmw53kq",\n      "entries": [\n        {\n          "creation_height": "2442278",\n          "completion_time": "2021-10-12T10:59:03.797335857Z",\n          "initial_balance": "50000000000",\n          "balance": "50000000000"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"delegatorvalidators-1"},"DelegatorValidators"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"DelegatorValidators")," REST endpoint queries all validators information for given delegator address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET \\\n"http://localhost:1317/cosmos/staking/v1beta1/delegators/cosmos1xwazl8ftks4gn00y5x3c47auquc62ssune9ppv/validators" \\\n-H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "validators": [\n    {\n      "operator_address": "cosmosvaloper1xwazl8ftks4gn00y5x3c47auquc62ssuvynw64",\n      "consensus_pubkey": {\n        "@type": "/cosmos.crypto.ed25519.PubKey",\n        "key": "5v4n3px3PkfNnKflSgepDnsMQR1hiNXnqOC11Y72/PQ="\n      },\n      "jailed": false,\n      "status": "BOND_STATUS_BONDED",\n      "tokens": "21592843799",\n      "delegator_shares": "21592843799.000000000000000000",\n      "description": {\n        "moniker": "jabbey",\n        "identity": "",\n        "website": "https://twitter.com/JoeAbbey",\n        "security_contact": "",\n        "details": "just another dad in the cosmos"\n      },\n      "unbonding_height": "0",\n      "unbonding_time": "1970-01-01T00:00:00Z",\n      "commission": {\n        "commission_rates": {\n          "rate": "0.100000000000000000",\n          "max_rate": "0.200000000000000000",\n          "max_change_rate": "0.100000000000000000"\n        },\n        "update_time": "2021-10-09T19:03:54.984821705Z"\n      },\n      "min_self_delegation": "1"\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"delegatorvalidator-1"},"DelegatorValidator"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"DelegatorValidator")," REST endpoint queries validator information for given delegator validator pair."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET \\\n"http://localhost:1317/cosmos/staking/v1beta1/delegators/cosmos1xwazl8ftks4gn00y5x3c47auquc62ssune9ppv/validators/cosmosvaloper1xwazl8ftks4gn00y5x3c47auquc62ssuvynw64" \\\n-H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "validator": {\n    "operator_address": "cosmosvaloper1xwazl8ftks4gn00y5x3c47auquc62ssuvynw64",\n    "consensus_pubkey": {\n      "@type": "/cosmos.crypto.ed25519.PubKey",\n      "key": "5v4n3px3PkfNnKflSgepDnsMQR1hiNXnqOC11Y72/PQ="\n    },\n    "jailed": false,\n    "status": "BOND_STATUS_BONDED",\n    "tokens": "21592843799",\n    "delegator_shares": "21592843799.000000000000000000",\n    "description": {\n      "moniker": "jabbey",\n      "identity": "",\n      "website": "https://twitter.com/JoeAbbey",\n      "security_contact": "",\n      "details": "just another dad in the cosmos"\n    },\n    "unbonding_height": "0",\n    "unbonding_time": "1970-01-01T00:00:00Z",\n    "commission": {\n      "commission_rates": {\n        "rate": "0.100000000000000000",\n        "max_rate": "0.200000000000000000",\n        "max_change_rate": "0.100000000000000000"\n      },\n      "update_time": "2021-10-09T19:03:54.984821705Z"\n    },\n    "min_self_delegation": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"historicalinfo-2"},"HistoricalInfo"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"HistoricalInfo")," REST endpoint queries the historical information for given height."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/historical_info/{height}\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET "http://localhost:1317/cosmos/staking/v1beta1/historical_info/153332" -H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "hist": {\n    "header": {\n      "version": {\n        "block": "11",\n        "app": "0"\n      },\n      "chain_id": "cosmos-1",\n      "height": "153332",\n      "time": "2021-10-12T09:05:35.062230221Z",\n      "last_block_id": {\n        "hash": "NX8HevR5khb7H6NGKva+jVz7cyf0skF1CrcY9A0s+d8=",\n        "part_set_header": {\n          "total": 1,\n          "hash": "zLQ2FiKM5tooL3BInt+VVfgzjlBXfq0Hc8Iux/xrhdg="\n        }\n      },\n      "last_commit_hash": "P6IJrK8vSqU3dGEyRHnAFocoDGja0bn9euLuy09s350=",\n      "data_hash": "eUd+6acHWrNXYju8Js449RJ99lOYOs16KpqQl4SMrEM=",\n      "validators_hash": "mB4pravvMsJKgi+g8aYdSeNlt0kPjnRFyvtAQtaxcfw=",\n      "next_validators_hash": "mB4pravvMsJKgi+g8aYdSeNlt0kPjnRFyvtAQtaxcfw=",\n      "consensus_hash": "BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=",\n      "app_hash": "fuELArKRK+CptnZ8tu54h6xEleSWenHNmqC84W866fU=",\n      "last_results_hash": "p/BPexV4LxAzlVcPRvW+lomgXb6Yze8YLIQUo/4Kdgc=",\n      "evidence_hash": "47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=",\n      "proposer_address": "G0MeY8xQx7ooOsni8KE/3R/Ib3Q="\n    },\n    "valset": [\n      {\n        "operator_address": "cosmosvaloper196ax4vc0lwpxndu9dyhvca7jhxp70rmcqcnylw",\n        "consensus_pubkey": {\n          "@type": "/cosmos.crypto.ed25519.PubKey",\n          "key": "/O7BtNW0pafwfvomgR4ZnfldwPXiFfJs9mHg3gwfv5Q="\n        },\n        "jailed": false,\n        "status": "BOND_STATUS_BONDED",\n        "tokens": "1416521659632",\n        "delegator_shares": "1416521659632.000000000000000000",\n        "description": {\n          "moniker": "SG-1",\n          "identity": "48608633F99D1B60",\n          "website": "https://sg-1.online",\n          "security_contact": "",\n          "details": "SG-1 - your favorite validator on cosmos. We offer 100% Soft Slash protection."\n        },\n        "unbonding_height": "0",\n        "unbonding_time": "1970-01-01T00:00:00Z",\n        "commission": {\n          "commission_rates": {\n            "rate": "0.037500000000000000",\n            "max_rate": "0.200000000000000000",\n            "max_change_rate": "0.030000000000000000"\n          },\n          "update_time": "2021-10-01T15:00:00Z"\n        },\n        "min_self_delegation": "1"\n      },\n      {\n        "operator_address": "cosmosvaloper1t8ehvswxjfn3ejzkjtntcyrqwvmvuknzmvtaaa",\n        "consensus_pubkey": {\n          "@type": "/cosmos.crypto.ed25519.PubKey",\n          "key": "uExZyjNLtr2+FFIhNDAMcQ8+yTrqE7ygYTsI7khkA5Y="\n        },\n        "jailed": false,\n        "status": "BOND_STATUS_BONDED",\n        "tokens": "1348298958808",\n        "delegator_shares": "1348298958808.000000000000000000",\n        "description": {\n          "moniker": "Cosmostation",\n          "identity": "AE4C403A6E7AA1AC",\n          "website": "https://www.cosmostation.io",\n          "security_contact": "admin@stamper.network",\n          "details": "Cosmostation validator node. Delegate your tokens and Start Earning Staking Rewards"\n        },\n        "unbonding_height": "0",\n        "unbonding_time": "1970-01-01T00:00:00Z",\n        "commission": {\n          "commission_rates": {\n            "rate": "0.050000000000000000",\n            "max_rate": "1.000000000000000000",\n            "max_change_rate": "0.200000000000000000"\n          },\n          "update_time": "2021-10-01T15:06:38.821314287Z"\n        },\n        "min_self_delegation": "1"\n      }\n    ]\n  }\n}\n')),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Parameters")," REST endpoint queries the staking parameters."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/params\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET "http://localhost:1317/cosmos/staking/v1beta1/params" -H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "params": {\n    "unbonding_time": "2419200s",\n    "max_validators": 100,\n    "max_entries": 7,\n    "historical_entries": 10000,\n    "bond_denom": "stake"\n  }\n}\n')),(0,l.kt)("h4",{id:"pool-3"},"Pool"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Pool")," REST endpoint queries the pool information."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/pool\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET "http://localhost:1317/cosmos/staking/v1beta1/pool" -H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "pool": {\n    "not_bonded_tokens": "432805737458",\n    "bonded_tokens": "15783637712645"\n  }\n}\n')),(0,l.kt)("h4",{id:"validators-3"},"Validators"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Validators")," REST endpoint queries all validators that match the given status."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/validators\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET "http://localhost:1317/cosmos/staking/v1beta1/validators" -H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "validators": [\n    {\n      "operator_address": "cosmosvaloper1q3jsx9dpfhtyqqgetwpe5tmk8f0ms5qywje8tw",\n      "consensus_pubkey": {\n        "@type": "/cosmos.crypto.ed25519.PubKey",\n        "key": "N7BPyek2aKuNZ0N/8YsrqSDhGZmgVaYUBuddY8pwKaE="\n      },\n      "jailed": false,\n      "status": "BOND_STATUS_BONDED",\n      "tokens": "383301887799",\n      "delegator_shares": "383301887799.000000000000000000",\n      "description": {\n        "moniker": "SmartNodes",\n        "identity": "D372724899D1EDC8",\n        "website": "https://smartnodes.co",\n        "security_contact": "",\n        "details": "Earn Rewards with Crypto Staking & Node Deployment"\n      },\n      "unbonding_height": "0",\n      "unbonding_time": "1970-01-01T00:00:00Z",\n      "commission": {\n        "commission_rates": {\n          "rate": "0.050000000000000000",\n          "max_rate": "0.200000000000000000",\n          "max_change_rate": "0.100000000000000000"\n        },\n        "update_time": "2021-10-01T15:51:31.596618510Z"\n      },\n      "min_self_delegation": "1"\n    },\n    {\n      "operator_address": "cosmosvaloper1q5ku90atkhktze83j9xjaks2p7uruag5zp6wt7",\n      "consensus_pubkey": {\n        "@type": "/cosmos.crypto.ed25519.PubKey",\n        "key": "GDNpuKDmCg9GnhnsiU4fCWktuGUemjNfvpCZiqoRIYA="\n      },\n      "jailed": false,\n      "status": "BOND_STATUS_UNBONDING",\n      "tokens": "1017819654",\n      "delegator_shares": "1017819654.000000000000000000",\n      "description": {\n        "moniker": "Noderunners",\n        "identity": "812E82D12FEA3493",\n        "website": "http://noderunners.biz",\n        "security_contact": "info@noderunners.biz",\n        "details": "Noderunners is a professional validator in POS networks. We have a huge node running experience, reliable soft and hardware. Our commissions are always low, our support to delegators is always full. Stake with us and start receiving your cosmos rewards now!"\n      },\n      "unbonding_height": "147302",\n      "unbonding_time": "2021-11-08T22:58:53.718662452Z",\n      "commission": {\n        "commission_rates": {\n          "rate": "0.050000000000000000",\n          "max_rate": "0.200000000000000000",\n          "max_change_rate": "0.100000000000000000"\n        },\n        "update_time": "2021-10-04T18:02:21.446645619Z"\n      },\n      "min_self_delegation": "1"\n    }\n  ],\n  "pagination": {\n    "next_key": "FONDBFkE4tEEf7yxWWKOD49jC2NK",\n    "total": "2"\n  }\n}\n')),(0,l.kt)("h4",{id:"validator-3"},"Validator"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Validator")," REST endpoint queries validator information for given validator address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/validators/{validatorAddr}\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET \\\n"http://localhost:1317/cosmos/staking/v1beta1/validators/cosmosvaloper16msryt3fqlxtvsy8u5ay7wv2p8mglfg9g70e3q" \\\n-H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "validator": {\n    "operator_address": "cosmosvaloper16msryt3fqlxtvsy8u5ay7wv2p8mglfg9g70e3q",\n    "consensus_pubkey": {\n      "@type": "/cosmos.crypto.ed25519.PubKey",\n      "key": "sIiexdJdYWn27+7iUHQJDnkp63gq/rzUq1Y+fxoGjXc="\n    },\n    "jailed": false,\n    "status": "BOND_STATUS_BONDED",\n    "tokens": "33027900000",\n    "delegator_shares": "33027900000.000000000000000000",\n    "description": {\n      "moniker": "Witval",\n      "identity": "51468B615127273A",\n      "website": "",\n      "security_contact": "",\n      "details": "Witval is the validator arm from Vitwit. Vitwit is into software consulting and services business since 2015. We are working closely with Cosmos ecosystem since 2018. We are also building tools for the ecosystem, Aneka is our explorer for the cosmos ecosystem."\n    },\n    "unbonding_height": "0",\n    "unbonding_time": "1970-01-01T00:00:00Z",\n    "commission": {\n      "commission_rates": {\n        "rate": "0.050000000000000000",\n        "max_rate": "0.200000000000000000",\n        "max_change_rate": "0.020000000000000000"\n      },\n      "update_time": "2021-10-01T19:24:52.663191049Z"\n    },\n    "min_self_delegation": "1"\n  }\n}\n')),(0,l.kt)("h4",{id:"validatordelegations-1"},"ValidatorDelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorDelegations")," REST endpoint queries delegate information for given validator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET "http://localhost:1317/cosmos/staking/v1beta1/validators/cosmosvaloper16msryt3fqlxtvsy8u5ay7wv2p8mglfg9g70e3q/delegations" -H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "delegation_responses": [\n    {\n      "delegation": {\n        "delegator_address": "cosmos190g5j8aszqhvtg7cprmev8xcxs6csra7xnk3n3",\n        "validator_address": "cosmosvaloper16msryt3fqlxtvsy8u5ay7wv2p8mglfg9g70e3q",\n        "shares": "31000000000.000000000000000000"\n      },\n      "balance": {\n        "denom": "stake",\n        "amount": "31000000000"\n      }\n    },\n    {\n      "delegation": {\n        "delegator_address": "cosmos1ddle9tczl87gsvmeva3c48nenyng4n56qwq4ee",\n        "validator_address": "cosmosvaloper16msryt3fqlxtvsy8u5ay7wv2p8mglfg9g70e3q",\n        "shares": "628470000.000000000000000000"\n      },\n      "balance": {\n        "denom": "stake",\n        "amount": "628470000"\n      }\n    },\n    {\n      "delegation": {\n        "delegator_address": "cosmos10fdvkczl76m040smd33lh9xn9j0cf26kk4s2nw",\n        "validator_address": "cosmosvaloper16msryt3fqlxtvsy8u5ay7wv2p8mglfg9g70e3q",\n        "shares": "838120000.000000000000000000"\n      },\n      "balance": {\n        "denom": "stake",\n        "amount": "838120000"\n      }\n    },\n    {\n      "delegation": {\n        "delegator_address": "cosmos1n8f5fknsv2yt7a8u6nrx30zqy7lu9jfm0t5lq8",\n        "validator_address": "cosmosvaloper16msryt3fqlxtvsy8u5ay7wv2p8mglfg9g70e3q",\n        "shares": "500000000.000000000000000000"\n      },\n      "balance": {\n        "denom": "stake",\n        "amount": "500000000"\n      }\n    },\n    {\n      "delegation": {\n        "delegator_address": "cosmos16msryt3fqlxtvsy8u5ay7wv2p8mglfg9hrek2e",\n        "validator_address": "cosmosvaloper16msryt3fqlxtvsy8u5ay7wv2p8mglfg9g70e3q",\n        "shares": "61310000.000000000000000000"\n      },\n      "balance": {\n        "denom": "stake",\n        "amount": "61310000"\n      }\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "5"\n  }\n}\n')),(0,l.kt)("h4",{id:"delegation-3"},"Delegation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Delegation")," REST endpoint queries delegate information for given validator delegator pair."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET \\\n"http://localhost:1317/cosmos/staking/v1beta1/validators/cosmosvaloper16msryt3fqlxtvsy8u5ay7wv2p8mglfg9g70e3q/delegations/cosmos1n8f5fknsv2yt7a8u6nrx30zqy7lu9jfm0t5lq8" \\\n-H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "delegation_response": {\n    "delegation": {\n      "delegator_address": "cosmos1n8f5fknsv2yt7a8u6nrx30zqy7lu9jfm0t5lq8",\n      "validator_address": "cosmosvaloper16msryt3fqlxtvsy8u5ay7wv2p8mglfg9g70e3q",\n      "shares": "500000000.000000000000000000"\n    },\n    "balance": {\n      "denom": "stake",\n      "amount": "500000000"\n    }\n  }\n}\n')),(0,l.kt)("h4",{id:"unbondingdelegation-2"},"UnbondingDelegation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"UnbondingDelegation")," REST endpoint queries unbonding information for given validator delegator pair."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET \\\n"http://localhost:1317/cosmos/staking/v1beta1/validators/cosmosvaloper13v4spsah85ps4vtrw07vzea37gq5la5gktlkeu/delegations/cosmos1ze2ye5u5k3qdlexvt2e0nn0508p04094ya0qpm/unbonding_delegation" \\\n-H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "unbond": {\n    "delegator_address": "cosmos1ze2ye5u5k3qdlexvt2e0nn0508p04094ya0qpm",\n    "validator_address": "cosmosvaloper13v4spsah85ps4vtrw07vzea37gq5la5gktlkeu",\n    "entries": [\n      {\n        "creation_height": "153687",\n        "completion_time": "2021-11-09T09:41:18.352401903Z",\n        "initial_balance": "525111",\n        "balance": "525111"\n      }\n    ]\n  }\n}\n')),(0,l.kt)("h4",{id:"validatorunbondingdelegations-1"},"ValidatorUnbondingDelegations"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidatorUnbondingDelegations")," REST endpoint queries unbonding delegations of a validator."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET \\\n"http://localhost:1317/cosmos/staking/v1beta1/validators/cosmosvaloper13v4spsah85ps4vtrw07vzea37gq5la5gktlkeu/unbonding_delegations" \\\n-H  "accept: application/json"\n')),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "unbonding_responses": [\n    {\n      "delegator_address": "cosmos1q9snn84jfrd9ge8t46kdcggpe58dua82vnj7uy",\n      "validator_address": "cosmosvaloper13v4spsah85ps4vtrw07vzea37gq5la5gktlkeu",\n      "entries": [\n        {\n          "creation_height": "90998",\n          "completion_time": "2021-11-05T00:14:37.005841058Z",\n          "initial_balance": "24000000",\n          "balance": "24000000"\n        }\n      ]\n    },\n    {\n      "delegator_address": "cosmos1qf36e6wmq9h4twhdvs6pyq9qcaeu7ye0s3dqq2",\n      "validator_address": "cosmosvaloper13v4spsah85ps4vtrw07vzea37gq5la5gktlkeu",\n      "entries": [\n        {\n          "creation_height": "47478",\n          "completion_time": "2021-11-01T22:47:26.714116854Z",\n          "initial_balance": "8000000",\n          "balance": "8000000"\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "2"\n  }\n}\n')))}m.isMDXComponent=!0}}]);