"use strict";(self.webpackChunkcosmos_sdk_docs=self.webpackChunkcosmos_sdk_docs||[]).push([[446],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var o=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=o.createContext({}),i=function(e){var t=o.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=i(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=i(a),c=n,g=m["".concat(s,".").concat(c)]||m[c]||d[c]||r;return a?o.createElement(g,l(l({ref:t},u),{},{components:a})):o.createElement(g,l({ref:t},u))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var i=2;i<r;i++)l[i]=a[i];return o.createElement.apply(null,l)}return o.createElement.apply(null,a)}m.displayName="MDXCreateElement"},92272:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>i});var o=a(87462),n=(a(67294),a(3905));const r={sidebar_position:1},l="x/group",p={unversionedId:"modules/group/README",id:"version-v0.47/modules/group/README",title:"x/group",description:"Abstract",source:"@site/versioned_docs/version-v0.47/modules/group/README.md",sourceDirName:"modules/group",slug:"/modules/group/",permalink:"/v0.47/modules/group/",draft:!1,tags:[],version:"v0.47",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"x/gov",permalink:"/v0.47/modules/gov/"},next:{title:"x/mint",permalink:"/v0.47/modules/mint/"}},s={},i=[{value:"Abstract",id:"abstract",level:2},{value:"Contents",id:"contents",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Group",id:"group",level:3},{value:"Group Policy",id:"group-policy",level:3},{value:"Decision Policy",id:"decision-policy",level:3},{value:"Threshold decision policy",id:"threshold-decision-policy",level:4},{value:"Percentage decision policy",id:"percentage-decision-policy",level:4},{value:"Proposal",id:"proposal",level:3},{value:"Voting",id:"voting",level:4},{value:"Withdrawing Proposals",id:"withdrawing-proposals",level:4},{value:"Aborted Proposals",id:"aborted-proposals",level:4},{value:"Tallying",id:"tallying",level:4},{value:"Executing Proposals",id:"executing-proposals",level:4},{value:"Pruning",id:"pruning",level:3},{value:"State",id:"state",level:2},{value:"Group Table",id:"group-table",level:3},{value:"groupSeq",id:"groupseq",level:4},{value:"groupByAdminIndex",id:"groupbyadminindex",level:4},{value:"Group Member Table",id:"group-member-table",level:3},{value:"groupMemberByGroupIndex",id:"groupmemberbygroupindex",level:4},{value:"groupMemberByMemberIndex",id:"groupmemberbymemberindex",level:4},{value:"Group Policy Table",id:"group-policy-table",level:3},{value:"groupPolicySeq",id:"grouppolicyseq",level:4},{value:"groupPolicyByGroupIndex",id:"grouppolicybygroupindex",level:4},{value:"groupPolicyByAdminIndex",id:"grouppolicybyadminindex",level:4},{value:"Proposal Table",id:"proposal-table",level:3},{value:"proposalSeq",id:"proposalseq",level:4},{value:"proposalByGroupPolicyIndex",id:"proposalbygrouppolicyindex",level:4},{value:"ProposalsByVotingPeriodEndIndex",id:"proposalsbyvotingperiodendindex",level:4},{value:"Vote Table",id:"vote-table",level:3},{value:"voteByProposalIndex",id:"votebyproposalindex",level:4},{value:"voteByVoterIndex",id:"votebyvoterindex",level:4},{value:"Msg Service",id:"msg-service",level:2},{value:"Msg/CreateGroup",id:"msgcreategroup",level:3},{value:"Msg/UpdateGroupMembers",id:"msgupdategroupmembers",level:3},{value:"Msg/UpdateGroupAdmin",id:"msgupdategroupadmin",level:3},{value:"Msg/UpdateGroupMetadata",id:"msgupdategroupmetadata",level:3},{value:"Msg/CreateGroupPolicy",id:"msgcreategrouppolicy",level:3},{value:"Msg/CreateGroupWithPolicy",id:"msgcreategroupwithpolicy",level:3},{value:"Msg/UpdateGroupPolicyAdmin",id:"msgupdategrouppolicyadmin",level:3},{value:"Msg/UpdateGroupPolicyDecisionPolicy",id:"msgupdategrouppolicydecisionpolicy",level:3},{value:"Msg/UpdateGroupPolicyMetadata",id:"msgupdategrouppolicymetadata",level:3},{value:"Msg/SubmitProposal",id:"msgsubmitproposal",level:3},{value:"Msg/WithdrawProposal",id:"msgwithdrawproposal",level:3},{value:"Msg/Vote",id:"msgvote",level:3},{value:"Msg/Exec",id:"msgexec",level:3},{value:"Msg/LeaveGroup",id:"msgleavegroup",level:3},{value:"Events",id:"events",level:2},{value:"EventCreateGroup",id:"eventcreategroup",level:3},{value:"EventUpdateGroup",id:"eventupdategroup",level:3},{value:"EventCreateGroupPolicy",id:"eventcreategrouppolicy",level:3},{value:"EventUpdateGroupPolicy",id:"eventupdategrouppolicy",level:3},{value:"EventCreateProposal",id:"eventcreateproposal",level:3},{value:"EventWithdrawProposal",id:"eventwithdrawproposal",level:3},{value:"EventVote",id:"eventvote",level:3},{value:"EventExec",id:"eventexec",level:2},{value:"EventLeaveGroup",id:"eventleavegroup",level:3},{value:"EventProposalPruned",id:"eventproposalpruned",level:3},{value:"Client",id:"client",level:2},{value:"CLI",id:"cli",level:3},{value:"Query",id:"query",level:4},{value:"group-info",id:"group-info",level:5},{value:"group-policy-info",id:"group-policy-info",level:5},{value:"group-members",id:"group-members",level:5},{value:"groups-by-admin",id:"groups-by-admin",level:5},{value:"group-policies-by-group",id:"group-policies-by-group",level:5},{value:"group-policies-by-admin",id:"group-policies-by-admin",level:5},{value:"proposal",id:"proposal-1",level:5},{value:"proposals-by-group-policy",id:"proposals-by-group-policy",level:5},{value:"vote",id:"vote",level:5},{value:"votes-by-proposal",id:"votes-by-proposal",level:5},{value:"votes-by-voter",id:"votes-by-voter",level:5},{value:"Transactions",id:"transactions",level:3},{value:"create-group",id:"create-group",level:4},{value:"update-group-admin",id:"update-group-admin",level:4},{value:"update-group-members",id:"update-group-members",level:4},{value:"update-group-metadata",id:"update-group-metadata",level:4},{value:"create-group-policy",id:"create-group-policy",level:4},{value:"create-group-with-policy",id:"create-group-with-policy",level:4},{value:"update-group-policy-admin",id:"update-group-policy-admin",level:4},{value:"update-group-policy-metadata",id:"update-group-policy-metadata",level:4},{value:"update-group-policy-decision-policy",id:"update-group-policy-decision-policy",level:4},{value:"create-proposal",id:"create-proposal",level:4},{value:"withdraw-proposal",id:"withdraw-proposal",level:4},{value:"vote",id:"vote-1",level:4},{value:"exec",id:"exec",level:4},{value:"leave-group",id:"leave-group",level:4},{value:"gRPC",id:"grpc",level:3},{value:"GroupInfo",id:"groupinfo",level:4},{value:"GroupPolicyInfo",id:"grouppolicyinfo",level:4},{value:"GroupMembers",id:"groupmembers",level:4},{value:"GroupsByAdmin",id:"groupsbyadmin",level:4},{value:"GroupPoliciesByGroup",id:"grouppoliciesbygroup",level:4},{value:"GroupPoliciesByAdmin",id:"grouppoliciesbyadmin",level:4},{value:"Proposal",id:"proposal-2",level:4},{value:"ProposalsByGroupPolicy",id:"proposalsbygrouppolicy",level:4},{value:"VoteByProposalVoter",id:"votebyproposalvoter",level:4},{value:"VotesByProposal",id:"votesbyproposal",level:4},{value:"VotesByVoter",id:"votesbyvoter",level:4},{value:"REST",id:"rest",level:3},{value:"GroupInfo",id:"groupinfo-1",level:4},{value:"GroupPolicyInfo",id:"grouppolicyinfo-1",level:4},{value:"GroupMembers",id:"groupmembers-1",level:4},{value:"GroupsByAdmin",id:"groupsbyadmin-1",level:4},{value:"GroupPoliciesByGroup",id:"grouppoliciesbygroup-1",level:4},{value:"GroupPoliciesByAdmin",id:"grouppoliciesbyadmin-1",level:4},{value:"Proposal",id:"proposal-3",level:4},{value:"ProposalsByGroupPolicy",id:"proposalsbygrouppolicy-1",level:4},{value:"VoteByProposalVoter",id:"votebyproposalvoter-1",level:4},{value:"VotesByProposal",id:"votesbyproposal-1",level:4},{value:"VotesByVoter",id:"votesbyvoter-1",level:4},{value:"Metadata",id:"metadata",level:2},{value:"Proposal",id:"proposal-4",level:3},{value:"Vote",id:"vote-2",level:3},{value:"Group",id:"group-1",level:3},{value:"Decision policy",id:"decision-policy-1",level:3}],u={toc:i};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"xgroup"},(0,n.kt)("inlineCode",{parentName:"h1"},"x/group")),(0,n.kt)("h2",{id:"abstract"},"Abstract"),(0,n.kt)("p",null,"The following documents specify the group module."),(0,n.kt)("p",null,"This module allows the creation and management of on-chain multisig accounts and enables voting for message execution based on configurable decision policies."),(0,n.kt)("h2",{id:"contents"},"Contents"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#concepts"},"Concepts"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#group"},"Group")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#group-policy"},"Group Policy")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#decision-policy"},"Decision Policy")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#proposal"},"Proposal")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#pruning"},"Pruning")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#state"},"State"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#group-table"},"Group Table")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#group-member-table"},"Group Member Table")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#group-policy-table"},"Group Policy Table")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#proposal-table"},"Proposal Table")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#vote-table"},"Vote Table")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msg-service"},"Msg Service"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgcreategroup"},"Msg/CreateGroup")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgupdategroupmembers"},"Msg/UpdateGroupMembers")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgupdategroupadmin"},"Msg/UpdateGroupAdmin")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgupdategroupmetadata"},"Msg/UpdateGroupMetadata")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgcreategrouppolicy"},"Msg/CreateGroupPolicy")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgcreategroupwithpolicy"},"Msg/CreateGroupWithPolicy")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgupdategrouppolicyadmin"},"Msg/UpdateGroupPolicyAdmin")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgupdategrouppolicydecisionpolicy"},"Msg/UpdateGroupPolicyDecisionPolicy")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgupdategrouppolicymetadata"},"Msg/UpdateGroupPolicyMetadata")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgsubmitproposal"},"Msg/SubmitProposal")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgwithdrawproposal"},"Msg/WithdrawProposal")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgvote"},"Msg/Vote")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgexec"},"Msg/Exec")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#msgleavegroup"},"Msg/LeaveGroup")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#events"},"Events"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eventcreategroup"},"EventCreateGroup")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eventupdategroup"},"EventUpdateGroup")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eventcreategrouppolicy"},"EventCreateGroupPolicy")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eventupdategrouppolicy"},"EventUpdateGroupPolicy")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eventcreateproposal"},"EventCreateProposal")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eventwithdrawproposal"},"EventWithdrawProposal")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eventvote"},"EventVote")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eventexec"},"EventExec")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eventleavegroup"},"EventLeaveGroup")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#eventproposalpruned"},"EventProposalPruned")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#client"},"Client"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#cli"},"CLI")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#grpc"},"gRPC")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#rest"},"REST")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#metadata"},"Metadata"))),(0,n.kt)("h2",{id:"concepts"},"Concepts"),(0,n.kt)("h3",{id:"group"},"Group"),(0,n.kt)("p",null,"A group is simply an aggregation of accounts with associated weights. It is not\nan account and doesn't have a balance. It doesn't in and of itself have any\nsort of voting or decision weight. It does have an \"administrator\" which has\nthe ability to add, remove and update members in the group. Note that a\ngroup policy account could be an administrator of a group, and that the\nadministrator doesn't necessarily have to be a member of the group."),(0,n.kt)("h3",{id:"group-policy"},"Group Policy"),(0,n.kt)("p",null,'A group policy is an account associated with a group and a decision policy.\nGroup policies are abstracted from groups because a single group may have\nmultiple decision policies for different types of actions. Managing group\nmembership separately from decision policies results in the least overhead\nand keeps membership consistent across different policies. The pattern that\nis recommended is to have a single master group policy for a given group,\nand then to create separate group policies with different decision policies\nand delegate the desired permissions from the master account to\nthose "sub-accounts" using the ',(0,n.kt)("inlineCode",{parentName:"p"},"x/authz")," module."),(0,n.kt)("h3",{id:"decision-policy"},"Decision Policy"),(0,n.kt)("p",null,"A decision policy is the mechanism by which members of a group can vote on\nproposals, as well as the rules that dictate whether a proposal should pass\nor not based on its tally outcome."),(0,n.kt)("p",null,"All decision policies generally would have a mininum execution period and a\nmaximum voting window. The minimum execution period is the minimum amount of time\nthat must pass after submission in order for a proposal to potentially be executed, and it may\nbe set to 0. The maximum voting window is the maximum time after submission that a proposal may\nbe voted on before it is tallied."),(0,n.kt)("p",null,"The chain developer also defines an app-wide maximum execution period, which is\nthe maximum amount of time after a proposal's voting period end where users are\nallowed to execute a proposal."),(0,n.kt)("p",null,"The current group module comes shipped with two decision policies: threshold\nand percentage. Any chain developer can extend upon these two, by creating\ncustom decision policies, as long as they adhere to the ",(0,n.kt)("inlineCode",{parentName:"p"},"DecisionPolicy"),"\ninterface:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/x/group/types.go#L27-L45\n")),(0,n.kt)("h4",{id:"threshold-decision-policy"},"Threshold decision policy"),(0,n.kt)("p",null,"A threshold decision policy defines a threshold of yes votes (based on a tally\nof voter weights) that must be achieved in order for a proposal to pass. For\nthis decision policy, abstain and veto are simply treated as no's."),(0,n.kt)("p",null,"This decision policy also has a VotingPeriod window and a MinExecutionPeriod\nwindow. The former defines the duration after proposal submission where members\nare allowed to vote, after which tallying is performed. The latter specifies\nthe minimum duration after proposal submission where the proposal can be\nexecuted. If set to 0, then the proposal is allowed to be executed immediately\non submission (using the ",(0,n.kt)("inlineCode",{parentName:"p"},"TRY_EXEC")," option). Obviously, MinExecutionPeriod\ncannot be greater than VotingPeriod+MaxExecutionPeriod (where MaxExecution is\nthe app-defined duration that specifies the window after voting ended where a\nproposal can be executed)."),(0,n.kt)("h4",{id:"percentage-decision-policy"},"Percentage decision policy"),(0,n.kt)("p",null,"A percentage decision policy is similar to a threshold decision policy, except\nthat the threshold is not defined as a constant weight, but as a percentage.\nIt's more suited for groups where the group members' weights can be updated, as\nthe percentage threshold stays the same, and doesn't depend on how those member\nweights get updated."),(0,n.kt)("p",null,"Same as the Threshold decision policy, the percentage decision policy has the\ntwo VotingPeriod and MinExecutionPeriod parameters."),(0,n.kt)("h3",{id:"proposal"},"Proposal"),(0,n.kt)("p",null,"Any member(s) of a group can submit a proposal for a group policy account to decide upon.\nA proposal consists of a set of messages that will be executed if the proposal\npasses as well as any metadata associated with the proposal."),(0,n.kt)("h4",{id:"voting"},"Voting"),(0,n.kt)("p",null,"There are four choices to choose while voting - yes, no, abstain and veto. Not\nall decision policies will take the four choices into account. Votes can contain some optional metadata.\nIn the current implementation, the voting window begins as soon as a proposal\nis submitted, and the end is defined by the group policy's decision policy."),(0,n.kt)("h4",{id:"withdrawing-proposals"},"Withdrawing Proposals"),(0,n.kt)("p",null,"Proposals can be withdrawn any time before the voting period end, either by the\nadmin of the group policy or by one of the proposers. Once withdrawn, it is\nmarked as ",(0,n.kt)("inlineCode",{parentName:"p"},"PROPOSAL_STATUS_WITHDRAWN"),", and no more voting or execution is\nallowed on it."),(0,n.kt)("h4",{id:"aborted-proposals"},"Aborted Proposals"),(0,n.kt)("p",null,"If the group policy is updated during the voting period of the proposal, then\nthe proposal is marked as ",(0,n.kt)("inlineCode",{parentName:"p"},"PROPOSAL_STATUS_ABORTED"),", and no more voting or\nexecution is allowed on it. This is because the group policy defines the rules\nof proposal voting and execution, so if those rules change during the lifecycle\nof a proposal, then the proposal should be marked as stale."),(0,n.kt)("h4",{id:"tallying"},"Tallying"),(0,n.kt)("p",null,"Tallying is the counting of all votes on a proposal. It happens only once in\nthe lifecycle of a proposal, but can be triggered by two factors, whichever\nhappens first:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"either someone tries to execute the proposal (see next section), which can\nhappen on a ",(0,n.kt)("inlineCode",{parentName:"li"},"Msg/Exec")," transaction, or a ",(0,n.kt)("inlineCode",{parentName:"li"},"Msg/{SubmitProposal,Vote}"),"\ntransaction with the ",(0,n.kt)("inlineCode",{parentName:"li"},"Exec")," field set. When a proposal execution is attempted,\na tally is done first to make sure the proposal passes."),(0,n.kt)("li",{parentName:"ul"},"or on ",(0,n.kt)("inlineCode",{parentName:"li"},"EndBlock")," when the proposal's voting period end just passed.")),(0,n.kt)("p",null,"If the tally result passes the decision policy's rules, then the proposal is\nmarked as ",(0,n.kt)("inlineCode",{parentName:"p"},"PROPOSAL_STATUS_ACCEPTED"),", or else it is marked as\n",(0,n.kt)("inlineCode",{parentName:"p"},"PROPOSAL_STATUS_REJECTED"),". In any case, no more voting is allowed anymore, and the tally\nresult is persisted to state in the proposal's ",(0,n.kt)("inlineCode",{parentName:"p"},"FinalTallyResult"),"."),(0,n.kt)("h4",{id:"executing-proposals"},"Executing Proposals"),(0,n.kt)("p",null,"Proposals are executed only when the tallying is done, and the group account's\ndecision policy allows the proposal to pass based on the tally outcome. They\nare marked by the status ",(0,n.kt)("inlineCode",{parentName:"p"},"PROPOSAL_STATUS_ACCEPTED"),". Execution must happen\nbefore a duration of ",(0,n.kt)("inlineCode",{parentName:"p"},"MaxExecutionPeriod")," (set by the chain developer) after\neach proposal's voting period end."),(0,n.kt)("p",null,"Proposals will not be automatically executed by the chain in this current design,\nbut rather a user must submit a ",(0,n.kt)("inlineCode",{parentName:"p"},"Msg/Exec")," transaction to attempt to execute the\nproposal based on the current votes and decision policy. Any user (not only the\ngroup members) can execute proposals that have been accepted, and execution fees are\npaid by the proposal executor.\nIt's also possible to try to execute a proposal immediately on creation or on\nnew votes using the ",(0,n.kt)("inlineCode",{parentName:"p"},"Exec")," field of ",(0,n.kt)("inlineCode",{parentName:"p"},"Msg/SubmitProposal")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"Msg/Vote")," requests.\nIn the former case, proposers signatures are considered as yes votes.\nIn these cases, if the proposal can't be executed (i.e. it didn't pass the\ndecision policy's rules), it will still be opened for new votes and\ncould be tallied and executed later on."),(0,n.kt)("p",null,"A successful proposal execution will have its ",(0,n.kt)("inlineCode",{parentName:"p"},"ExecutorResult")," marked as\n",(0,n.kt)("inlineCode",{parentName:"p"},"PROPOSAL_EXECUTOR_RESULT_SUCCESS"),". The proposal will be automatically pruned\nafter execution. On the other hand, a failed proposal execution will be marked\nas ",(0,n.kt)("inlineCode",{parentName:"p"},"PROPOSAL_EXECUTOR_RESULT_FAILURE"),". Such a proposal can be re-executed\nmultiple times, until it expires after ",(0,n.kt)("inlineCode",{parentName:"p"},"MaxExecutionPeriod")," after voting period\nend."),(0,n.kt)("h3",{id:"pruning"},"Pruning"),(0,n.kt)("p",null,"Proposals and votes are automatically pruned to avoid state bloat."),(0,n.kt)("p",null,"Votes are pruned:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"either after a successful tally, i.e. a tally whose result passes the decision\npolicy's rules, which can be trigged by a ",(0,n.kt)("inlineCode",{parentName:"li"},"Msg/Exec")," or a\n",(0,n.kt)("inlineCode",{parentName:"li"},"Msg/{SubmitProposal,Vote}")," with the ",(0,n.kt)("inlineCode",{parentName:"li"},"Exec")," field set,"),(0,n.kt)("li",{parentName:"ul"},"or on ",(0,n.kt)("inlineCode",{parentName:"li"},"EndBlock")," right after the proposal's voting period end. This applies to proposals with status ",(0,n.kt)("inlineCode",{parentName:"li"},"aborted")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"withdrawn")," too.")),(0,n.kt)("p",null,"whichever happens first."),(0,n.kt)("p",null,"Proposals are pruned:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"on ",(0,n.kt)("inlineCode",{parentName:"li"},"EndBlock")," whose proposal status is ",(0,n.kt)("inlineCode",{parentName:"li"},"withdrawn")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"aborted")," on proposal's voting period end before tallying,"),(0,n.kt)("li",{parentName:"ul"},"and either after a successful proposal execution,"),(0,n.kt)("li",{parentName:"ul"},"or on ",(0,n.kt)("inlineCode",{parentName:"li"},"EndBlock")," right after the proposal's ",(0,n.kt)("inlineCode",{parentName:"li"},"voting_period_end")," +\n",(0,n.kt)("inlineCode",{parentName:"li"},"max_execution_period")," (defined as an app-wide configuration) is passed,")),(0,n.kt)("p",null,"whichever happens first."),(0,n.kt)("h2",{id:"state"},"State"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"group")," module uses the ",(0,n.kt)("inlineCode",{parentName:"p"},"orm")," package which provides table storage with support for\nprimary keys and secondary indexes. ",(0,n.kt)("inlineCode",{parentName:"p"},"orm")," also defines ",(0,n.kt)("inlineCode",{parentName:"p"},"Sequence")," which is a persistent unique key generator based on a counter that can be used along with ",(0,n.kt)("inlineCode",{parentName:"p"},"Table"),"s."),(0,n.kt)("p",null,"Here's the list of tables and associated sequences and indexes stored as part of the ",(0,n.kt)("inlineCode",{parentName:"p"},"group")," module."),(0,n.kt)("h3",{id:"group-table"},"Group Table"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"groupTable")," stores ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupInfo"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"0x0 | BigEndian(GroupId) -> ProtocolBuffer(GroupInfo)"),"."),(0,n.kt)("h4",{id:"groupseq"},"groupSeq"),(0,n.kt)("p",null,"The value of ",(0,n.kt)("inlineCode",{parentName:"p"},"groupSeq")," is incremented when creating a new group and corresponds to the new ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupId"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"0x1 | 0x1 -> BigEndian"),"."),(0,n.kt)("p",null,"The second ",(0,n.kt)("inlineCode",{parentName:"p"},"0x1")," corresponds to the ORM ",(0,n.kt)("inlineCode",{parentName:"p"},"sequenceStorageKey"),"."),(0,n.kt)("h4",{id:"groupbyadminindex"},"groupByAdminIndex"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"groupByAdminIndex")," allows to retrieve groups by admin address:\n",(0,n.kt)("inlineCode",{parentName:"p"},"0x2 | len([]byte(group.Admin)) | []byte(group.Admin) | BigEndian(GroupId) -> []byte()"),"."),(0,n.kt)("h3",{id:"group-member-table"},"Group Member Table"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"groupMemberTable")," stores ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupMember"),"s: ",(0,n.kt)("inlineCode",{parentName:"p"},"0x10 | BigEndian(GroupId) | []byte(member.Address) -> ProtocolBuffer(GroupMember)"),"."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"groupMemberTable")," is a primary key table and its ",(0,n.kt)("inlineCode",{parentName:"p"},"PrimaryKey")," is given by\n",(0,n.kt)("inlineCode",{parentName:"p"},"BigEndian(GroupId) | []byte(member.Address)")," which is used by the following indexes."),(0,n.kt)("h4",{id:"groupmemberbygroupindex"},"groupMemberByGroupIndex"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"groupMemberByGroupIndex")," allows to retrieve group members by group id:\n",(0,n.kt)("inlineCode",{parentName:"p"},"0x11 | BigEndian(GroupId) | PrimaryKey -> []byte()"),"."),(0,n.kt)("h4",{id:"groupmemberbymemberindex"},"groupMemberByMemberIndex"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"groupMemberByMemberIndex")," allows to retrieve group members by member address:\n",(0,n.kt)("inlineCode",{parentName:"p"},"0x12 | len([]byte(member.Address)) | []byte(member.Address) | PrimaryKey -> []byte()"),"."),(0,n.kt)("h3",{id:"group-policy-table"},"Group Policy Table"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"groupPolicyTable")," stores ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupPolicyInfo"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"0x20 | len([]byte(Address)) | []byte(Address) -> ProtocolBuffer(GroupPolicyInfo)"),"."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"groupPolicyTable")," is a primary key table and its ",(0,n.kt)("inlineCode",{parentName:"p"},"PrimaryKey")," is given by\n",(0,n.kt)("inlineCode",{parentName:"p"},"len([]byte(Address)) | []byte(Address)")," which is used by the following indexes."),(0,n.kt)("h4",{id:"grouppolicyseq"},"groupPolicySeq"),(0,n.kt)("p",null,"The value of ",(0,n.kt)("inlineCode",{parentName:"p"},"groupPolicySeq")," is incremented when creating a new group policy and is used to generate the new group policy account ",(0,n.kt)("inlineCode",{parentName:"p"},"Address"),":\n",(0,n.kt)("inlineCode",{parentName:"p"},"0x21 | 0x1 -> BigEndian"),"."),(0,n.kt)("p",null,"The second ",(0,n.kt)("inlineCode",{parentName:"p"},"0x1")," corresponds to the ORM ",(0,n.kt)("inlineCode",{parentName:"p"},"sequenceStorageKey"),"."),(0,n.kt)("h4",{id:"grouppolicybygroupindex"},"groupPolicyByGroupIndex"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"groupPolicyByGroupIndex")," allows to retrieve group policies by group id:\n",(0,n.kt)("inlineCode",{parentName:"p"},"0x22 | BigEndian(GroupId) | PrimaryKey -> []byte()"),"."),(0,n.kt)("h4",{id:"grouppolicybyadminindex"},"groupPolicyByAdminIndex"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"groupPolicyByAdminIndex")," allows to retrieve group policies by admin address:\n",(0,n.kt)("inlineCode",{parentName:"p"},"0x23 | len([]byte(Address)) | []byte(Address) | PrimaryKey -> []byte()"),"."),(0,n.kt)("h3",{id:"proposal-table"},"Proposal Table"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"proposalTable")," stores ",(0,n.kt)("inlineCode",{parentName:"p"},"Proposal"),"s: ",(0,n.kt)("inlineCode",{parentName:"p"},"0x30 | BigEndian(ProposalId) -> ProtocolBuffer(Proposal)"),"."),(0,n.kt)("h4",{id:"proposalseq"},"proposalSeq"),(0,n.kt)("p",null,"The value of ",(0,n.kt)("inlineCode",{parentName:"p"},"proposalSeq")," is incremented when creating a new proposal and corresponds to the new ",(0,n.kt)("inlineCode",{parentName:"p"},"ProposalId"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"0x31 | 0x1 -> BigEndian"),"."),(0,n.kt)("p",null,"The second ",(0,n.kt)("inlineCode",{parentName:"p"},"0x1")," corresponds to the ORM ",(0,n.kt)("inlineCode",{parentName:"p"},"sequenceStorageKey"),"."),(0,n.kt)("h4",{id:"proposalbygrouppolicyindex"},"proposalByGroupPolicyIndex"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"proposalByGroupPolicyIndex")," allows to retrieve proposals by group policy account address:\n",(0,n.kt)("inlineCode",{parentName:"p"},"0x32 | len([]byte(account.Address)) | []byte(account.Address) | BigEndian(ProposalId) -> []byte()"),"."),(0,n.kt)("h4",{id:"proposalsbyvotingperiodendindex"},"ProposalsByVotingPeriodEndIndex"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"proposalsByVotingPeriodEndIndex")," allows to retrieve proposals sorted by chronological ",(0,n.kt)("inlineCode",{parentName:"p"},"voting_period_end"),":\n",(0,n.kt)("inlineCode",{parentName:"p"},"0x33 | sdk.FormatTimeBytes(proposal.VotingPeriodEnd) | BigEndian(ProposalId) -> []byte()"),"."),(0,n.kt)("p",null,"This index is used when tallying the proposal votes at the end of the voting period, and for pruning proposals at ",(0,n.kt)("inlineCode",{parentName:"p"},"VotingPeriodEnd + MaxExecutionPeriod"),"."),(0,n.kt)("h3",{id:"vote-table"},"Vote Table"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"voteTable")," stores ",(0,n.kt)("inlineCode",{parentName:"p"},"Vote"),"s: ",(0,n.kt)("inlineCode",{parentName:"p"},"0x40 | BigEndian(ProposalId) | []byte(voter.Address) -> ProtocolBuffer(Vote)"),"."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"voteTable")," is a primary key table and its ",(0,n.kt)("inlineCode",{parentName:"p"},"PrimaryKey")," is given by\n",(0,n.kt)("inlineCode",{parentName:"p"},"BigEndian(ProposalId) | []byte(voter.Address)")," which is used by the following indexes."),(0,n.kt)("h4",{id:"votebyproposalindex"},"voteByProposalIndex"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"voteByProposalIndex")," allows to retrieve votes by proposal id:\n",(0,n.kt)("inlineCode",{parentName:"p"},"0x41 | BigEndian(ProposalId) | PrimaryKey -> []byte()"),"."),(0,n.kt)("h4",{id:"votebyvoterindex"},"voteByVoterIndex"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"voteByVoterIndex")," allows to retrieve votes by voter address:\n",(0,n.kt)("inlineCode",{parentName:"p"},"0x42 | len([]byte(voter.Address)) | []byte(voter.Address) | PrimaryKey -> []byte()"),"."),(0,n.kt)("h2",{id:"msg-service"},"Msg Service"),(0,n.kt)("h3",{id:"msgcreategroup"},"Msg/CreateGroup"),(0,n.kt)("p",null,"A new group can be created with the ",(0,n.kt)("inlineCode",{parentName:"p"},"MsgCreateGroup"),", which has an admin address, a list of members and some optional metadata."),(0,n.kt)("p",null,"The metadata has a maximum length that is chosen by the app developer, and\npassed into the group keeper as a config."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L67-L80\n")),(0,n.kt)("p",null,"It's expected to fail if"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"metadata length is greater than ",(0,n.kt)("inlineCode",{parentName:"li"},"MaxMetadataLen")," config"),(0,n.kt)("li",{parentName:"ul"},"members are not correctly set (e.g. wrong address format, duplicates, or with 0 weight).")),(0,n.kt)("h3",{id:"msgupdategroupmembers"},"Msg/UpdateGroupMembers"),(0,n.kt)("p",null,"Group members can be updated with the ",(0,n.kt)("inlineCode",{parentName:"p"},"UpdateGroupMembers"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L88-L102\n")),(0,n.kt)("p",null,"In the list of ",(0,n.kt)("inlineCode",{parentName:"p"},"MemberUpdates"),", an existing member can be removed by setting its weight to 0."),(0,n.kt)("p",null,"It's expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the signer is not the admin of the group."),(0,n.kt)("li",{parentName:"ul"},"for any one of the associated group policies, if its decision policy's ",(0,n.kt)("inlineCode",{parentName:"li"},"Validate()")," method fails against the updated group.")),(0,n.kt)("h3",{id:"msgupdategroupadmin"},"Msg/UpdateGroupAdmin"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"UpdateGroupAdmin")," can be used to update a group admin."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L107-L120\n")),(0,n.kt)("p",null,"It's expected to fail if the signer is not the admin of the group."),(0,n.kt)("h3",{id:"msgupdategroupmetadata"},"Msg/UpdateGroupMetadata"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"UpdateGroupMetadata")," can be used to update a group metadata."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L125-L138\n")),(0,n.kt)("p",null,"It's expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"new metadata length is greater than ",(0,n.kt)("inlineCode",{parentName:"li"},"MaxMetadataLen")," config."),(0,n.kt)("li",{parentName:"ul"},"the signer is not the admin of the group.")),(0,n.kt)("h3",{id:"msgcreategrouppolicy"},"Msg/CreateGroupPolicy"),(0,n.kt)("p",null,"A new group policy can be created with the ",(0,n.kt)("inlineCode",{parentName:"p"},"MsgCreateGroupPolicy"),", which has an admin address, a group id, a decision policy and some optional metadata."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L147-L165\n")),(0,n.kt)("p",null,"It's expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the signer is not the admin of the group."),(0,n.kt)("li",{parentName:"ul"},"metadata length is greater than ",(0,n.kt)("inlineCode",{parentName:"li"},"MaxMetadataLen")," config."),(0,n.kt)("li",{parentName:"ul"},"the decision policy's ",(0,n.kt)("inlineCode",{parentName:"li"},"Validate()")," method doesn't pass against the group.")),(0,n.kt)("h3",{id:"msgcreategroupwithpolicy"},"Msg/CreateGroupWithPolicy"),(0,n.kt)("p",null,"A new group with policy can be created with the ",(0,n.kt)("inlineCode",{parentName:"p"},"MsgCreateGroupWithPolicy"),", which has an admin address, a list of members, a decision policy, a ",(0,n.kt)("inlineCode",{parentName:"p"},"group_policy_as_admin")," field to optionally set group and group policy admin with group policy address and some optional metadata for group and group policy."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L191-L215\n")),(0,n.kt)("p",null,"It's expected to fail for the same reasons as ",(0,n.kt)("inlineCode",{parentName:"p"},"Msg/CreateGroup")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"Msg/CreateGroupPolicy"),"."),(0,n.kt)("h3",{id:"msgupdategrouppolicyadmin"},"Msg/UpdateGroupPolicyAdmin"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"UpdateGroupPolicyAdmin")," can be used to update a group policy admin."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L173-L186\n")),(0,n.kt)("p",null,"It's expected to fail if the signer is not the admin of the group policy."),(0,n.kt)("h3",{id:"msgupdategrouppolicydecisionpolicy"},"Msg/UpdateGroupPolicyDecisionPolicy"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"UpdateGroupPolicyDecisionPolicy")," can be used to update a decision policy."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L226-L241\n")),(0,n.kt)("p",null,"It's expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the signer is not the admin of the group policy."),(0,n.kt)("li",{parentName:"ul"},"the new decision policy's ",(0,n.kt)("inlineCode",{parentName:"li"},"Validate()")," method doesn't pass against the group.")),(0,n.kt)("h3",{id:"msgupdategrouppolicymetadata"},"Msg/UpdateGroupPolicyMetadata"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"UpdateGroupPolicyMetadata")," can be used to update a group policy metadata."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L246-L259\n")),(0,n.kt)("p",null,"It's expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"new metadata length is greater than ",(0,n.kt)("inlineCode",{parentName:"li"},"MaxMetadataLen")," config."),(0,n.kt)("li",{parentName:"ul"},"the signer is not the admin of the group.")),(0,n.kt)("h3",{id:"msgsubmitproposal"},"Msg/SubmitProposal"),(0,n.kt)("p",null,"A new proposal can be created with the ",(0,n.kt)("inlineCode",{parentName:"p"},"MsgSubmitProposal"),", which has a group policy account address, a list of proposers addresses, a list of messages to execute if the proposal is accepted and some optional metadata.\nAn optional ",(0,n.kt)("inlineCode",{parentName:"p"},"Exec")," value can be provided to try to execute the proposal immediately after proposal creation. Proposers signatures are considered as yes votes in this case."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L281-L315\n")),(0,n.kt)("p",null,"It's expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"metadata, title, or summary length is greater than ",(0,n.kt)("inlineCode",{parentName:"li"},"MaxMetadataLen")," config."),(0,n.kt)("li",{parentName:"ul"},"if any of the proposers is not a group member.")),(0,n.kt)("h3",{id:"msgwithdrawproposal"},"Msg/WithdrawProposal"),(0,n.kt)("p",null,"A proposal can be withdrawn using ",(0,n.kt)("inlineCode",{parentName:"p"},"MsgWithdrawProposal")," which has an ",(0,n.kt)("inlineCode",{parentName:"p"},"address")," (can be either a proposer or the group policy admin) and a ",(0,n.kt)("inlineCode",{parentName:"p"},"proposal_id")," (which has to be withdrawn)."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L323-L333\n")),(0,n.kt)("p",null,"It's expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the signer is neither the group policy admin nor proposer of the proposal."),(0,n.kt)("li",{parentName:"ul"},"the proposal is already closed or aborted.")),(0,n.kt)("h3",{id:"msgvote"},"Msg/Vote"),(0,n.kt)("p",null,"A new vote can be created with the ",(0,n.kt)("inlineCode",{parentName:"p"},"MsgVote"),", given a proposal id, a voter address, a choice (yes, no, veto or abstain) and some optional metadata.\nAn optional ",(0,n.kt)("inlineCode",{parentName:"p"},"Exec")," value can be provided to try to execute the proposal immediately after voting."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L338-L358\n")),(0,n.kt)("p",null,"It's expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"metadata length is greater than ",(0,n.kt)("inlineCode",{parentName:"li"},"MaxMetadataLen")," config."),(0,n.kt)("li",{parentName:"ul"},"the proposal is not in voting period anymore.")),(0,n.kt)("h3",{id:"msgexec"},"Msg/Exec"),(0,n.kt)("p",null,"A proposal can be executed with the ",(0,n.kt)("inlineCode",{parentName:"p"},"MsgExec"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L363-L373\n")),(0,n.kt)("p",null,"The messages that are part of this proposal won't be executed if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the proposal has not been accepted by the group policy."),(0,n.kt)("li",{parentName:"ul"},"the proposal has already been successfully executed.")),(0,n.kt)("h3",{id:"msgleavegroup"},"Msg/LeaveGroup"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"MsgLeaveGroup")," allows group member to leave a group."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/group/v1/tx.proto#L381-L391\n")),(0,n.kt)("p",null,"It's expected to fail if:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the group member is not part of the group."),(0,n.kt)("li",{parentName:"ul"},"for any one of the associated group policies, if its decision policy's ",(0,n.kt)("inlineCode",{parentName:"li"},"Validate()")," method fails against the updated group.")),(0,n.kt)("h2",{id:"events"},"Events"),(0,n.kt)("p",null,"The group module emits the following events:"),(0,n.kt)("h3",{id:"eventcreategroup"},"EventCreateGroup"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"/cosmos.group.v1.Msg/CreateGroup")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventCreateGroup"),(0,n.kt)("td",{parentName:"tr",align:null},"group_id"),(0,n.kt)("td",{parentName:"tr",align:null},"{groupId}")))),(0,n.kt)("h3",{id:"eventupdategroup"},"EventUpdateGroup"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"/cosmos.group.v1.Msg/UpdateGroup{Admin","|","Metadata","|","Members}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventUpdateGroup"),(0,n.kt)("td",{parentName:"tr",align:null},"group_id"),(0,n.kt)("td",{parentName:"tr",align:null},"{groupId}")))),(0,n.kt)("h3",{id:"eventcreategrouppolicy"},"EventCreateGroupPolicy"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"/cosmos.group.v1.Msg/CreateGroupPolicy")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventCreateGroupPolicy"),(0,n.kt)("td",{parentName:"tr",align:null},"address"),(0,n.kt)("td",{parentName:"tr",align:null},"{groupPolicyAddress}")))),(0,n.kt)("h3",{id:"eventupdategrouppolicy"},"EventUpdateGroupPolicy"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"/cosmos.group.v1.Msg/UpdateGroupPolicy{Admin","|","Metadata","|","DecisionPolicy}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventUpdateGroupPolicy"),(0,n.kt)("td",{parentName:"tr",align:null},"address"),(0,n.kt)("td",{parentName:"tr",align:null},"{groupPolicyAddress}")))),(0,n.kt)("h3",{id:"eventcreateproposal"},"EventCreateProposal"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"/cosmos.group.v1.Msg/CreateProposal")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventCreateProposal"),(0,n.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,n.kt)("td",{parentName:"tr",align:null},"{proposalId}")))),(0,n.kt)("h3",{id:"eventwithdrawproposal"},"EventWithdrawProposal"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"/cosmos.group.v1.Msg/WithdrawProposal")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventWithdrawProposal"),(0,n.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,n.kt)("td",{parentName:"tr",align:null},"{proposalId}")))),(0,n.kt)("h3",{id:"eventvote"},"EventVote"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"/cosmos.group.v1.Msg/Vote")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventVote"),(0,n.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,n.kt)("td",{parentName:"tr",align:null},"{proposalId}")))),(0,n.kt)("h2",{id:"eventexec"},"EventExec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"/cosmos.group.v1.Msg/Exec")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventExec"),(0,n.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,n.kt)("td",{parentName:"tr",align:null},"{proposalId}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventExec"),(0,n.kt)("td",{parentName:"tr",align:null},"logs"),(0,n.kt)("td",{parentName:"tr",align:null},"{logs_string}")))),(0,n.kt)("h3",{id:"eventleavegroup"},"EventLeaveGroup"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"/cosmos.group.v1.Msg/LeaveGroup")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventLeaveGroup"),(0,n.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,n.kt)("td",{parentName:"tr",align:null},"{proposalId}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventLeaveGroup"),(0,n.kt)("td",{parentName:"tr",align:null},"address"),(0,n.kt)("td",{parentName:"tr",align:null},"{address}")))),(0,n.kt)("h3",{id:"eventproposalpruned"},"EventProposalPruned"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,n.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"message"),(0,n.kt)("td",{parentName:"tr",align:null},"action"),(0,n.kt)("td",{parentName:"tr",align:null},"/cosmos.group.v1.Msg/LeaveGroup")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventProposalPruned"),(0,n.kt)("td",{parentName:"tr",align:null},"proposal_id"),(0,n.kt)("td",{parentName:"tr",align:null},"{proposalId}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventProposalPruned"),(0,n.kt)("td",{parentName:"tr",align:null},"status"),(0,n.kt)("td",{parentName:"tr",align:null},"{ProposalStatus}")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cosmos.group.v1.EventProposalPruned"),(0,n.kt)("td",{parentName:"tr",align:null},"tally_result"),(0,n.kt)("td",{parentName:"tr",align:null},"{TallyResult}")))),(0,n.kt)("h2",{id:"client"},"Client"),(0,n.kt)("h3",{id:"cli"},"CLI"),(0,n.kt)("p",null,"A user can query and interact with the ",(0,n.kt)("inlineCode",{parentName:"p"},"group")," module using the CLI."),(0,n.kt)("h4",{id:"query"},"Query"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"query")," commands allow users to query ",(0,n.kt)("inlineCode",{parentName:"p"},"group")," state."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group --help\n")),(0,n.kt)("h5",{id:"group-info"},"group-info"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"group-info")," command allows users to query for group info by given group id."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group group-info [id] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group group-info 1\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'admin: cosmos1..\ngroup_id: "1"\nmetadata: AQ==\ntotal_weight: "3"\nversion: "1"\n')),(0,n.kt)("h5",{id:"group-policy-info"},"group-policy-info"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"group-policy-info")," command allows users to query for group policy info by account address of group policy ."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group group-policy-info [group-policy-account] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group group-policy-info cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'address: cosmos1..\nadmin: cosmos1..\ndecision_policy:\n  \'@type\': /cosmos.group.v1.ThresholdDecisionPolicy\n  threshold: "1"\n  windows:\n      min_execution_period: 0s\n      voting_period: 432000s\ngroup_id: "1"\nmetadata: AQ==\nversion: "1"\n')),(0,n.kt)("h5",{id:"group-members"},"group-members"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"group-members")," command allows users to query for group members by group id with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group group-members [id] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group group-members 1\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'members:\n- group_id: "1"\n  member:\n    address: cosmos1..\n    metadata: AQ==\n    weight: "2"\n- group_id: "1"\n  member:\n    address: cosmos1..\n    metadata: AQ==\n    weight: "1"\npagination:\n  next_key: null\n  total: "2"\n')),(0,n.kt)("h5",{id:"groups-by-admin"},"groups-by-admin"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"groups-by-admin")," command allows users to query for groups by admin account address with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group groups-by-admin [admin] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group groups-by-admin cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'groups:\n- admin: cosmos1..\n  group_id: "1"\n  metadata: AQ==\n  total_weight: "3"\n  version: "1"\n- admin: cosmos1..\n  group_id: "2"\n  metadata: AQ==\n  total_weight: "3"\n  version: "1"\npagination:\n  next_key: null\n  total: "2"\n')),(0,n.kt)("h5",{id:"group-policies-by-group"},"group-policies-by-group"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"group-policies-by-group")," command allows users to query for group policies by group id with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group group-policies-by-group [group-id] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group group-policies-by-group 1\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'group_policies:\n- address: cosmos1..\n  admin: cosmos1..\n  decision_policy:\n    \'@type\': /cosmos.group.v1.ThresholdDecisionPolicy\n    threshold: "1"\n    windows:\n      min_execution_period: 0s\n      voting_period: 432000s\n  group_id: "1"\n  metadata: AQ==\n  version: "1"\n- address: cosmos1..\n  admin: cosmos1..\n  decision_policy:\n    \'@type\': /cosmos.group.v1.ThresholdDecisionPolicy\n    threshold: "1"\n    windows:\n      min_execution_period: 0s\n      voting_period: 432000s\n  group_id: "1"\n  metadata: AQ==\n  version: "1"\npagination:\n  next_key: null\n  total: "2"\n')),(0,n.kt)("h5",{id:"group-policies-by-admin"},"group-policies-by-admin"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"group-policies-by-admin")," command allows users to query for group policies by admin account address with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group group-policies-by-admin [admin] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group group-policies-by-admin cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'group_policies:\n- address: cosmos1..\n  admin: cosmos1..\n  decision_policy:\n    \'@type\': /cosmos.group.v1.ThresholdDecisionPolicy\n    threshold: "1"\n    windows:\n      min_execution_period: 0s\n      voting_period: 432000s\n  group_id: "1"\n  metadata: AQ==\n  version: "1"\n- address: cosmos1..\n  admin: cosmos1..\n  decision_policy:\n    \'@type\': /cosmos.group.v1.ThresholdDecisionPolicy\n    threshold: "1"\n    windows:\n      min_execution_period: 0s\n      voting_period: 432000s\n  group_id: "1"\n  metadata: AQ==\n  version: "1"\npagination:\n  next_key: null\n  total: "2"\n')),(0,n.kt)("h5",{id:"proposal-1"},"proposal"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"proposal")," command allows users to query for proposal by id."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group proposal [id] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group proposal 1\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'proposal:\n  address: cosmos1..\n  executor_result: EXECUTOR_RESULT_NOT_RUN\n  group_policy_version: "1"\n  group_version: "1"\n  metadata: AQ==\n  msgs:\n  - \'@type\': /cosmos.bank.v1beta1.MsgSend\n    amount:\n    - amount: "100000000"\n      denom: stake\n    from_address: cosmos1..\n    to_address: cosmos1..\n  proposal_id: "1"\n  proposers:\n  - cosmos1..\n  result: RESULT_UNFINALIZED\n  status: STATUS_SUBMITTED\n  submitted_at: "2021-12-17T07:06:26.310638964Z"\n  windows:\n    min_execution_period: 0s\n    voting_period: 432000s\n  vote_state:\n    abstain_count: "0"\n    no_count: "0"\n    veto_count: "0"\n    yes_count: "0"\n  summary: "Summary"\n  title: "Title"\n')),(0,n.kt)("h5",{id:"proposals-by-group-policy"},"proposals-by-group-policy"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"proposals-by-group-policy")," command allows users to query for proposals by account address of group policy with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group proposals-by-group-policy [group-policy-account] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group proposals-by-group-policy cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'pagination:\n  next_key: null\n  total: "1"\nproposals:\n- address: cosmos1..\n  executor_result: EXECUTOR_RESULT_NOT_RUN\n  group_policy_version: "1"\n  group_version: "1"\n  metadata: AQ==\n  msgs:\n  - \'@type\': /cosmos.bank.v1beta1.MsgSend\n    amount:\n    - amount: "100000000"\n      denom: stake\n    from_address: cosmos1..\n    to_address: cosmos1..\n  proposal_id: "1"\n  proposers:\n  - cosmos1..\n  result: RESULT_UNFINALIZED\n  status: STATUS_SUBMITTED\n  submitted_at: "2021-12-17T07:06:26.310638964Z"\n  windows:\n    min_execution_period: 0s\n    voting_period: 432000s\n  vote_state:\n    abstain_count: "0"\n    no_count: "0"\n    veto_count: "0"\n    yes_count: "0"\n  summary: "Summary"\n  title: "Title"\n')),(0,n.kt)("h5",{id:"vote"},"vote"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"vote")," command allows users to query for vote by proposal id and voter account address."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group vote [proposal-id] [voter] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group vote 1 cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'vote:\n  choice: CHOICE_YES\n  metadata: AQ==\n  proposal_id: "1"\n  submitted_at: "2021-12-17T08:05:02.490164009Z"\n  voter: cosmos1..\n')),(0,n.kt)("h5",{id:"votes-by-proposal"},"votes-by-proposal"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"votes-by-proposal")," command allows users to query for votes by proposal id with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group votes-by-proposal [proposal-id] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group votes-by-proposal 1\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'pagination:\n  next_key: null\n  total: "1"\nvotes:\n- choice: CHOICE_YES\n  metadata: AQ==\n  proposal_id: "1"\n  submitted_at: "2021-12-17T08:05:02.490164009Z"\n  voter: cosmos1..\n')),(0,n.kt)("h5",{id:"votes-by-voter"},"votes-by-voter"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"votes-by-voter")," command allows users to query for votes by voter account address with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group votes-by-voter [voter] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd query group votes-by-voter cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'pagination:\n  next_key: null\n  total: "1"\nvotes:\n- choice: CHOICE_YES\n  metadata: AQ==\n  proposal_id: "1"\n  submitted_at: "2021-12-17T08:05:02.490164009Z"\n  voter: cosmos1..\n')),(0,n.kt)("h3",{id:"transactions"},"Transactions"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"tx")," commands allow users to interact with the ",(0,n.kt)("inlineCode",{parentName:"p"},"group")," module."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group --help\n")),(0,n.kt)("h4",{id:"create-group"},"create-group"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"create-group")," command allows users to create a group which is an aggregation of member accounts with associated weights and\nan administrator account."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group create-group [admin] [metadata] [members-json-file]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx group create-group cosmos1.. "AQ==" members.json\n')),(0,n.kt)("h4",{id:"update-group-admin"},"update-group-admin"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"update-group-admin")," command allows users to update a group's admin."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group update-group-admin [admin] [group-id] [new-admin] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group update-group-admin cosmos1.. 1 cosmos1..\n")),(0,n.kt)("h4",{id:"update-group-members"},"update-group-members"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"update-group-members")," command allows users to update a group's members."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group update-group-members [admin] [group-id] [members-json-file] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group update-group-members cosmos1.. 1 members.json\n")),(0,n.kt)("h4",{id:"update-group-metadata"},"update-group-metadata"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"update-group-metadata")," command allows users to update a group's metadata."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group update-group-metadata [admin] [group-id] [metadata] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx group update-group-metadata cosmos1.. 1 "AQ=="\n')),(0,n.kt)("h4",{id:"create-group-policy"},"create-group-policy"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"create-group-policy")," command allows users to create a group policy which is an account associated with a group and a decision policy."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group create-group-policy [admin] [group-id] [metadata] [decision-policy] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx group create-group-policy cosmos1.. 1 "AQ==" \'{"@type":"/cosmos.group.v1.ThresholdDecisionPolicy", "threshold":"1", "windows": {"voting_period": "120h", "min_execution_period": "0s"}}\'\n')),(0,n.kt)("h4",{id:"create-group-with-policy"},"create-group-with-policy"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"create-group-with-policy")," command allows users to create a group which is an aggregation of member accounts with associated weights and an administrator account with decision policy. If the ",(0,n.kt)("inlineCode",{parentName:"p"},"--group-policy-as-admin")," flag is set to ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),", the group policy address becomes the group and group policy admin."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group create-group-with-policy [admin] [group-metadata] [group-policy-metadata] [members-json-file] [decision-policy] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx group create-group-with-policy cosmos1.. "AQ==" "AQ==" members.json \'{"@type":"/cosmos.group.v1.ThresholdDecisionPolicy", "threshold":"1", "windows": {"voting_period": "120h", "min_execution_period": "0s"}}\'\n')),(0,n.kt)("h4",{id:"update-group-policy-admin"},"update-group-policy-admin"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"update-group-policy-admin")," command allows users to update a group policy admin."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group update-group-policy-admin [admin] [group-policy-account] [new-admin] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group update-group-policy-admin cosmos1.. cosmos1.. cosmos1..\n")),(0,n.kt)("h4",{id:"update-group-policy-metadata"},"update-group-policy-metadata"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"update-group-policy-metadata")," command allows users to update a group policy metadata."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group update-group-policy-metadata [admin] [group-policy-account] [new-metadata] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx group update-group-policy-metadata cosmos1.. cosmos1.. "AQ=="\n')),(0,n.kt)("h4",{id:"update-group-policy-decision-policy"},"update-group-policy-decision-policy"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"update-group-policy-decision-policy")," command allows users to update a group policy's decision policy."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd  tx group update-group-policy-decision-policy [admin] [group-policy-account] [decision-policy] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx group update-group-policy-decision-policy cosmos1.. cosmos1.. \'{"@type":"/cosmos.group.v1.ThresholdDecisionPolicy", "threshold":"2", "windows": {"voting_period": "120h", "min_execution_period": "0s"}}\'\n')),(0,n.kt)("h4",{id:"create-proposal"},"create-proposal"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"create-proposal")," command allows users to submit a new proposal."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group create-proposal [group-policy-account] [proposer[,proposer]*] [msg_tx_json_file] [metadata] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx group create-proposal cosmos1.. cosmos1.. msg_tx.json "AQ=="\n')),(0,n.kt)("h4",{id:"withdraw-proposal"},"withdraw-proposal"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"withdraw-proposal")," command allows users to withdraw a proposal."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group withdraw-proposal [proposal-id] [group-policy-admin-or-proposer]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group withdraw-proposal 1 cosmos1..\n")),(0,n.kt)("h4",{id:"vote-1"},"vote"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"vote")," command allows users to vote on a proposal."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group vote proposal-id] [voter] [choice] [metadata] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'simd tx group vote 1 cosmos1.. CHOICE_YES "AQ=="\n')),(0,n.kt)("h4",{id:"exec"},"exec"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"exec")," command allows users to execute a proposal."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group exec [proposal-id] [flags]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group exec 1\n")),(0,n.kt)("h4",{id:"leave-group"},"leave-group"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"leave-group")," command allows group member to leave the group."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group leave-group [member-address] [group-id]\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"simd tx group leave-group cosmos1... 1\n")),(0,n.kt)("h3",{id:"grpc"},"gRPC"),(0,n.kt)("p",null,"A user can query the ",(0,n.kt)("inlineCode",{parentName:"p"},"group")," module using gRPC endpoints."),(0,n.kt)("h4",{id:"groupinfo"},"GroupInfo"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupInfo")," endpoint allows users to query for group info by given group id."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/GroupInfo\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"grpcurl -plaintext \\\n    -d '{\"group_id\":1}' localhost:9090 cosmos.group.v1.Query/GroupInfo\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "info": {\n    "groupId": "1",\n    "admin": "cosmos1..",\n    "metadata": "AQ==",\n    "version": "1",\n    "totalWeight": "3"\n  }\n}\n')),(0,n.kt)("h4",{id:"grouppolicyinfo"},"GroupPolicyInfo"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupPolicyInfo")," endpoint allows users to query for group policy info by account address of group policy."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/GroupPolicyInfo\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"address":"cosmos1.."}\'  localhost:9090 cosmos.group.v1.Query/GroupPolicyInfo\n')),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "info": {\n    "address": "cosmos1..",\n    "groupId": "1",\n    "admin": "cosmos1..",\n    "version": "1",\n    "decisionPolicy": {"@type":"/cosmos.group.v1.ThresholdDecisionPolicy","threshold":"1","windows": {"voting_period": "120h", "min_execution_period": "0s"}},\n  }\n}\n')),(0,n.kt)("h4",{id:"groupmembers"},"GroupMembers"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupMembers")," endpoint allows users to query for group members by group id with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/GroupMembers\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"group_id":"1"}\'  localhost:9090 cosmos.group.v1.Query/GroupMembers\n')),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "members": [\n    {\n      "groupId": "1",\n      "member": {\n        "address": "cosmos1..",\n        "weight": "1"\n      }\n    },\n    {\n      "groupId": "1",\n      "member": {\n        "address": "cosmos1..",\n        "weight": "2"\n      }\n    }\n  ],\n  "pagination": {\n    "total": "2"\n  }\n}\n')),(0,n.kt)("h4",{id:"groupsbyadmin"},"GroupsByAdmin"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupsByAdmin")," endpoint allows users to query for groups by admin account address with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/GroupsByAdmin\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"admin":"cosmos1.."}\'  localhost:9090 cosmos.group.v1.Query/GroupsByAdmin\n')),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "groups": [\n    {\n      "groupId": "1",\n      "admin": "cosmos1..",\n      "metadata": "AQ==",\n      "version": "1",\n      "totalWeight": "3"\n    },\n    {\n      "groupId": "2",\n      "admin": "cosmos1..",\n      "metadata": "AQ==",\n      "version": "1",\n      "totalWeight": "3"\n    }\n  ],\n  "pagination": {\n    "total": "2"\n  }\n}\n')),(0,n.kt)("h4",{id:"grouppoliciesbygroup"},"GroupPoliciesByGroup"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupPoliciesByGroup")," endpoint allows users to query for group policies by group id with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/GroupPoliciesByGroup\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"group_id":"1"}\'  localhost:9090 cosmos.group.v1.Query/GroupPoliciesByGroup\n')),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "GroupPolicies": [\n    {\n      "address": "cosmos1..",\n      "groupId": "1",\n      "admin": "cosmos1..",\n      "version": "1",\n      "decisionPolicy": {"@type":"/cosmos.group.v1.ThresholdDecisionPolicy","threshold":"1","windows":{"voting_period": "120h", "min_execution_period": "0s"}},\n    },\n    {\n      "address": "cosmos1..",\n      "groupId": "1",\n      "admin": "cosmos1..",\n      "version": "1",\n      "decisionPolicy": {"@type":"/cosmos.group.v1.ThresholdDecisionPolicy","threshold":"1","windows":{"voting_period": "120h", "min_execution_period": "0s"}},\n    }\n  ],\n  "pagination": {\n    "total": "2"\n  }\n}\n')),(0,n.kt)("h4",{id:"grouppoliciesbyadmin"},"GroupPoliciesByAdmin"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupPoliciesByAdmin")," endpoint allows users to query for group policies by admin account address with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/GroupPoliciesByAdmin\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"admin":"cosmos1.."}\'  localhost:9090 cosmos.group.v1.Query/GroupPoliciesByAdmin\n')),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "GroupPolicies": [\n    {\n      "address": "cosmos1..",\n      "groupId": "1",\n      "admin": "cosmos1..",\n      "version": "1",\n      "decisionPolicy": {"@type":"/cosmos.group.v1.ThresholdDecisionPolicy","threshold":"1","windows":{"voting_period": "120h", "min_execution_period": "0s"}},\n    },\n    {\n      "address": "cosmos1..",\n      "groupId": "1",\n      "admin": "cosmos1..",\n      "version": "1",\n      "decisionPolicy": {"@type":"/cosmos.group.v1.ThresholdDecisionPolicy","threshold":"1","windows":{"voting_period": "120h", "min_execution_period": "0s"}},\n    }\n  ],\n  "pagination": {\n    "total": "2"\n  }\n}\n')),(0,n.kt)("h4",{id:"proposal-2"},"Proposal"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Proposal")," endpoint allows users to query for proposal by id."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/Proposal\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1"}\'  localhost:9090 cosmos.group.v1.Query/Proposal\n')),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposal": {\n    "proposalId": "1",\n    "address": "cosmos1..",\n    "proposers": [\n      "cosmos1.."\n    ],\n    "submittedAt": "2021-12-17T07:06:26.310638964Z",\n    "groupVersion": "1",\n    "GroupPolicyVersion": "1",\n    "status": "STATUS_SUBMITTED",\n    "result": "RESULT_UNFINALIZED",\n    "voteState": {\n      "yesCount": "0",\n      "noCount": "0",\n      "abstainCount": "0",\n      "vetoCount": "0"\n    },\n    "windows": {\n      "min_execution_period": "0s",\n      "voting_period": "432000s"\n    },\n    "executorResult": "EXECUTOR_RESULT_NOT_RUN",\n    "messages": [\n      {"@type":"/cosmos.bank.v1beta1.MsgSend","amount":[{"denom":"stake","amount":"100000000"}],"fromAddress":"cosmos1..","toAddress":"cosmos1.."}\n    ],\n    "title": "Title",\n    "summary": "Summary",\n  }\n}\n')),(0,n.kt)("h4",{id:"proposalsbygrouppolicy"},"ProposalsByGroupPolicy"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"ProposalsByGroupPolicy")," endpoint allows users to query for proposals by account address of group policy with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/ProposalsByGroupPolicy\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"address":"cosmos1.."}\'  localhost:9090 cosmos.group.v1.Query/ProposalsByGroupPolicy\n')),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposals": [\n    {\n      "proposalId": "1",\n      "address": "cosmos1..",\n      "proposers": [\n        "cosmos1.."\n      ],\n      "submittedAt": "2021-12-17T08:03:27.099649352Z",\n      "groupVersion": "1",\n      "GroupPolicyVersion": "1",\n      "status": "STATUS_CLOSED",\n      "result": "RESULT_ACCEPTED",\n      "voteState": {\n        "yesCount": "1",\n        "noCount": "0",\n        "abstainCount": "0",\n        "vetoCount": "0"\n      },\n      "windows": {\n        "min_execution_period": "0s",\n        "voting_period": "432000s"\n      },\n      "executorResult": "EXECUTOR_RESULT_NOT_RUN",\n      "messages": [\n        {"@type":"/cosmos.bank.v1beta1.MsgSend","amount":[{"denom":"stake","amount":"100000000"}],"fromAddress":"cosmos1..","toAddress":"cosmos1.."}\n      ],\n      "title": "Title",\n      "summary": "Summary",\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,n.kt)("h4",{id:"votebyproposalvoter"},"VoteByProposalVoter"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"VoteByProposalVoter")," endpoint allows users to query for vote by proposal id and voter account address."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/VoteByProposalVoter\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1","voter":"cosmos1.."}\'  localhost:9090 cosmos.group.v1.Query/VoteByProposalVoter\n')),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "vote": {\n    "proposalId": "1",\n    "voter": "cosmos1..",\n    "choice": "CHOICE_YES",\n    "submittedAt": "2021-12-17T08:05:02.490164009Z"\n  }\n}\n')),(0,n.kt)("h4",{id:"votesbyproposal"},"VotesByProposal"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"VotesByProposal")," endpoint allows users to query for votes by proposal id with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/VotesByProposal\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"proposal_id":"1"}\'  localhost:9090 cosmos.group.v1.Query/VotesByProposal\n')),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "votes": [\n    {\n      "proposalId": "1",\n      "voter": "cosmos1..",\n      "choice": "CHOICE_YES",\n      "submittedAt": "2021-12-17T08:05:02.490164009Z"\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,n.kt)("h4",{id:"votesbyvoter"},"VotesByVoter"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"VotesByVoter")," endpoint allows users to query for votes by voter account address with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cosmos.group.v1.Query/VotesByVoter\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'grpcurl -plaintext \\\n    -d \'{"voter":"cosmos1.."}\'  localhost:9090 cosmos.group.v1.Query/VotesByVoter\n')),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "votes": [\n    {\n      "proposalId": "1",\n      "voter": "cosmos1..",\n      "choice": "CHOICE_YES",\n      "submittedAt": "2021-12-17T08:05:02.490164009Z"\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,n.kt)("h3",{id:"rest"},"REST"),(0,n.kt)("p",null,"A user can query the ",(0,n.kt)("inlineCode",{parentName:"p"},"group")," module using REST endpoints."),(0,n.kt)("h4",{id:"groupinfo-1"},"GroupInfo"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupInfo")," endpoint allows users to query for group info by given group id."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/group_info/{group_id}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1/group_info/1\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "info": {\n    "id": "1",\n    "admin": "cosmos1..",\n    "metadata": "AQ==",\n    "version": "1",\n    "total_weight": "3"\n  }\n}\n')),(0,n.kt)("h4",{id:"grouppolicyinfo-1"},"GroupPolicyInfo"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupPolicyInfo")," endpoint allows users to query for group policy info by account address of group policy."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/group_policy_info/{address}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1/group_policy_info/cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "info": {\n    "address": "cosmos1..",\n    "group_id": "1",\n    "admin": "cosmos1..",\n    "metadata": "AQ==",\n    "version": "1",\n    "decision_policy": {\n      "@type": "/cosmos.group.v1.ThresholdDecisionPolicy",\n      "threshold": "1",\n      "windows": {\n        "voting_period": "120h",\n        "min_execution_period": "0s"\n      }\n    },\n  }\n}\n')),(0,n.kt)("h4",{id:"groupmembers-1"},"GroupMembers"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupMembers")," endpoint allows users to query for group members by group id with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/group_members/{group_id}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1/group_members/1\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "members": [\n    {\n      "group_id": "1",\n      "member": {\n        "address": "cosmos1..",\n        "weight": "1",\n        "metadata": "AQ=="\n      }\n    },\n    {\n      "group_id": "1",\n      "member": {\n        "address": "cosmos1..",\n        "weight": "2",\n        "metadata": "AQ=="\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "2"\n  }\n}\n')),(0,n.kt)("h4",{id:"groupsbyadmin-1"},"GroupsByAdmin"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupsByAdmin")," endpoint allows users to query for groups by admin account address with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/groups_by_admin/{admin}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1/groups_by_admin/cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "groups": [\n    {\n      "id": "1",\n      "admin": "cosmos1..",\n      "metadata": "AQ==",\n      "version": "1",\n      "total_weight": "3"\n    },\n    {\n      "id": "2",\n      "admin": "cosmos1..",\n      "metadata": "AQ==",\n      "version": "1",\n      "total_weight": "3"\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "2"\n  }\n}\n')),(0,n.kt)("h4",{id:"grouppoliciesbygroup-1"},"GroupPoliciesByGroup"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupPoliciesByGroup")," endpoint allows users to query for group policies by group id with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/group_policies_by_group/{group_id}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1/group_policies_by_group/1\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "group_policies": [\n    {\n      "address": "cosmos1..",\n      "group_id": "1",\n      "admin": "cosmos1..",\n      "metadata": "AQ==",\n      "version": "1",\n      "decision_policy": {\n        "@type": "/cosmos.group.v1.ThresholdDecisionPolicy",\n        "threshold": "1",\n        "windows": {\n          "voting_period": "120h",\n          "min_execution_period": "0s"\n      }\n      },\n    },\n    {\n      "address": "cosmos1..",\n      "group_id": "1",\n      "admin": "cosmos1..",\n      "metadata": "AQ==",\n      "version": "1",\n      "decision_policy": {\n        "@type": "/cosmos.group.v1.ThresholdDecisionPolicy",\n        "threshold": "1",\n        "windows": {\n          "voting_period": "120h",\n          "min_execution_period": "0s"\n      }\n      },\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "2"\n  }\n}\n')),(0,n.kt)("h4",{id:"grouppoliciesbyadmin-1"},"GroupPoliciesByAdmin"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"GroupPoliciesByAdmin")," endpoint allows users to query for group policies by admin account address with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/group_policies_by_admin/{admin}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1/group_policies_by_admin/cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "group_policies": [\n    {\n      "address": "cosmos1..",\n      "group_id": "1",\n      "admin": "cosmos1..",\n      "metadata": "AQ==",\n      "version": "1",\n      "decision_policy": {\n        "@type": "/cosmos.group.v1.ThresholdDecisionPolicy",\n        "threshold": "1",\n        "windows": {\n          "voting_period": "120h",\n          "min_execution_period": "0s"\n      } \n      },\n    },\n    {\n      "address": "cosmos1..",\n      "group_id": "1",\n      "admin": "cosmos1..",\n      "metadata": "AQ==",\n      "version": "1",\n      "decision_policy": {\n        "@type": "/cosmos.group.v1.ThresholdDecisionPolicy",\n        "threshold": "1",\n        "windows": {\n          "voting_period": "120h",\n          "min_execution_period": "0s"\n      }\n      },\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "2"\n  }\n')),(0,n.kt)("h4",{id:"proposal-3"},"Proposal"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Proposal")," endpoint allows users to query for proposal by id."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/proposal/{proposal_id}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1/proposal/1\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposal": {\n    "proposal_id": "1",\n    "address": "cosmos1..",\n    "metadata": "AQ==",\n    "proposers": [\n      "cosmos1.."\n    ],\n    "submitted_at": "2021-12-17T07:06:26.310638964Z",\n    "group_version": "1",\n    "group_policy_version": "1",\n    "status": "STATUS_SUBMITTED",\n    "result": "RESULT_UNFINALIZED",\n    "vote_state": {\n      "yes_count": "0",\n      "no_count": "0",\n      "abstain_count": "0",\n      "veto_count": "0"\n    },\n    "windows": {\n      "min_execution_period": "0s",\n      "voting_period": "432000s"\n    },\n    "executor_result": "EXECUTOR_RESULT_NOT_RUN",\n    "messages": [\n      {\n        "@type": "/cosmos.bank.v1beta1.MsgSend",\n        "from_address": "cosmos1..",\n        "to_address": "cosmos1..",\n        "amount": [\n          {\n            "denom": "stake",\n            "amount": "100000000"\n          }\n        ]\n      }\n    ],\n    "title": "Title",\n    "summary": "Summary",\n  }\n}\n')),(0,n.kt)("h4",{id:"proposalsbygrouppolicy-1"},"ProposalsByGroupPolicy"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"ProposalsByGroupPolicy")," endpoint allows users to query for proposals by account address of group policy with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/proposals_by_group_policy/{address}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1/proposals_by_group_policy/cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "proposals": [\n    {\n      "id": "1",\n      "group_policy_address": "cosmos1..",\n      "metadata": "AQ==",\n      "proposers": [\n        "cosmos1.."\n      ],\n      "submit_time": "2021-12-17T08:03:27.099649352Z",\n      "group_version": "1",\n      "group_policy_version": "1",\n      "status": "STATUS_CLOSED",\n      "result": "RESULT_ACCEPTED",\n      "vote_state": {\n        "yes_count": "1",\n        "no_count": "0",\n        "abstain_count": "0",\n        "veto_count": "0"\n      },\n      "windows": {\n        "min_execution_period": "0s",\n        "voting_period": "432000s"\n      },\n      "executor_result": "EXECUTOR_RESULT_NOT_RUN",\n      "messages": [\n        {\n          "@type": "/cosmos.bank.v1beta1.MsgSend",\n          "from_address": "cosmos1..",\n          "to_address": "cosmos1..",\n          "amount": [\n            {\n              "denom": "stake",\n              "amount": "100000000"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,n.kt)("h4",{id:"votebyproposalvoter-1"},"VoteByProposalVoter"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"VoteByProposalVoter")," endpoint allows users to query for vote by proposal id and voter account address."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1beta1/vote_by_proposal_voter/1/cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "vote": {\n    "proposal_id": "1",\n    "voter": "cosmos1..",\n    "choice": "CHOICE_YES",\n    "metadata": "AQ==",\n    "submitted_at": "2021-12-17T08:05:02.490164009Z"\n  }\n}\n')),(0,n.kt)("h4",{id:"votesbyproposal-1"},"VotesByProposal"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"VotesByProposal")," endpoint allows users to query for votes by proposal id with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/votes_by_proposal/{proposal_id}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1/votes_by_proposal/1\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "votes": [\n    {\n      "proposal_id": "1",\n      "voter": "cosmos1..",\n      "option": "CHOICE_YES",\n      "metadata": "AQ==",\n      "submit_time": "2021-12-17T08:05:02.490164009Z"\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,n.kt)("h4",{id:"votesbyvoter-1"},"VotesByVoter"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"VotesByVoter")," endpoint allows users to query for votes by voter account address with pagination flags."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"/cosmos/group/v1/votes_by_voter/{voter}\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl localhost:1317/cosmos/group/v1/votes_by_voter/cosmos1..\n")),(0,n.kt)("p",null,"Example Output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "votes": [\n    {\n      "proposal_id": "1",\n      "voter": "cosmos1..",\n      "choice": "CHOICE_YES",\n      "metadata": "AQ==",\n      "submitted_at": "2021-12-17T08:05:02.490164009Z"\n    }\n  ],\n  "pagination": {\n    "next_key": null,\n    "total": "1"\n  }\n}\n')),(0,n.kt)("h2",{id:"metadata"},"Metadata"),(0,n.kt)("p",null,"The group module has four locations for metadata where users can provide further context about the on-chain actions they are taking. By default all metadata fields have a 255 character length field where metadata can be stored in json format, either on-chain or off-chain depending on the amount of data required. Here we provide a recommendation for the json structure and where the data should be stored. There are two important factors in making these recommendations. First, that the group and gov modules are consistent with one another, note the number of proposals made by all groups may be quite large. Second, that client applications such as block explorers and governance interfaces have confidence in the consistency of metadata structure across chains."),(0,n.kt)("h3",{id:"proposal-4"},"Proposal"),(0,n.kt)("p",null,"Location: off-chain as json object stored on IPFS (mirrors ",(0,n.kt)("a",{parentName:"p",href:"/v0.47/modules/gov/#metadata"},"gov proposal"),")"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "",\n  "authors": [""],\n  "summary": "",\n  "details": "",\n  "proposal_forum_url": "",\n  "vote_option_context": "",\n}\n')),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"authors")," field is an array of strings, this is to allow for multiple authors to be listed in the metadata.\nIn v0.46, the ",(0,n.kt)("inlineCode",{parentName:"p"},"authors")," field is a comma-separated string. Frontends are encouraged to support both formats for backwards compatibility.")),(0,n.kt)("h3",{id:"vote-2"},"Vote"),(0,n.kt)("p",null,"Location: on-chain as json within 255 character limit (mirrors ",(0,n.kt)("a",{parentName:"p",href:"/v0.47/modules/gov/#metadata"},"gov vote"),")"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "justification": "",\n}\n')),(0,n.kt)("h3",{id:"group-1"},"Group"),(0,n.kt)("p",null,"Location: off-chain as json object stored on IPFS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "",\n  "description": "",\n  "group_website_url": "",\n  "group_forum_url": "",\n}\n')),(0,n.kt)("h3",{id:"decision-policy-1"},"Decision policy"),(0,n.kt)("p",null,"Location: on-chain as json within 255 character limit"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "",\n  "description": "",\n}\n')))}d.isMDXComponent=!0}}]);