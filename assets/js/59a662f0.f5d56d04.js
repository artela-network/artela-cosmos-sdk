"use strict";(self.webpackChunkcosmos_sdk_docs=self.webpackChunkcosmos_sdk_docs||[]).push([[5731],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},63541:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:1},i="Hubl",l={unversionedId:"tooling/hubl",id:"tooling/hubl",title:"Hubl",description:"Hubl is a tool that allows you to query any Cosmos SDK based blockchain.",source:"@site/docs/tooling/03-hubl.md",sourceDirName:"tooling",slug:"/tooling/hubl",permalink:"/main/tooling/hubl",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Confix",permalink:"/main/tooling/confix"},next:{title:"Architecture Decision Records (ADR)",permalink:"/main/architecture/"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Add chain",id:"add-chain",level:3},{value:"Query",id:"query",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hubl"},"Hubl"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Hubl")," is a tool that allows you to query any Cosmos SDK based blockchain.\nIt takes advantage of the new ",(0,r.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/cosmos/cosmos-sdk/client/v2@v2.0.0-20220916140313-c5245716b516/cli"},"AutoCLI")," feature "," of the Cosmos SDK."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Hubl can be installed using ",(0,r.kt)("inlineCode",{parentName:"p"},"go install"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"go install cosmossdk.io/tools/hubl/cmd/hubl@latest\n")),(0,r.kt)("p",null,"Or build from source:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git clone --depth=1 https://github.com/cosmos/cosmos-sdk\nmake hubl\n")),(0,r.kt)("p",null,"The binary will be located in ",(0,r.kt)("inlineCode",{parentName:"p"},"tools/hubl"),"."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hubl --help\n")),(0,r.kt)("h3",{id:"add-chain"},"Add chain"),(0,r.kt)("p",null,"To configure a new chain just run this command using the --init flag and the name of the chain as it's listed in the chain registry (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cosmos/chain-registry"},"https://github.com/cosmos/chain-registry"),")."),(0,r.kt)("p",null,"If the chain is not listed in the chain registry, you can use any unique name."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hubl init [chain-name]\nhubl init regen\n")),(0,r.kt)("p",null,"The chain configuration is stored in ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.hubl/config.toml"),"."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"When using an unsecure gRPC endpoint, change the ",(0,r.kt)("inlineCode",{parentName:"p"},"insecure")," field to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," in the config file."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-toml"},"[chains]\n[chains.regen]\n[[chains.regen.trusted-grpc-endpoints]]\nendpoint = 'localhost:9090'\ninsecure = true\n")),(0,r.kt)("p",{parentName:"admonition"},"Or use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--insecure")," flag:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hubl init regen --insecure\n"))),(0,r.kt)("h3",{id:"query"},"Query"),(0,r.kt)("p",null,"To query a chain, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," command.\nThen specify which module you want to query and the query itself."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hubl regen query auth module-accounts\n")))}p.isMDXComponent=!0}}]);