(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{659:function(c,l,e){"use strict";e.r(l);var d=e(1),a=Object(d.a)({},(function(){var c=this,l=c.$createElement,e=c._self._c||l;return e("ContentSlotsDistributor",{attrs:{"slot-key":c.$parent.slotKey}},[e("h1",{attrs:{id:"sdk-应用程序剖析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sdk-应用程序剖析"}},[c._v("#")]),c._v(" SDK 应用程序剖析")]),c._v(" "),e("h2",{attrs:{id:"node-client"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-client"}},[c._v("#")]),c._v(" Node Client")]),c._v(" "),e("p",[c._v("全节点的核心进程是基于 SDK 包的。网络中的参与者运行此过程以初始化其状态机，与其他全节点连接并在新块进入时更新其状态机。")]),c._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"ICAgICAgICAgICAgICAgIF4gICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyAgXgogICAgICAgICAgICAgICAgfCAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICB8CiAgICAgICAgICAgICAgICB8ICB8ICBTdGF0ZS1tYWNoaW5lID0gQXBwbGljYXRpb24gIHwgIHwKICAgICAgICAgICAgICAgIHwgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgfCAgIEJ1aWx0IHdpdGggQ29zbW9zIFNESwogICAgICAgICAgICAgICAgfCAgfCAgICAgICAgICAgIF4gICAgICArICAgICAgICAgICB8ICB8CiAgICAgICAgICAgICAgICB8ICArLS0tLS0tLS0tLS0gfCBBQkNJIHwgLS0tLS0tLS0tLSsgIHYKICAgICAgICAgICAgICAgIHwgIHwgICAgICAgICAgICArICAgICAgdiAgICAgICAgICAgfCAgXgogICAgICAgICAgICAgICAgfCAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICB8CkJsb2NrY2hhaW4gTm9kZSB8ICB8ICAgICAgICAgICBDb25zZW5zdXMgICAgICAgICAgIHwgIHwKICAgICAgICAgICAgICAgIHwgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgfAogICAgICAgICAgICAgICAgfCAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rICB8ICAgVGVuZGVybWludCBDb3JlCiAgICAgICAgICAgICAgICB8ICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIHwKICAgICAgICAgICAgICAgIHwgIHwgICAgICAgICAgIE5ldHdvcmtpbmcgICAgICAgICAgfCAgfAogICAgICAgICAgICAgICAgfCAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICB8CiAgICAgICAgICAgICAgICB2ICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgIHYK"}}),c._v(" "),e("p",[c._v("区块链全节点以二进制形式表示，通常以 "),e("code",[c._v("-d")]),c._v(" 后缀表示"),e("code",[c._v("守护程序")]),c._v("（例如，"),e("code",[c._v("appd")]),c._v(" 表示 "),e("code",[c._v("app")]),c._v(" 或 "),e("code",[c._v("gaiad")]),c._v(" 表示 "),e("code",[c._v("gaia")]),c._v("）。这个二进制文件是通过编译一个简单的代码文件 main.go 构建的，"),e("code",[c._v("main.go")]),c._v(" 通常位于"),e("code",[c._v("./cmd/appd/")]),c._v("中。 此操作通常通过用 Makefile 编译。")]),c._v(" "),e("p",[c._v("编译了二进制文件，就可以通过运行"),e("a",{attrs:{href:"https://docs.cosmos.network/master/core/node.html#start-command",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("start")]),c._v("命令"),e("OutboundLink")],1),c._v(" 来启动节点。 此命令功能主要执行三件事：")]),c._v(" "),e("ol",[e("li",[e("p",[c._v("["),e("code",[c._v("app.go")]),c._v("] 创建了一个状态机实例。")])]),c._v(" "),e("li",[e("p",[c._v("用最新的已知状态初始化状态机，该状态机是从存储在 "),e("code",[c._v("~/.app/data")]),c._v(" 文件夹中的 db 中提取的。 此时，状态机的高度为："),e("code",[c._v("appBlockHeight")]),c._v("。")])]),c._v(" "),e("li",[e("p",[c._v("创建并启动一个新的 Tendermint 实例。 该节点将与对等节点进行连接交换信息。 它将从他们那里获取最新的 "),e("code",[c._v("blockHeight")]),c._v("，如果它大于本地的 "),e("code",[c._v("appBlockHeight")]),c._v("，则重播块以同步到该高度。 如果 "),e("code",[c._v("appBlockHeight")]),c._v(" 为 "),e("code",[c._v("0")]),c._v("，则该节点从创世开始，并且 Tendermint 通过 ABCI 接口向 "),e("code",[c._v("app")]),c._v(" 发送 "),e("code",[c._v("InitChain")]),c._v(" 初始化链命令，从而触发 "),e("a",{attrs:{href:"https://docs.cosmos.network/master/basics/app-anatomy.html#initchainer",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("InitChainer")]),e("OutboundLink")],1),c._v("。")])])]),c._v(" "),e("h2",{attrs:{id:"core-application-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#core-application-file"}},[c._v("#")]),c._v(" Core Application File")]),c._v(" "),e("p",[c._v("通常，状态机的核心是在名为 "),e("code",[c._v("app.go")]),c._v(" 的文件中定义的。 它主要包含“应用程序的类型定义”和“创建和初始化它”的功能。")]),c._v(" "),e("h3",{attrs:{id:"type-definition-of-the-application"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-definition-of-the-application"}},[c._v("#")]),c._v(" Type Definition of the Application")]),c._v(" "),e("p",[c._v("在 app.go 中重要的一个是应用程序的 type。 它通常由以下部分组成：")]),c._v(" "),e("ul",[e("li",[e("p",[c._v("在 "),e("code",[c._v("app.go")]),c._v(" 中定义的自定义应用程序是 "),e("code",[c._v("baseapp")]),c._v(" 的扩展。 当事务由 Tendermint 发送到应用程序时，"),e("code",[c._v("app")]),c._v(" 使用 "),e("code",[c._v("baseapp")]),c._v(" 的方法将它们转送到对应的模块。 baseapp 为应用程序实现了大多数核心逻辑，包括所有的 "),e("a",{attrs:{href:"https://tendermint.com/docs/spec/abci/abci.html#overview",target:"_blank",rel:"noopener noreferrer"}},[c._v("ABCI 方法"),e("OutboundLink")],1),c._v("和转送消息逻辑。")])]),c._v(" "),e("li",[e("p",[c._v("一条 key 链包含整个状态，他是基于 Cosmos SDK 的 multistore 实现的。 每个模块使用 multistore 的一个或多个存储来存储其状态。可以使用在 "),e("code",[c._v("app")]),c._v(" 类型中声明的特定键来访问这些存储。这些密钥以及 "),e("code",[c._v("keepers")]),c._v(" 是 Cosmos SDK 的对象功能模型的核心。")])]),c._v(" "),e("li",[e("p",[c._v("模块 "),e("code",[c._v("keeper")]),c._v(" 的列表。 每个模块都会抽象定义一个 keeper，该 keeper 实现模块存储的读写。 一个模块的 "),e("code",[c._v("keeper")]),c._v(" 方法可以从其他模块（如果已授权）中调用，这就是为什么它们在应用程序的类型中声明并作为接口导出到其他模块的原因，以便后者只能访问授权的功能。")])]),c._v(" "),e("li",[e("p",[c._v("应用程序的 "),e("code",[c._v("codec")]),c._v(" 用于序列化和反序列化数据结构以便存储它们，因为存储只能持久化 "),e("code",[c._v("[]bytes")]),c._v("。 "),e("code",[c._v("编解码器")]),c._v("必须是确定性的。 默认编解码器为 amino")])]),c._v(" "),e("li",[e("p",[c._v("模块管理器是一个对象，其中包含应用程序模块的列表。 它简化了与这些模块相关的操作，例如注册 routes 操作，query route 操作或设置各种功能的模块之间顺序执行情况，例如 InitChainer 操作，BeginBlocke 操作和 EndBlocker 操作")])]),c._v(" "),e("li",[e("p",[c._v("请参阅 "),e("a",{attrs:{href:"https://github.com/cosmos/gaia",target:"_blank",rel:"noopener noreferrer"}},[c._v("gaia"),e("OutboundLink")],1),c._v(" 中的应用程序类型定义示例")])])]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBHYWlhQXBwIHN0cnVjdCB7CgkqYmFtLkJhc2VBcHAKCWNkYyAqY29kZWMuQ29kZWMKCglpbnZDaGVja1BlcmlvZCB1aW50CgoJLy8ga2V5cyB0byBhY2Nlc3MgdGhlIHN1YnN0b3JlcwoJa2V5cyAgbWFwW3N0cmluZ10qc2RrLktWU3RvcmVLZXkKCXRLZXlzIG1hcFtzdHJpbmddKnNkay5UcmFuc2llbnRTdG9yZUtleQoKCS8vIGtlZXBlcnMKCWFjY291bnRLZWVwZXIgIGF1dGguQWNjb3VudEtlZXBlcgoJYmFua0tlZXBlciAgICAgYmFuay5LZWVwZXIKCXN1cHBseUtlZXBlciAgIHN1cHBseS5LZWVwZXIKCXN0YWtpbmdLZWVwZXIgIHN0YWtpbmcuS2VlcGVyCglzbGFzaGluZ0tlZXBlciBzbGFzaGluZy5LZWVwZXIKCW1pbnRLZWVwZXIgICAgIG1pbnQuS2VlcGVyCglkaXN0cktlZXBlciAgICBkaXN0ci5LZWVwZXIKCWdvdktlZXBlciAgICAgIGdvdi5LZWVwZXIKCWNyaXNpc0tlZXBlciAgIGNyaXNpcy5LZWVwZXIKCXBhcmFtc0tlZXBlciAgIHBhcmFtcy5LZWVwZXIKCWV2aWRlbmNlS2VlcGVyICpldmlkZW5jZS5LZWVwZXIKCgkvLyB0aGUgbW9kdWxlIG1hbmFnZXIKCW1tICptb2R1bGUuTWFuYWdlcgoKCS8vIHNpbXVsYXRpb24gbWFuYWdlcgoJc20gKm1vZHVsZS5TaW11bGF0aW9uTWFuYWdlcgp9"}})],1),c._v(" "),e("h3",{attrs:{id:"constructor-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#constructor-function"}},[c._v("#")]),c._v(" Constructor Function")]),c._v(" "),e("p",[c._v("此函数构造了以上部分中定义的类型的新应用程序。在应用程的 start 命令中使用，它必须具有 AppCreator 签名。")]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"cGFja2FnZSBzZXJ2ZXIKCmltcG9ydCAoCgkmcXVvdDtlbmNvZGluZy9qc29uJnF1b3Q7CgkmcXVvdDtpbyZxdW90OwoJJnF1b3Q7b3MmcXVvdDsKCSZxdW90O3BhdGgvZmlsZXBhdGgmcXVvdDsKCglhYmNpICZxdW90O2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2FiY2kvdHlwZXMmcXVvdDsKCSZxdW90O2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2xpYnMvbG9nJnF1b3Q7Cgl0bXR5cGVzICZxdW90O2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L3R5cGVzJnF1b3Q7CglkYm0gJnF1b3Q7Z2l0aHViLmNvbS90ZW5kZXJtaW50L3RtLWRiJnF1b3Q7CgoJc2RrICZxdW90O2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMmcXVvdDsKKQoKdHlwZSAoCgkvLyBBcHBDcmVhdG9yIGlzIGEgZnVuY3Rpb24gdGhhdCBhbGxvd3MgdXMgdG8gbGF6aWx5IGluaXRpYWxpemUgYW4KCS8vIGFwcGxpY2F0aW9uIHVzaW5nIHZhcmlvdXMgY29uZmlndXJhdGlvbnMuCglBcHBDcmVhdG9yIGZ1bmMobG9nLkxvZ2dlciwgZGJtLkRCLCBpby5Xcml0ZXIpIGFiY2kuQXBwbGljYXRpb24KCgkvLyBBcHBFeHBvcnRlciBpcyBhIGZ1bmN0aW9uIHRoYXQgZHVtcHMgYWxsIGFwcCBzdGF0ZSB0bwoJLy8gSlNPTi1zZXJpYWxpemFibGUgc3RydWN0dXJlIGFuZCByZXR1cm5zIHRoZSBjdXJyZW50IHZhbGlkYXRvciBzZXQuCglBcHBFeHBvcnRlciBmdW5jKGxvZy5Mb2dnZXIsIGRibS5EQiwgaW8uV3JpdGVyLCBpbnQ2NCwgYm9vbCwgW11zdHJpbmcpIChqc29uLlJhd01lc3NhZ2UsIFtddG10eXBlcy5HZW5lc2lzVmFsaWRhdG9yLCBlcnJvcikKKQoKZnVuYyBvcGVuREIocm9vdERpciBzdHJpbmcpIChkYm0uREIsIGVycm9yKSB7CglkYXRhRGlyIDo9IGZpbGVwYXRoLkpvaW4ocm9vdERpciwgJnF1b3Q7ZGF0YSZxdW90OykKCWRiLCBlcnIgOj0gc2RrLk5ld0xldmVsREIoJnF1b3Q7YXBwbGljYXRpb24mcXVvdDssIGRhdGFEaXIpCglyZXR1cm4gZGIsIGVycgp9CgpmdW5jIG9wZW5UcmFjZVdyaXRlcih0cmFjZVdyaXRlckZpbGUgc3RyaW5nKSAodyBpby5Xcml0ZXIsIGVyciBlcnJvcikgewoJaWYgdHJhY2VXcml0ZXJGaWxlICE9ICZxdW90OyZxdW90OyB7CgkJdywgZXJyID0gb3MuT3BlbkZpbGUoCgkJCXRyYWNlV3JpdGVyRmlsZSwKCQkJb3MuT19XUk9OTFl8b3MuT19BUFBFTkR8b3MuT19DUkVBVEUsCgkJCTA2NjYsCgkJKQoJCXJldHVybgoJfQoJcmV0dXJuCn0K"}})],1),c._v(" "),e("p",[c._v("以下是此功能执行的主要操作：")]),c._v(" "),e("ul",[e("li",[c._v("创建初始化一个新的 codec 实例，并使用基础模块管理器初始化每个应用程序模块的 "),e("code",[c._v("codec")]),c._v("。")]),c._v(" "),e("li",[c._v("使用 baseapp 实例，编解码器和所有适当的存储键的引用实例化一个新应用程序。")]),c._v(" "),e("li",[c._v("使用每个应用程序模块的 "),e("code",[c._v("NewKeeper")]),c._v(" 功能实例化在应用程序的"),e("code",[c._v("类型")]),c._v("中定义的所有 keeper。 注意，所有 keeper 必须以正确的顺序实例化，因为一个模块的 NewKeeper 可能需要引用另一个模块的 "),e("code",[c._v("keeper")]),c._v("。")]),c._v(" "),e("li",[c._v("使用每个应用模块的 AppModule 来实例化应用程序的模块管理器")]),c._v(" "),e("li",[c._v("使用模块管理器，初始化应用程序的 routes 和 query route。 当事务由 Tendermint 通过 ABCI 中继到应用程序时，它使用此处定义的路由被路由到相应模块的回调 handler。 同样，当应用程序收到查询时，使用此处定义的查询路由将其路由到适当的模块的 querier。")]),c._v(" "),e("li",[c._v("使用模块管理器，注册应用程序的模块的 invariants。 invariants 是在每个块末尾评估的变量（例如 token 的总供应量）。 检查不变式的过程是通过 InvariantsRegistry 的特殊模块完成的。 invariants 应等于模块中定义的预测值。 如果该值与预测的值不同，则将触发不变注册表中定义的特殊逻辑（通常会中断链）。这对于确保不会发现任何严重错误并产生难以修复的长期影响非常有用。")]),c._v(" "),e("li",[c._v("使用模块管理器，在每个应用程序的模块 的 InitGenesis，BegingBlocker 和 EndBlocker 函数之间设置执行顺序。 请注意，并非所有模块都实现这些功能。")]),c._v(" "),e("li",[c._v("模块实现这些功能。")]),c._v(" "),e("li",[c._v("设置其余的应用程序参数：\n"),e("ul",[e("li",[e("code",[c._v("InitChainer")]),c._v(" 于在应用程序首次启动时对其进行初始化。")]),c._v(" "),e("li",[e("code",[c._v("BeginBlocker")]),c._v("，"),e("code",[c._v("EndBlocker")]),c._v("：在每个块的开始和结尾处调用。")]),c._v(" "),e("li",[e("code",[c._v("anteHandler")]),c._v("：用于处理费用和签名验证。")])])]),c._v(" "),e("li",[c._v("挂载存储.")]),c._v(" "),e("li",[c._v("返回应用实例.")])]),c._v(" "),e("p",[c._v("请注意，此函数仅创建该应用的一个实例，而如果重新启动节点，则状态将从 "),e("code",[c._v("〜/.app/data")]),c._v(" 文件夹中保留下来状态加载，如果节点是第一次启动，则从创世文件生成。See an example of application constructor from "),e("a",{attrs:{href:"https://github.com/cosmos/gaia",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("gaia")]),e("OutboundLink")],1),c._v(":")]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"CS8vIHNpbXVsYXRpb24gbWFuYWdlcgoJc20gKm1vZHVsZS5TaW11bGF0aW9uTWFuYWdlcgp9CgovLyBOZXdHYWlhQXBwIHJldHVybnMgYSByZWZlcmVuY2UgdG8gYW4gaW5pdGlhbGl6ZWQgR2FpYUFwcC4KZnVuYyBOZXdHYWlhQXBwKAoJbG9nZ2VyIGxvZy5Mb2dnZXIsIGRiIGRibS5EQiwgdHJhY2VTdG9yZSBpby5Xcml0ZXIsIGxvYWRMYXRlc3QgYm9vbCwKCWludkNoZWNrUGVyaW9kIHVpbnQsIGJhc2VBcHBPcHRpb25zIC4uLmZ1bmMoKmJhbS5CYXNlQXBwKSwKKSAqR2FpYUFwcCB7CgoJY2RjIDo9IE1ha2VDb2RlYygpCgoJYkFwcCA6PSBiYW0uTmV3QmFzZUFwcChhcHBOYW1lLCBsb2dnZXIsIGRiLCBhdXRoLkRlZmF1bHRUeERlY29kZXIoY2RjKSwgYmFzZUFwcE9wdGlvbnMuLi4pCgliQXBwLlNldENvbW1pdE11bHRpU3RvcmVUcmFjZXIodHJhY2VTdG9yZSkKCWJBcHAuU2V0QXBwVmVyc2lvbih2ZXJzaW9uLlZlcnNpb24pCgoJa2V5cyA6PSBzZGsuTmV3S1ZTdG9yZUtleXMoCgkJYmFtLk1haW5TdG9yZUtleSwgYXV0aC5TdG9yZUtleSwgc3Rha2luZy5TdG9yZUtleSwKCQlzdXBwbHkuU3RvcmVLZXksIG1pbnQuU3RvcmVLZXksIGRpc3RyLlN0b3JlS2V5LCBzbGFzaGluZy5TdG9yZUtleSwKCQlnb3YuU3RvcmVLZXksIHBhcmFtcy5TdG9yZUtleSwKCSkKCXRrZXlzIDo9IHNkay5OZXdUcmFuc2llbnRTdG9yZUtleXMoc3Rha2luZy5UU3RvcmVLZXksIHBhcmFtcy5UU3RvcmVLZXkpCgoJYXBwIDo9ICZhbXA7R2FpYUFwcHsKCQlCYXNlQXBwOiAgICAgICAgYkFwcCwKCQljZGM6ICAgICAgICAgICAgY2RjLAoJCWludkNoZWNrUGVyaW9kOiBpbnZDaGVja1BlcmlvZCwKCQlrZXlzOiAgICAgICAgICAga2V5cywKCQl0a2V5czogICAgICAgICAgdGtleXMsCgl9CgoJLy8gaW5pdCBwYXJhbXMga2VlcGVyIGFuZCBzdWJzcGFjZXMKCWFwcC5wYXJhbXNLZWVwZXIgPSBwYXJhbXMuTmV3S2VlcGVyKGFwcC5jZGMsIGtleXNbcGFyYW1zLlN0b3JlS2V5XSwgdGtleXNbcGFyYW1zLlRTdG9yZUtleV0sIHBhcmFtcy5EZWZhdWx0Q29kZXNwYWNlKQoJYXV0aFN1YnNwYWNlIDo9IGFwcC5wYXJhbXNLZWVwZXIuU3Vic3BhY2UoYXV0aC5EZWZhdWx0UGFyYW1zcGFjZSkKCWJhbmtTdWJzcGFjZSA6PSBhcHAucGFyYW1zS2VlcGVyLlN1YnNwYWNlKGJhbmsuRGVmYXVsdFBhcmFtc3BhY2UpCglzdGFraW5nU3Vic3BhY2UgOj0gYXBwLnBhcmFtc0tlZXBlci5TdWJzcGFjZShzdGFraW5nLkRlZmF1bHRQYXJhbXNwYWNlKQoJbWludFN1YnNwYWNlIDo9IGFwcC5wYXJhbXNLZWVwZXIuU3Vic3BhY2UobWludC5EZWZhdWx0UGFyYW1zcGFjZSkKCWRpc3RyU3Vic3BhY2UgOj0gYXBwLnBhcmFtc0tlZXBlci5TdWJzcGFjZShkaXN0ci5EZWZhdWx0UGFyYW1zcGFjZSkKCXNsYXNoaW5nU3Vic3BhY2UgOj0gYXBwLnBhcmFtc0tlZXBlci5TdWJzcGFjZShzbGFzaGluZy5EZWZhdWx0UGFyYW1zcGFjZSkKCWdvdlN1YnNwYWNlIDo9IGFwcC5wYXJhbXNLZWVwZXIuU3Vic3BhY2UoZ292LkRlZmF1bHRQYXJhbXNwYWNlKS5XaXRoS2V5VGFibGUoZ292LlBhcmFtS2V5VGFibGUoKSkKCWNyaXNpc1N1YnNwYWNlIDo9IGFwcC5wYXJhbXNLZWVwZXIuU3Vic3BhY2UoY3Jpc2lzLkRlZmF1bHRQYXJhbXNwYWNlKQoKCS8vIGFkZCBrZWVwZXJzCglhcHAuYWNjb3VudEtlZXBlciA9IGF1dGguTmV3QWNjb3VudEtlZXBlcihhcHAuY2RjLCBrZXlzW2F1dGguU3RvcmVLZXldLCBhdXRoU3Vic3BhY2UsIGF1dGguUHJvdG9CYXNlQWNjb3VudCkKCWFwcC5iYW5rS2VlcGVyID0gYmFuay5OZXdCYXNlS2VlcGVyKGFwcC5hY2NvdW50S2VlcGVyLCBiYW5rU3Vic3BhY2UsIGJhbmsuRGVmYXVsdENvZGVzcGFjZSwgYXBwLk1vZHVsZUFjY291bnRBZGRycygpKQoJYXBwLnN1cHBseUtlZXBlciA9IHN1cHBseS5OZXdLZWVwZXIoYXBwLmNkYywga2V5c1tzdXBwbHkuU3RvcmVLZXldLCBhcHAuYWNjb3VudEtlZXBlciwgYXBwLmJhbmtLZWVwZXIsIG1hY2NQZXJtcykKCXN0YWtpbmdLZWVwZXIgOj0gc3Rha2luZy5OZXdLZWVwZXIoCgkJYXBwLmNkYywga2V5c1tzdGFraW5nLlN0b3JlS2V5XSwgYXBwLnN1cHBseUtlZXBlciwgc3Rha2luZ1N1YnNwYWNlLCBzdGFraW5nLkRlZmF1bHRDb2Rlc3BhY2UsCgkpCglhcHAubWludEtlZXBlciA9IG1pbnQuTmV3S2VlcGVyKGFwcC5jZGMsIGtleXNbbWludC5TdG9yZUtleV0sIG1pbnRTdWJzcGFjZSwgJmFtcDtzdGFraW5nS2VlcGVyLCBhcHAuc3VwcGx5S2VlcGVyLCBhdXRoLkZlZUNvbGxlY3Rvck5hbWUpCglhcHAuZGlzdHJLZWVwZXIgPSBkaXN0ci5OZXdLZWVwZXIoYXBwLmNkYywga2V5c1tkaXN0ci5TdG9yZUtleV0sIGRpc3RyU3Vic3BhY2UsICZhbXA7c3Rha2luZ0tlZXBlciwKCQlhcHAuc3VwcGx5S2VlcGVyLCBkaXN0ci5EZWZhdWx0Q29kZXNwYWNlLCBhdXRoLkZlZUNvbGxlY3Rvck5hbWUsIGFwcC5Nb2R1bGVBY2NvdW50QWRkcnMoKSkKCWFwcC5zbGFzaGluZ0tlZXBlciA9IHNsYXNoaW5nLk5ld0tlZXBlcigKCQlhcHAuY2RjLCBrZXlzW3NsYXNoaW5nLlN0b3JlS2V5XSwgJmFtcDtzdGFraW5nS2VlcGVyLCBzbGFzaGluZ1N1YnNwYWNlLCBzbGFzaGluZy5EZWZhdWx0Q29kZXNwYWNlLAoJKQoJYXBwLmNyaXNpc0tlZXBlciA9IGNyaXNpcy5OZXdLZWVwZXIoY3Jpc2lzU3Vic3BhY2UsIGludkNoZWNrUGVyaW9kLCBhcHAuc3VwcGx5S2VlcGVyLCBhdXRoLkZlZUNvbGxlY3Rvck5hbWUpCgoJLy8gcmVnaXN0ZXIgdGhlIHByb3Bvc2FsIHR5cGVzCglnb3ZSb3V0ZXIgOj0gZ292Lk5ld1JvdXRlcigpCglnb3ZSb3V0ZXIuQWRkUm91dGUoZ292LlJvdXRlcktleSwgZ292LlByb3Bvc2FsSGFuZGxlcikuCgkJQWRkUm91dGUocGFyYW1zLlJvdXRlcktleSwgcGFyYW1zLk5ld1BhcmFtQ2hhbmdlUHJvcG9zYWxIYW5kbGVyKGFwcC5wYXJhbXNLZWVwZXIpKS4KCQlBZGRSb3V0ZShkaXN0ci5Sb3V0ZXJLZXksIGRpc3RyLk5ld0NvbW11bml0eVBvb2xTcGVuZFByb3Bvc2FsSGFuZGxlcihhcHAuZGlzdHJLZWVwZXIpKQoJYXBwLmdvdktlZXBlciA9IGdvdi5OZXdLZWVwZXIoCgkJYXBwLmNkYywga2V5c1tnb3YuU3RvcmVLZXldLCBnb3ZTdWJzcGFjZSwKCQlhcHAuc3VwcGx5S2VlcGVyLCAmYW1wO3N0YWtpbmdLZWVwZXIsIGdvdi5EZWZhdWx0Q29kZXNwYWNlLCBnb3ZSb3V0ZXIsCgkpCgoJLy8gcmVnaXN0ZXIgdGhlIHN0YWtpbmcgaG9va3MKCS8vIE5PVEU6IHN0YWtpbmdLZWVwZXIgYWJvdmUgaXMgcGFzc2VkIGJ5IHJlZmVyZW5jZSwgc28gdGhhdCBpdCB3aWxsIGNvbnRhaW4gdGhlc2UgaG9va3MKCWFwcC5zdGFraW5nS2VlcGVyID0gKnN0YWtpbmdLZWVwZXIuU2V0SG9va3MoCgkJc3Rha2luZy5OZXdNdWx0aVN0YWtpbmdIb29rcyhhcHAuZGlzdHJLZWVwZXIuSG9va3MoKSwgYXBwLnNsYXNoaW5nS2VlcGVyLkhvb2tzKCkpLAoJKQoKCS8vIE5PVEU6IEFueSBtb2R1bGUgaW5zdGFudGlhdGVkIGluIHRoZSBtb2R1bGUgbWFuYWdlciB0aGF0IGlzIGxhdGVyIG1vZGlmaWVkCgkvLyBtdXN0IGJlIHBhc3NlZCBieSByZWZlcmVuY2UgaGVyZS4KCWFwcC5tbSA9IG1vZHVsZS5OZXdNYW5hZ2VyKAoJCWdlbnV0aWwuTmV3QXBwTW9kdWxlKGFwcC5hY2NvdW50S2VlcGVyLCBhcHAuc3Rha2luZ0tlZXBlciwgYXBwLkJhc2VBcHAuRGVsaXZlclR4KSwKCQlhdXRoLk5ld0FwcE1vZHVsZShhcHAuYWNjb3VudEtlZXBlciksCgkJYmFuay5OZXdBcHBNb2R1bGUoYXBwLmJhbmtLZWVwZXIsIGFwcC5hY2NvdW50S2VlcGVyKSwKCQljcmlzaXMuTmV3QXBwTW9kdWxlKCZhbXA7YXBwLmNyaXNpc0tlZXBlciksCgkJc3VwcGx5Lk5ld0FwcE1vZHVsZShhcHAuc3VwcGx5S2VlcGVyLCBhcHAuYWNjb3VudEtlZXBlciksCgkJZGlzdHIuTmV3QXBwTW9kdWxlKGFwcC5kaXN0cktlZXBlciwgYXBwLnN1cHBseUtlZXBlciksCgkJZ292Lk5ld0FwcE1vZHVsZShhcHAuZ292S2VlcGVyLCBhcHAuc3VwcGx5S2VlcGVyKSwKCQltaW50Lk5ld0FwcE1vZHVsZShhcHAubWludEtlZXBlciksCgkJc2xhc2hpbmcuTmV3QXBwTW9kdWxlKGFwcC5zbGFzaGluZ0tlZXBlciwgYXBwLnN0YWtpbmdLZWVwZXIpLAoJCXN0YWtpbmcuTmV3QXBwTW9kdWxlKGFwcC5zdGFraW5nS2VlcGVyLCBhcHAuYWNjb3VudEtlZXBlciwgYXBwLnN1cHBseUtlZXBlciksCgkpCgoJLy8gRHVyaW5nIGJlZ2luIGJsb2NrIHNsYXNoaW5nIGhhcHBlbnMgYWZ0ZXIgZGlzdHIuQmVnaW5CbG9ja2VyIHNvIHRoYXQKCS8vIHRoZXJlIGlzIG5vdGhpbmcgbGVmdCBvdmVyIGluIHRoZSB2YWxpZGF0b3IgZmVlIHBvb2wsIHNvIGFzIHRvIGtlZXAgdGhlCgkvLyBDYW5XaXRoZHJhd0ludmFyaWFudCBpbnZhcmlhbnQuCglhcHAubW0uU2V0T3JkZXJCZWdpbkJsb2NrZXJzKG1pbnQuTW9kdWxlTmFtZSwgZGlzdHIuTW9kdWxlTmFtZSwgc2xhc2hpbmcuTW9kdWxlTmFtZSkKCglhcHAubW0uU2V0T3JkZXJFbmRCbG9ja2VycyhjcmlzaXMuTW9kdWxlTmFtZSwgZ292Lk1vZHVsZU5hbWUsIHN0YWtpbmcuTW9kdWxlTmFtZSkKCgkvLyBOT1RFOiBUaGUgZ2VudXRpbHMgbW9kdWxlIG11c3Qgb2NjdXIgYWZ0ZXIgc3Rha2luZyBzbyB0aGF0IHBvb2xzIGFyZQoJLy8gcHJvcGVybHkgaW5pdGlhbGl6ZWQgd2l0aCB0b2tlbnMgZnJvbSBnZW5lc2lzIGFjY291bnRzLgoJYXBwLm1tLlNldE9yZGVySW5pdEdlbmVzaXMoCgkJZGlzdHIuTW9kdWxlTmFtZSwgc3Rha2luZy5Nb2R1bGVOYW1lLCBhdXRoLk1vZHVsZU5hbWUsIGJhbmsuTW9kdWxlTmFtZSwKCQlzbGFzaGluZy5Nb2R1bGVOYW1lLCBnb3YuTW9kdWxlTmFtZSwgbWludC5Nb2R1bGVOYW1lLCBzdXBwbHkuTW9kdWxlTmFtZSwKCQljcmlzaXMuTW9kdWxlTmFtZSwgZ2VudXRpbC5Nb2R1bGVOYW1lLAoJKQoKCWFwcC5tbS5SZWdpc3RlckludmFyaWFudHMoJmFtcDthcHAuY3Jpc2lzS2VlcGVyKQoJYXBwLm1tLlJlZ2lzdGVyUm91dGVzKGFwcC5Sb3V0ZXIoKSwgYXBwLlF1ZXJ5Um91dGVyKCkpCgoJLy8gY3JlYXRlIHRoZSBzaW11bGF0aW9uIG1hbmFnZXIgYW5kIGRlZmluZSB0aGUgb3JkZXIgb2YgdGhlIG1vZHVsZXMgZm9yIGRldGVybWluaXN0aWMgc2ltdWxhdGlvbnMKCS8vCgkvLyBOT1RFOiBUaGlzIGlzIG5vdCByZXF1aXJlZCBmb3IgYXBwcyB0aGF0IGRvbid0IHVzZSB0aGUgc2ltdWxhdG9yIGZvciBmdXp6IHRlc3RpbmcKCS8vIHRyYW5zYWN0aW9ucy4KCWFwcC5zbSA9IG1vZHVsZS5OZXdTaW11bGF0aW9uTWFuYWdlcigKCQlhdXRoLk5ld0FwcE1vZHVsZShhcHAuYWNjb3VudEtlZXBlciksCgkJYmFuay5OZXdBcHBNb2R1bGUoYXBwLmJhbmtLZWVwZXIsIGFwcC5hY2NvdW50S2VlcGVyKSw="}})],1),c._v(" "),e("h3",{attrs:{id:"initchainer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initchainer"}},[c._v("#")]),c._v(" InitChainer")]),c._v(" "),e("p",[c._v("InitChainer 用于根据创始文件（即创始账户的代币余额）初始化应用程序的状态。 当应用程序从 Tendermint 引擎收到"),e("code",[c._v("InitChain")]),c._v("消息时调用该消息，该消息是在节点以"),e("code",[c._v("appBlockHeight == 0")]),c._v("（即创世）启动。 应用程序必须通过"),e("a",{attrs:{href:"https://godoc.org/github.com/cosmos/cosmos-sdk/baseapp#BaseApp.SetInitChainer",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("SetInitChainer")]),e("OutboundLink")],1),c._v("方法设置其"),e("a",{attrs:{href:"https://docs.cosmos.network/master/basics/app-anatomy.html#constructor-function",target:"_blank",rel:"noopener noreferrer"}},[c._v("constructor"),e("OutboundLink")],1),c._v("中的"),e("code",[c._v("Initchainer")]),c._v("。")]),c._v(" "),e("p",[c._v("通常，"),e("code",[c._v("InitChainer")]),c._v("主要由每个应用程序模块的 InitGenesis 函数组成。 这是通过调用模块管理器的 InitGenesis 函数来完成的，而模块管理器的 InitGenesis 函数将依次调用其包含的每个模块的 InitGenesis 函数。 请注意，必须使用模块管理器的 SetOrderInitGenesis 方法设置模块的 InitGenesis 函数的顺序。 这是在 应用程序的构造函数 application-constructor 中完成的，必须在 SetInitChainer 之前调用 SetOrderInitGenesis。")]),c._v(" "),e("p",[c._v("查看来自"),e("a",{attrs:{href:"https://github.com/cosmos/gaia",target:"_blank",rel:"noopener noreferrer"}},[c._v("gaia"),e("OutboundLink")],1),c._v("的 InitChainer 的示例：")]),c._v(" "),e("p",[c._v("See an example of an "),e("code",[c._v("InitChainer")]),c._v(" from "),e("a",{attrs:{href:"https://github.com/cosmos/gaia",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("gaia")]),e("OutboundLink")],1),c._v(":")]),c._v(" "),e("p",[c._v("查看来自 "),e("a",{attrs:{href:"https://github.com/cosmos/gaia",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("gaia")]),e("OutboundLink")],1),c._v("的 "),e("code",[c._v("InitChainer")]),c._v(" 的示例：\n"),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"CWFwcC5Nb3VudFRyYW5zaWVudFN0b3Jlcyh0a2V5cykKCgkvLyBpbml0aWFsaXplIEJhc2VBcHAKCWFwcC5TZXRJbml0Q2hhaW5lcihhcHAuSW5pdENoYWluZXIpCglhcHAuU2V0QmVnaW5CbG9ja2VyKGFwcC5CZWdpbkJsb2NrZXIp"}})],1),c._v(" "),e("h3",{attrs:{id:"beginblocker-and-endblocker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beginblocker-and-endblocker"}},[c._v("#")]),c._v(" BeginBlocker and EndBlocker")]),c._v(" "),e("p",[c._v("该 SDK 为开发人员提供了在其应用程序中实现自定义代码可能性。 这是通过两个名为 "),e("code",[c._v("BeginBlocker")]),c._v(" 和 "),e("code",[c._v("EndBlocker")]),c._v(" 的函数实现的。当应用程序分别从 Tendermint 引擎接收到 "),e("code",[c._v("BeginBlock")]),c._v(" 和 "),e("code",[c._v("EndBlock")]),c._v(" 消息时，将调用它们，它们分别在每个块的开始和结尾处发生。应用程序必须通过 "),e("a",{attrs:{href:"https://godoc.org/github.com/cosmos/cosmos-sdk/baseapp",target:"_blank",rel:"noopener noreferrer"}},[c._v("SetBeginBlocker"),e("OutboundLink")],1),c._v(" 和 "),e("a",{attrs:{href:"https://godoc.org/github.com/cosmos/cosmos-sdk/baseapp#BaseApp.SetEndBlocker",target:"_blank",rel:"noopener noreferrer"}},[c._v("SetEndBlocker"),e("OutboundLink")],1),c._v(" 方法在其 constructor 中设置 "),e("code",[c._v("BeginBlocker")]),c._v(" 和 "),e("code",[c._v("EndBlocker")]),c._v("。")]),c._v(" "),e("p",[c._v("通常，"),e("code",[c._v("BeginBlocker")]),c._v(" 和 "),e("code",[c._v("EndBlocker")]),c._v(" 函数主要由每个应用程序模块的 "),e("code",[c._v("BeginBlock")]),c._v(" 和 "),e("code",[c._v("EndBlock")]),c._v(" 函数组成。 这是通过调用模块管理器的 BeginBlock 和 EndBlock 函数来完成的，而后者又会调用其包含的每个模块的 BeginBLock 和 EndBlock 函数。 请注意，必须分别在模块管理器中使用 SetOrderBeginBlock 和 SetOrderEndBlock 方法来设置模块的 BegingBlock 和 EndBlock 函数必须调用的顺序。这是通过应用程序的构造函数中的模块管理器完成的，必须调用 SetOrderBeginBlock 和 SetOrderEndBlock 方法。 在 SetBeginBlocker 和 SetEndBlocker 函数之前。")]),c._v(" "),e("p",[c._v("附带说明，请记住特定于应用程序的区块链是确定性的，这一点很重要。开发人员必须注意不要在 BeginBlocker 或 EndBlocker 中引入不确定性，还必须注意不要使它们在计算上过于昂贵，因为[gas]不会限制计算代价当调用 BeginBlocker 和 EndBlocker 执行。")]),c._v(" "),e("p",[c._v("请参阅 "),e("a",{attrs:{href:"https://github.com/cosmos/gaia",target:"_blank",rel:"noopener noreferrer"}},[c._v("gaia"),e("OutboundLink")],1),c._v("中的 "),e("code",[c._v("BeginBlocker")]),c._v(" 和 "),e("code",[c._v("EndBlocker")]),c._v(" 函数的示例。")]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"CQlnb3YuTmV3QXBwTW9kdWxlKGFwcC5nb3ZLZWVwZXIsIGFwcC5zdXBwbHlLZWVwZXIpLAoJCW1pbnQuTmV3QXBwTW9kdWxlKGFwcC5taW50S2VlcGVyKSwKCQlkaXN0ci5OZXdBcHBNb2R1bGUoYXBwLmRpc3RyS2VlcGVyLCBhcHAuc3VwcGx5S2VlcGVyKSwKCQlzdGFraW5nLk5ld0FwcE1vZHVsZShhcHAuc3Rha2luZ0tlZXBlciwgYXBwLmFjY291bnRLZWVwZXIsIGFwcC5zdXBwbHlLZWVwZXIpLAoJCXNsYXNoaW5nLk5ld0FwcE1vZHVsZShhcHAuc2xhc2hpbmdLZWVwZXIsIGFwcC5zdGFraW5nS2VlcGVyKSwKCSkKCglhcHAuc20uUmVnaXN0ZXJTdG9yZURlY29kZXJzKCkK"}})],1),c._v(" "),e("h3",{attrs:{id:"register-codec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#register-codec"}},[c._v("#")]),c._v(" Register Codec")]),c._v(" "),e("p",[c._v("MakeCodec 函数是 app.go 文件的最后一个重要功能。 此函数的目的是使用 RegisterLegacyAminoCodec 函数实例化 codec"),e("code",[c._v("cdc")]),c._v("，例如 amino 初始化 SDK 的编解码器以及每个应用程序的模块。")]),c._v(" "),e("p",[c._v("为了注册应用程序的模块，"),e("code",[c._v("MakeCodec")]),c._v(" 函数在 "),e("code",[c._v("ModuleBasics")]),c._v(" 上调用 "),e("code",[c._v("RegisterLegacyAminoCodec")]),c._v("。"),e("code",[c._v("ModuleBasics")]),c._v(" 是一个基本管理器，其中列出了应用程序的所有模块。 它在"),e("code",[c._v("init()")]),c._v("函数中得到实例化，仅用于注册应用程序模块的非依赖元素（例如编解码器）。 要了解有关基本模块管理器的更多信息，请点击"),e("a",{attrs:{href:"https://docs.cosmos.network/master/building-modules/module-manager.html#basicmanager",target:"_blank",rel:"noopener noreferrer"}},[c._v("这里"),e("OutboundLink")],1),c._v("。")]),c._v(" "),e("p",[c._v("请参阅 "),e("a",{attrs:{href:"https://github.com/cosmos/gaia",target:"_blank",rel:"noopener noreferrer"}},[c._v("gaia"),e("OutboundLink")],1),c._v(" 中的 "),e("code",[c._v("MakeCodec")]),c._v(" 示例：")]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"CQlzdGFraW5nLkJvbmRlZFBvb2xOYW1lOiAgICB7c3VwcGx5LkJ1cm5lciwgc3VwcGx5LlN0YWtpbmd9LAoJCXN0YWtpbmcuTm90Qm9uZGVkUG9vbE5hbWU6IHtzdXBwbHkuQnVybmVyLCBzdXBwbHkuU3Rha2luZ30sCgkJZ292Lk1vZHVsZU5hbWU6ICAgICAgICAgICAge3N1cHBseS5CdXJuZXJ9LAoJfQopCgovLyBNYWtlQ29kZWMgY3JlYXRlcyB0aGUgYXBwbGljYXRpb24gY29kZWMuIFRoZSBjb2RlYyBpcyBzZWFsZWQgYmVmb3JlIGl0IGlz"}})],1),c._v(" "),e("h2",{attrs:{id:"modules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modules"}},[c._v("#")]),c._v(" Modules")]),c._v(" "),e("p",[c._v("Modules 是 SDK 应用程序的灵魂。它们可以被视为状态机中的状态机。当交易通过 ABCI 从底层的 Tendermint 引擎中继到应用程序时，它由 baseapp 找到对应的模块以便进行处理。这种范例使开发人员可以轻松构建复杂的状态机，因为他们所需的大多数模块通常已经存在。对于开发人员而言，构建 SDK 应用程序所涉及的大部分工作都围绕构建其应用程序尚不存在的自定义模块，并将它们与已经存在的模块集成到一个统一的应用程序中。在应用程序目录中，标准做法是将模块存储在 "),e("code",[c._v("x/")]),c._v(" 文件夹中（不要与 SDK 的"),e("code",[c._v("x/")]),c._v("文件夹混淆，该文件夹包含已构建的模块）。")]),c._v(" "),e("h3",{attrs:{id:"application-module-interface"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-module-interface"}},[c._v("#")]),c._v(" Application Module Interface")]),c._v(" "),e("p",[c._v("模块必须实现 Cosmos SDK AppModuleBasic 中的 "),e("a",{attrs:{href:"https://docs.cosmos.network/master/building-modules/module-manager.html#application-module-interfaces",target:"_blank",rel:"noopener noreferrer"}},[c._v("interfaces"),e("OutboundLink")],1),c._v(" 和 AppModule。 前者实现了模块的基本非依赖性元素，例如"),e("code",[c._v("编解码器")]),c._v("，而后者则处理了大部分模块方法（包括需要引用其他模块的"),e("code",[c._v("keeper")]),c._v("的方法）。"),e("code",[c._v("AppModule")]),c._v(" 和 "),e("code",[c._v("AppModuleBasic")]),c._v(" 类型都在名为 "),e("code",[c._v("module.go")]),c._v(" 的文件中定义。")]),c._v(" "),e("p",[c._v("AppModule 在模块上公开了一组有用的方法，这些方法有助于将模块组合成一个一致的应用程序。 这些方法是从模块管理器中调用的，该模块管理应用程序的模块集合。")]),c._v(" "),e("h3",{attrs:{id:"message-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#message-types"}},[c._v("#")]),c._v(" Message Types")]),c._v(" "),e("p",[c._v("每个 "),e("code",[c._v("module")]),c._v(" 定义 "),e("a",{attrs:{href:"https://docs.cosmos.network/master/building-modules/messages-and-queries.html#messages",target:"_blank",rel:"noopener noreferrer"}},[c._v("messages"),e("OutboundLink")],1),c._v(" 接口。 每个 "),e("code",[c._v("transaction")]),c._v(" 包含一个或多个 "),e("code",[c._v("messages")]),c._v("。")]),c._v(" "),e("p",[c._v("当全节点接收到有效的交易块时，Tendermint 通过 "),e("a",{attrs:{href:"https://tendermint.com/docs/app-dev/abci-spec.html#delivertx",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("DeliverTx")]),e("OutboundLink")],1),c._v(" 将每个交易发到应用程序。然后，应用程序处理事务：")]),c._v(" "),e("ul",[e("li",[c._v("收到交易后，应用程序首先从 "),e("code",[c._v("[]bytes")]),c._v(" 反序列化得到。")]),c._v(" "),e("li",[c._v("然后，在提取交易中包含的消息之前，它会验证有关交易的一些信息，例如费用支付和签名。")]),c._v(" "),e("li",[c._v("使用 message 的 Type()方法，baseapp 可以将其发到对应模块的回调 handler 以便对其进行处理。")]),c._v(" "),e("li",[c._v("如果消息已成功处理，则状态将更新。")])]),c._v(" "),e("p",[c._v("有关事务生命周期的更多详细信息，请看[这里](./ tx-lifecycle.md)。")]),c._v(" "),e("p",[c._v("模块开发人员在构建自己的模块时会创建自定义消息类型。 通常的做法是在消息的类型声明前加上 "),e("code",[c._v("Msg")]),c._v("。 例如，消息类型 "),e("code",[c._v("MsgSend")]),c._v(" 允许用户传输 tokens：")]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gTXNnU2VuZCAtIGhpZ2ggbGV2ZWwgdHJhbnNhY3Rpb24gb2YgdGhlIGNvaW4gbW9kdWxlCnR5cGUgTXNnU2VuZCBzdHJ1Y3QgewoJRnJvbUFkZHJlc3Mgc2RrLkFjY0FkZHJlc3MgYGpzb246JnF1b3Q7ZnJvbV9hZGRyZXNzJnF1b3Q7IHlhbWw6JnF1b3Q7ZnJvbV9hZGRyZXNzJnF1b3Q7YAoJVG9BZGRyZXNzICAgc2RrLkFjY0FkZHJlc3MgYGpzb246JnF1b3Q7dG9fYWRkcmVzcyZxdW90OyB5YW1sOiZxdW90O3RvX2FkZHJlc3MmcXVvdDtgCglBbW91bnQgICAgICBzZGsuQ29pbnMgICAgICBganNvbjomcXVvdDthbW91bnQmcXVvdDsgeWFtbDomcXVvdDthbW91bnQmcXVvdDtgCn0="}})],1),c._v(" "),e("p",[c._v("它由 "),e("code",[c._v("bank")]),c._v(" 模块的回调 "),e("code",[c._v("handler")]),c._v(" 处理，最终会调用 "),e("code",[c._v("auth")]),c._v(" 模块来写 "),e("code",[c._v("keeper")]),c._v(" 以更新状态。")]),c._v(" "),e("h3",{attrs:{id:"handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#handler"}},[c._v("#")]),c._v(" Handler")]),c._v(" "),e("p",[c._v("回调 "),e("code",[c._v("handler")]),c._v(" 是指模块的一部分，负责处理 "),e("code",[c._v("baseapp")]),c._v(" 传递的 "),e("code",[c._v("message")]),c._v(" 消息。 仅当通过 ABCI 接口的 DeliverTx 消息从 Tendermint 收到事务时，才执行模块的"),e("code",[c._v("处理程序")]),c._v("功能。 如果通过 CheckTx，仅执行无状态检查和与费用相关的有状态检查。为了更好地理解 "),e("code",[c._v("DeliverTx")]),c._v(" 和 "),e("code",[c._v("CheckTx")]),c._v(" 之间的区别以及有状态和无状态检查之间的区别，请看"),e("RouterLink",{attrs:{to:"/cn/basics/tx-lifecycle.html"}},[c._v("这里")]),c._v("。")],1),c._v(" "),e("p",[c._v("模块的"),e("code",[c._v("处理程序")]),c._v("通常在名为 "),e("code",[c._v("handler.go")]),c._v(" 的文件中定义，并包括：")]),c._v(" "),e("ul",[e("li",[c._v("NewHandler 将消息发到对应的回调 "),e("code",[c._v("handler")]),c._v("。 该函数返回一个 "),e("code",[c._v("handler")]),c._v(" 函数，此前这个函数在 "),e("code",[c._v("AppModule")]),c._v(" 中注册，以在应用程序的模块管理器中用于初始化应用程序的路由器。接下来是 "),e("a",{attrs:{href:"https://github.com/cosmos/sdk-tutorials/tree/master/nameservice",target:"_blank",rel:"noopener noreferrer"}},[c._v("nameservice tutorial"),e("OutboundLink")],1),c._v(" 的一个例子。")])]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"ZnVuYyBOZXdRdWVyaWVyKGtlZXBlciBLZWVwZXIpIHNkay5RdWVyaWVyIHsKCXJldHVybiBmdW5jKGN0eCBzZGsuQ29udGV4dCwgcGF0aCBbXXN0cmluZywgcmVxIGFiY2kuUmVxdWVzdFF1ZXJ5KSAocmVzIFtdYnl0ZSwgZXJyIHNkay5FcnJvcikgewoJCXN3aXRjaCBwYXRoWzBdIHsKCQljYXNlIFF1ZXJ5UmVzb2x2ZToKCQkJcmV0dXJuIHF1ZXJ5UmVzb2x2ZShjdHgsIHBhdGhbMTpdLCByZXEsIGtlZXBlcikKCQljYXNlIFF1ZXJ5V2hvaXM6CgkJCXJldHVybiBxdWVyeVdob2lzKGN0eCwgcGF0aFsxOl0sIHJlcSwga2VlcGVyKQoJCWNhc2UgUXVlcnlOYW1lczoKCQkJcmV0dXJuIHF1ZXJ5TmFtZXMoY3R4LCByZXEsIGtlZXBlcikKCQlkZWZhdWx0OgoJCQlyZXR1cm4gbmlsLCBzZGsuRXJyVW5rbm93blJlcXVlc3QoJnF1b3Q7dW5rbm93biBuYW1lc2VydmljZSBxdWVyeSBlbmRwb2ludCZxdW90OykKCQl9Cgl9Cn0="}})],1),c._v(" "),e("ul",[e("li",[c._v("模块定义的每种消息类型的处理函数。开发人员在这些函数中编写消息处理逻辑。这通常包括进行状态检查以确保消息有效，并调用 "),e("a",{attrs:{href:"https://docs.cosmos.network/master/basics/app-anatomy.html#keeper",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("keeper")]),e("OutboundLink")],1),c._v(" 的方法来更新状态。")])]),c._v(" "),e("p",[c._v("处理程序函数返回结果类型为 sdk.Result，该结果通知应用程序消息是否已成功处理：")]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gUmVzdWx0IGlzIHRoZSB1bmlvbiBvZiBSZXNwb25zZUZvcm1hdCBhbmQgUmVzcG9uc2VDaGVja1R4Lgp0eXBlIFJlc3VsdCBzdHJ1Y3QgewoJLy8gQ29kZSBpcyB0aGUgcmVzcG9uc2UgY29kZSwgaXMgc3RvcmVkIGJhY2sgb24gdGhlIGNoYWluLgoJQ29kZSBDb2RlVHlwZQoKCS8vIENvZGVzcGFjZSBpcyB0aGUgc3RyaW5nIHJlZmVycmluZyB0byB0aGUgZG9tYWluIG9mIGFuIGVycm9yCglDb2Rlc3BhY2UgQ29kZXNwYWNlVHlwZQoKCS8vIERhdGEgaXMgYW55IGRhdGEgcmV0dXJuZWQgZnJvbSB0aGUgYXBwLgoJLy8gRGF0YSBoYXMgdG8gYmUgbGVuZ3RoIHByZWZpeGVkIGluIG9yZGVyIHRvIHNlcGFyYXRlCgkvLyByZXN1bHRzIGZyb20gbXVsdGlwbGUgbXNncyBleGVjdXRpb25zCglEYXRhIFtdYnl0ZQoKCS8vIExvZyBjb250YWlucyB0aGUgdHhzIGxvZyBpbmZvcm1hdGlvbi4gTk9URTogbm9uZGV0ZXJtaW5pc3RpYy4KCUxvZyBzdHJpbmcKCgkvLyBHYXNXYW50ZWQgaXMgdGhlIG1heGltdW0gdW5pdHMgb2Ygd29yayB3ZSBhbGxvdyB0aGlzIHR4IHRvIHBlcmZvcm0uCglHYXNXYW50ZWQgdWludDY0CgoJLy8gR2FzVXNlZCBpcyB0aGUgYW1vdW50IG9mIGdhcyBhY3R1YWxseSBjb25zdW1lZC4gTk9URTogdW5pbXBsZW1lbnRlZAoJR2FzVXNlZCB1aW50NjQKCgkvLyBFdmVudHMgY29udGFpbnMgYSBzbGljZSBvZiBFdmVudCBvYmplY3RzIHRoYXQgd2VyZSBlbWl0dGVkIGR1cmluZyBzb21lCgkvLyBleGVjdXRpb24uCglFdmVudHMgRXZlbnRzCn0="}})],1),c._v(" "),e("h3",{attrs:{id:"querier"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#querier"}},[c._v("#")]),c._v(" Querier")]),c._v(" "),e("p",[e("code",[c._v("Queriers")]),c._v(" 与 "),e("code",[c._v("handlers")]),c._v(" 非常相似，除了它们向状态查询用户而不是处理事务。 最终用户从 interface 发起 query，最终用户会提供 "),e("code",[c._v("queryRoute")]),c._v(" 和一些 "),e("code",[c._v("data")]),c._v("。 然后使用 "),e("code",[c._v("queryRoute")]),c._v(" 通过 "),e("code",[c._v("baseapp")]),c._v(" 的 "),e("code",[c._v("handleQueryCustom")]),c._v(" 方法查询到正确的应用程序的 "),e("code",[c._v("querier")]),c._v(" 函数")]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"ZnVuYyBoYW5kbGVRdWVyeUN1c3RvbShhcHAgKkJhc2VBcHAsIHBhdGggW11zdHJpbmcsIHJlcSBhYmNpLlJlcXVlc3RRdWVyeSkgKHJlcyBhYmNpLlJlc3BvbnNlUXVlcnkpIHsKCS8vIHBhdGhbMF0gc2hvdWxkIGJlICZxdW90O2N1c3RvbSZxdW90OyBiZWNhdXNlICZxdW90Oy9jdXN0b20mcXVvdDsgcHJlZml4IGlzIHJlcXVpcmVkIGZvciBrZWVwZXIKCS8vIHF1ZXJpZXMuCgkvLwoJLy8gVGhlIFF1ZXJ5Um91dGVyIHJvdXRlcyB1c2luZyBwYXRoWzFdLiBGb3IgZXhhbXBsZSwgaW4gdGhlIHBhdGgKCS8vICZxdW90O2N1c3RvbS9nb3YvcHJvcG9zYWwmcXVvdDssIFF1ZXJ5Um91dGVyIHJvdXRlcyB1c2luZyAmcXVvdDtnb3YmcXVvdDsuCglpZiBsZW4ocGF0aCkgJmx0OyAyIHx8IHBhdGhbMV0gPT0gJnF1b3Q7JnF1b3Q7IHsKCQlyZXR1cm4gc2RrLkVyclVua25vd25SZXF1ZXN0KCZxdW90O05vIHJvdXRlIGZvciBjdXN0b20gcXVlcnkgc3BlY2lmaWVkJnF1b3Q7KS5RdWVyeVJlc3VsdCgpCgl9CgoJcXVlcmllciA6PSBhcHAucXVlcnlSb3V0ZXIuUm91dGUocGF0aFsxXSkKCWlmIHF1ZXJpZXIgPT0gbmlsIHsKCQlyZXR1cm4gc2RrLkVyclVua25vd25SZXF1ZXN0KGZtdC5TcHJpbnRmKCZxdW90O25vIGN1c3RvbSBxdWVyaWVyIGZvdW5kIGZvciByb3V0ZSAlcyZxdW90OywgcGF0aFsxXSkpLlF1ZXJ5UmVzdWx0KCkKCX0KCgkvLyB3aGVuIGEgY2xpZW50IGRpZCBub3QgcHJvdmlkZSBhIHF1ZXJ5IGhlaWdodCwgbWFudWFsbHkgaW5qZWN0IHRoZSBsYXRlc3QKCWlmIHJlcS5IZWlnaHQgPT0gMCB7CgkJcmVxLkhlaWdodCA9IGFwcC5MYXN0QmxvY2tIZWlnaHQoKQoJfQoKCWlmIHJlcS5IZWlnaHQgJmx0Oz0gMSAmYW1wOyZhbXA7IHJlcS5Qcm92ZSB7CgkJcmV0dXJuIHNkay5FcnJJbnRlcm5hbCgmcXVvdDtjYW5ub3QgcXVlcnkgd2l0aCBwcm9vZiB3aGVuIGhlaWdodCAmbHQ7PSAxOyBwbGVhc2UgcHJvdmlkZSBhIHZhbGlkIGhlaWdodCZxdW90OykuUXVlcnlSZXN1bHQoKQoJfQoKCWNhY2hlTVMsIGVyciA6PSBhcHAuY21zLkNhY2hlTXVsdGlTdG9yZVdpdGhWZXJzaW9uKHJlcS5IZWlnaHQpCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gc2RrLkVyckludGVybmFsKAoJCQlmbXQuU3ByaW50ZigKCQkJCSZxdW90O2ZhaWxlZCB0byBsb2FkIHN0YXRlIGF0IGhlaWdodCAlZDsgJXMgKGxhdGVzdCBoZWlnaHQ6ICVkKSZxdW90OywKCQkJCXJlcS5IZWlnaHQsIGVyciwgYXBwLkxhc3RCbG9ja0hlaWdodCgpLAoJCQkpLAoJCSkuUXVlcnlSZXN1bHQoKQoJfQoKCS8vIGNhY2hlIHdyYXAgdGhlIGNvbW1pdC1tdWx0aXN0b3JlIGZvciBzYWZldHkKCWN0eCA6PSBzZGsuTmV3Q29udGV4dCgKCQljYWNoZU1TLCBhcHAuY2hlY2tTdGF0ZS5jdHguQmxvY2tIZWFkZXIoKSwgdHJ1ZSwgYXBwLmxvZ2dlciwKCSkuV2l0aE1pbkdhc1ByaWNlcyhhcHAubWluR2FzUHJpY2VzKQoKCS8vIFBhc3NlcyB0aGUgcmVzdCBvZiB0aGUgcGF0aCBhcyBhbiBhcmd1bWVudCB0byB0aGUgcXVlcmllci4KCS8vCgkvLyBGb3IgZXhhbXBsZSwgaW4gdGhlIHBhdGggJnF1b3Q7Y3VzdG9tL2dvdi9wcm9wb3NhbC90ZXN0JnF1b3Q7LCB0aGUgZ292IHF1ZXJpZXIgZ2V0cwoJLy8gW11zdHJpbmd7JnF1b3Q7cHJvcG9zYWwmcXVvdDssICZxdW90O3Rlc3QmcXVvdDt9IGFzIHRoZSBwYXRoLgoJcmVzQnl0ZXMsIHF1ZXJ5RXJyIDo9IHF1ZXJpZXIoY3R4LCBwYXRoWzI6XSwgcmVxKQoJaWYgcXVlcnlFcnIgIT0gbmlsIHsKCQlyZXR1cm4gYWJjaS5SZXNwb25zZVF1ZXJ5ewoJCQlDb2RlOiAgICAgIHVpbnQzMihxdWVyeUVyci5Db2RlKCkpLAoJCQlDb2Rlc3BhY2U6IHN0cmluZyhxdWVyeUVyci5Db2Rlc3BhY2UoKSksCgkJCUhlaWdodDogICAgcmVxLkhlaWdodCwKCQkJTG9nOiAgICAgICBxdWVyeUVyci5BQkNJTG9nKCksCgkJfQoJfQoKCXJldHVybiBhYmNpLlJlc3BvbnNlUXVlcnl7CgkJQ29kZTogICB1aW50MzIoc2RrLkNvZGVPSyksCgkJSGVpZ2h0OiByZXEuSGVpZ2h0LAoJCVZhbHVlOiAgcmVzQnl0ZXMsCgl9Cn0="}})],1),c._v(" "),e("p",[c._v("模块的 Querier 是在名为 querier.go 的文件中定义的，包括：")]),c._v(" "),e("ul",[e("li",[e("p",[c._v("NewQuerier 将查找到对应 query 函数。 此函数返回一个 "),e("code",[c._v("querier")]),c._v(" 函数，此前它在 AppModule 中注册，以在应用程序的模块管理器中用于初始化应用程序的查询路由器。请参阅 [nameservice demo]（https://github.com/cosmos/sdk-tutorials/tree/master/nameservice）中的此类切换示例：\n"),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"ZnVuYyBOZXdRdWVyaWVyKGtlZXBlciBLZWVwZXIpIHNkay5RdWVyaWVyIHsKCXJldHVybiBmdW5jKGN0eCBzZGsuQ29udGV4dCwgcGF0aCBbXXN0cmluZywgcmVxIGFiY2kuUmVxdWVzdFF1ZXJ5KSAocmVzIFtdYnl0ZSwgZXJyIHNkay5FcnJvcikgewoJCXN3aXRjaCBwYXRoWzBdIHsKCQljYXNlIFF1ZXJ5UmVzb2x2ZToKCQkJcmV0dXJuIHF1ZXJ5UmVzb2x2ZShjdHgsIHBhdGhbMTpdLCByZXEsIGtlZXBlcikKCQljYXNlIFF1ZXJ5V2hvaXM6CgkJCXJldHVybiBxdWVyeVdob2lzKGN0eCwgcGF0aFsxOl0sIHJlcSwga2VlcGVyKQoJCWNhc2UgUXVlcnlOYW1lczoKCQkJcmV0dXJuIHF1ZXJ5TmFtZXMoY3R4LCByZXEsIGtlZXBlcikKCQlkZWZhdWx0OgoJCQlyZXR1cm4gbmlsLCBzZGsuRXJyVW5rbm93blJlcXVlc3QoJnF1b3Q7dW5rbm93biBuYW1lc2VydmljZSBxdWVyeSBlbmRwb2ludCZxdW90OykKCQl9Cgl9Cn0="}})],1)]),c._v(" "),e("li",[e("p",[c._v("对于模块定义的每种需要查询的数据类型，都具有一个查询器功能。开发人员在这些函数中编写查询处理逻辑。这通常涉及调用 "),e("code",[c._v("keeper")]),c._v(" 的方法来查询状态并将其序列化为 JSON。")])])]),c._v(" "),e("h3",{attrs:{id:"keeper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keeper"}},[c._v("#")]),c._v(" Keeper")]),c._v(" "),e("p",[e("a",{attrs:{href:"https://docs.cosmos.network/master/building-modules/keeper.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("Keepers")]),e("OutboundLink")],1),c._v("是其模块存储器件。要在模块的存储区中进行读取或写入，必须使用其 "),e("code",[c._v("keeper")]),c._v(" 方法之一。这是由 Cosmos SDK 的 object-capabilities 模型确保的。 只有持有存储密钥的对象才能访问它，只有模块的 "),e("code",[c._v("keeper")]),c._v(" 才应持有该模块存储的密钥。")]),c._v(" "),e("p",[e("code",[c._v("Keepers")]),c._v(" 通常在名为 "),e("code",[c._v("keeper.go")]),c._v(" 的文件中定义。 它包含 "),e("code",[c._v("keeper")]),c._v(" 的类型定义和方法。")]),c._v(" "),e("p",[e("code",[c._v("keeper")]),c._v(" 类型定义通常包括：")]),c._v(" "),e("ul",[e("li",[c._v("多重存储中模块存储的"),e("code",[c._v("密钥")]),c._v("。\n"),e("ul",[e("li",[c._v("参考"),e("strong",[c._v("其他模块的"),e("code",[c._v("keepers")])]),c._v("。 仅当 "),e("code",[c._v("keeper")]),c._v(" 需要访问其他模块的存储（从它们读取或写入）时才需要。")])])]),c._v(" "),e("li",[c._v("对应用程序的"),e("code",[c._v("编解码器")]),c._v("的引用。 "),e("code",[c._v("keeper")]),c._v(" 需要它在存储结构之前序列化处理，或在检索它们时将反序列化处理，因为存储仅接受 "),e("code",[c._v("[]bytes")]),c._v(" 作为值。")])]),c._v(" "),e("p",[c._v("与类型定义一起，keeper.go 文件的一个重要组成部分是 Keeper 的构造函数 NewKeeper。 该函数实例化上面定义的类型的新 "),e("code",[c._v("keeper")]),c._v("，并带有 "),e("code",[c._v("codec")]),c._v("，存储 "),e("code",[c._v("keys")]),c._v(" 以及可能引用其他模块的 "),e("code",[c._v("keeper")]),c._v(" 作为参数。从应用程序的构造函数中调用 "),e("code",[c._v("NewKeeper")]),c._v(" 函数。文件的其余部分定义了 "),e("code",[c._v("keeper")]),c._v(" 的方法，主要是 getter 和 setter。")]),c._v(" "),e("h3",{attrs:{id:"command-line-and-rest-interfaces"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#command-line-and-rest-interfaces"}},[c._v("#")]),c._v(" Command-Line and REST Interfaces")]),c._v(" "),e("p",[c._v("每个模块都定义了 application-interfaces 向用户公开的命令行命令和 REST routes。 用户可以创建模块中定义的类型的消息，或查询模块管理的状态的子集。")]),c._v(" "),e("h4",{attrs:{id:"cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[c._v("#")]),c._v(" CLI")]),c._v(" "),e("p",[c._v("通常，与模块有关的命令在模块文件夹中名为 "),e("code",[c._v("client/cli")]),c._v(" 的文件夹中定义。CLI 将命令分为交易和查询两类，分别在 "),e("code",[c._v("client/cli/tx.go")]),c._v(" 和 "),e("code",[c._v("client/cli/query.go")]),c._v(" 中定义。这两个命令基于 "),e("a",{attrs:{href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"}},[c._v("Cobra Library"),e("OutboundLink")],1),c._v("之上：")]),c._v(" "),e("ul",[e("li",[c._v("Transactions 命令使用户可以生成新的事务，以便可以将它们包含在块中并更新状态。应该为模块中定义的每个消息类型 message-types 创建一个命令。该命令使用户提供的参数调用消息的构造函数，并将其包装到事务中。SDK 处理签名和其他事务元数据的添加。")]),c._v(" "),e("li",[c._v("用户可以查询模块定义的状态子集。查询命令将查询转发到应用程序的查询路由器，然后将查询路由到提供的"),e("code",[c._v("queryRoute")]),c._v("参数的相应 querier。")])]),c._v(" "),e("h4",{attrs:{id:"rest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rest"}},[c._v("#")]),c._v(" REST")]),c._v(" "),e("p",[c._v("模块的 REST 接口允许用户生成事务并通过对应用程序的 light client daemon（LCD） 查询状态。 REST 路由在 "),e("code",[c._v("client/rest/rest.go")]),c._v(" 文件中定义，该文件包括：")]),c._v(" "),e("ul",[e("li",[e("p",[e("code",[c._v("RegisterRoutes")]),c._v(" 函数，用于注册路由。从主应用程序的接口 application-interfaces 中为应用程序内使用的每个模块调用此函数。SDK 中使用的路由器是 "),e("a",{attrs:{href:"https://github.com/gorilla/mux",target:"_blank",rel:"noopener noreferrer"}},[c._v("Gorilla's mux"),e("OutboundLink")],1),c._v("。")])]),c._v(" "),e("li",[e("p",[c._v("需要公开的每个查询或事务创建功能的自定义请求类型定义。这些自定义请求类型基于 Cosmos SDK 的基本"),e("code",[c._v("请求")]),c._v("类型构建：\n"),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gQmFzZVJlcSBkZWZpbmVzIGEgc3RydWN0dXJlIHRoYXQgY2FuIGJlIGVtYmVkZGVkIGluIG90aGVyIHJlcXVlc3Qgc3RydWN0dXJlcwovLyB0aGF0IGFsbCBzaGFyZSBjb21tb24gJnF1b3Q7YmFzZSZxdW90OyBmaWVsZHMuCnR5cGUgQmFzZVJlcSBzdHJ1Y3QgewoJRnJvbSAgICAgICAgICBzdHJpbmcgICAgICAgYGpzb246JnF1b3Q7ZnJvbSZxdW90O2AKCU1lbW8gICAgICAgICAgc3RyaW5nICAgICAgIGBqc29uOiZxdW90O21lbW8mcXVvdDtgCglDaGFpbklEICAgICAgIHN0cmluZyAgICAgICBganNvbjomcXVvdDtjaGFpbl9pZCZxdW90O2AKCUFjY291bnROdW1iZXIgdWludDY0ICAgICAgIGBqc29uOiZxdW90O2FjY291bnRfbnVtYmVyJnF1b3Q7YAoJU2VxdWVuY2UgICAgICB1aW50NjQgICAgICAgYGpzb246JnF1b3Q7c2VxdWVuY2UmcXVvdDtgCglGZWVzICAgICAgICAgIHNkay5Db2lucyAgICBganNvbjomcXVvdDtmZWVzJnF1b3Q7YAoJR2FzUHJpY2VzICAgICBzZGsuRGVjQ29pbnMgYGpzb246JnF1b3Q7Z2FzX3ByaWNlcyZxdW90O2AKCUdhcyAgICAgICAgICAgc3RyaW5nICAgICAgIGBqc29uOiZxdW90O2dhcyZxdW90O2AKCUdhc0FkanVzdG1lbnQgc3RyaW5nICAgICAgIGBqc29uOiZxdW90O2dhc19hZGp1c3RtZW50JnF1b3Q7YAoJU2ltdWxhdGUgICAgICBib29sICAgICAgICAgYGpzb246JnF1b3Q7c2ltdWxhdGUmcXVvdDtgCn0="}})],1)]),c._v(" "),e("li",[e("p",[c._v("每个请求的一个处理函数可以找到给定的模块。 这些功能实现了服务请求所需的核心逻辑。")])])]),c._v(" "),e("h2",{attrs:{id:"application-interface"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-interface"}},[c._v("#")]),c._v(" Application Interface")]),c._v(" "),e("p",[c._v("Interfaces 允许用户与全节点客户端进行交互。 这意味着从全节点查询数据，或者接受全节点中包含在块中的新事务。")]),c._v(" "),e("p",[c._v("通过汇总在应用程序使用的每个模块中定义的 CLI 命令构建 SDK 应用程序的 CLI。 应用程序的 CLI 通常具有后缀-cli（例如 appcli），并在名为"),e("code",[c._v("cmd / appcli / main.go")]),c._v("的文件中定义。 该文件包含：")]),c._v(" "),e("ul",[e("li",[c._v("main()函数，用于构建 appcli 接口客户端。这个函数准备每个命令，并在构建它们之前将它们添加到"),e("code",[c._v("rootCmd")]),c._v("中。在 appCli 的根部，该函数添加了通用命令，例如 status，keys 和 config，查询命令，tx 命令和 rest-server。")]),c._v(" "),e("li",[c._v("查询命令是通过调用"),e("code",[c._v("queryCmd")]),c._v("函数添加的，该函数也在 appcli / main.go 中定义。此函数返回一个 Cobra 命令，其中包含在每个应用程序模块中定义的查询命令（从"),e("code",[c._v("main()")]),c._v("函数作为"),e("code",[c._v("sdk.ModuleClients")]),c._v("数组传递），以及一些其他较低级别的查询命令，例如阻止或验证器查询。查询命令通过使用 CLI 的命令“ appcli query [query]”来调用。")]),c._v(" "),e("li",[c._v("通过调用"),e("code",[c._v("txCmd")]),c._v("函数来添加"),e("strong",[c._v("交易命令")]),c._v("。与"),e("code",[c._v("queryCmd")]),c._v("类似，该函数返回一个 Cobra 命令，其中包含在每个应用程序模块中定义的 tx 命令，以及较低级别的 tx 命令，例如事务签名或广播。使用 CLI 的命令"),e("code",[c._v("appcli tx [tx]")]),c._v("调用 Tx 命令。")]),c._v(" "),e("li",[c._v("registerRoutes 函数，在初始化 轻客户端（LCD）时从 main()函数调用。 “ registerRoutes”调用应用程序每个模块的“ RegisterRoutes”功能，从而注册该模块 routes 到 LCD 的查询路由。可以通过运行以下命令“ appcli rest-server”来启动 LCD。")])]),c._v(" "),e("p",[c._v("从"),e("a",{attrs:{href:"https://github.com/cosmos/sdk-tutorials/tree/master/nameservice",target:"_blank",rel:"noopener noreferrer"}},[c._v("nameservice demo"),e("OutboundLink")],1),c._v("中查看应用程序的主要命令行文件的示例。")]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"cGFja2FnZSBtYWluCgppbXBvcnQgKAoJJnF1b3Q7b3MmcXVvdDsKCSZxdW90O3BhdGgmcXVvdDsKCgkmcXVvdDtnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL2NsaWVudCZxdW90OwoJJnF1b3Q7Z2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay9jbGllbnQva2V5cyZxdW90OwoJJnF1b3Q7Z2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay9jbGllbnQvbGNkJnF1b3Q7CgkmcXVvdDtnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL2NsaWVudC9ycGMmcXVvdDsKCXNkayAmcXVvdDtnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzJnF1b3Q7CgkmcXVvdDtnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3ZlcnNpb24mcXVvdDsKCWF1dGhjbWQgJnF1b3Q7Z2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay94L2F1dGgvY2xpZW50L2NsaSZxdW90OwoJYXV0aHJlc3QgJnF1b3Q7Z2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay94L2F1dGgvY2xpZW50L3Jlc3QmcXVvdDsKCWJhbmtjbWQgJnF1b3Q7Z2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay94L2JhbmsvY2xpZW50L2NsaSZxdW90OwoJYXBwICZxdW90O2dpdGh1Yi5jb20vY29zbW9zL3Nkay10dXRvcmlhbHMvbmFtZXNlcnZpY2UmcXVvdDsKCSZxdW90O2dpdGh1Yi5jb20vc3BmMTMvY29icmEmcXVvdDsKCSZxdW90O2dpdGh1Yi5jb20vc3BmMTMvdmlwZXImcXVvdDsKCWFtaW5vICZxdW90O2dpdGh1Yi5jb20vdGVuZGVybWludC9nby1hbWlubyZxdW90OwoJJnF1b3Q7Z2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvbGlicy9jbGkmcXVvdDsKKQoKZnVuYyBtYWluKCkgewoJY29icmEuRW5hYmxlQ29tbWFuZFNvcnRpbmcgPSBmYWxzZQoKCWNkYyA6PSBhcHAuTWFrZUNvZGVjKCkKCgkvLyBSZWFkIGluIHRoZSBjb25maWd1cmF0aW9uIGZpbGUgZm9yIHRoZSBzZGsKCWNvbmZpZyA6PSBzZGsuR2V0Q29uZmlnKCkKCWNvbmZpZy5TZXRCZWNoMzJQcmVmaXhGb3JBY2NvdW50KHNkay5CZWNoMzJQcmVmaXhBY2NBZGRyLCBzZGsuQmVjaDMyUHJlZml4QWNjUHViKQoJY29uZmlnLlNldEJlY2gzMlByZWZpeEZvclZhbGlkYXRvcihzZGsuQmVjaDMyUHJlZml4VmFsQWRkciwgc2RrLkJlY2gzMlByZWZpeFZhbFB1YikKCWNvbmZpZy5TZXRCZWNoMzJQcmVmaXhGb3JDb25zZW5zdXNOb2RlKHNkay5CZWNoMzJQcmVmaXhDb25zQWRkciwgc2RrLkJlY2gzMlByZWZpeENvbnNQdWIpCgljb25maWcuU2VhbCgpCgoJcm9vdENtZCA6PSAmYW1wO2NvYnJhLkNvbW1hbmR7CgkJVXNlOiAgICZxdW90O25zY2xpJnF1b3Q7LAoJCVNob3J0OiAmcXVvdDtuYW1lc2VydmljZSBDbGllbnQmcXVvdDssCgl9CgoJLy8gQWRkIC0tY2hhaW4taWQgdG8gcGVyc2lzdGVudCBmbGFncyBhbmQgbWFyayBpdCByZXF1aXJlZAoJcm9vdENtZC5QZXJzaXN0ZW50RmxhZ3MoKS5TdHJpbmcoY2xpZW50LkZsYWdDaGFpbklELCAmcXVvdDsmcXVvdDssICZxdW90O0NoYWluIElEIG9mIHRlbmRlcm1pbnQgbm9kZSZxdW90OykKCXJvb3RDbWQuUGVyc2lzdGVudFByZVJ1bkUgPSBmdW5jKF8gKmNvYnJhLkNvbW1hbmQsIF8gW11zdHJpbmcpIGVycm9yIHsKCQlyZXR1cm4gaW5pdENvbmZpZyhyb290Q21kKQoJfQoKCS8vIENvbnN0cnVjdCBSb290IENvbW1hbmQKCXJvb3RDbWQuQWRkQ29tbWFuZCgKCQlycGMuU3RhdHVzQ29tbWFuZCgpLAoJCWNsaWVudC5Db25maWdDbWQoYXBwLkRlZmF1bHRDTElIb21lKSwKCQlxdWVyeUNtZChjZGMpLAoJCXR4Q21kKGNkYyksCgkJY2xpZW50LkxpbmVCcmVhaywKCQlsY2QuU2VydmVDb21tYW5kKGNkYywgcmVnaXN0ZXJSb3V0ZXMpLAoJCWNsaWVudC5MaW5lQnJlYWssCgkJa2V5cy5Db21tYW5kcygpLAoJCWNsaWVudC5MaW5lQnJlYWssCgkJdmVyc2lvbi5DbWQsCgkJY2xpZW50Lk5ld0NvbXBsZXRpb25DbWQocm9vdENtZCwgdHJ1ZSksCgkpCgoJZXhlY3V0b3IgOj0gY2xpLlByZXBhcmVNYWluQ21kKHJvb3RDbWQsICZxdW90O05TJnF1b3Q7LCBhcHAuRGVmYXVsdENMSUhvbWUpCgllcnIgOj0gZXhlY3V0b3IuRXhlY3V0ZSgpCglpZiBlcnIgIT0gbmlsIHsKCQlwYW5pYyhlcnIpCgl9Cn0KCmZ1bmMgcmVnaXN0ZXJSb3V0ZXMocnMgKmxjZC5SZXN0U2VydmVyKSB7CgljbGllbnQuUmVnaXN0ZXJSb3V0ZXMocnMuQ2xpQ3R4LCBycy5NdXgpCglhdXRocmVzdC5SZWdpc3RlclR4Um91dGVzKHJzLkNsaUN0eCwgcnMuTXV4KQoJYXBwLk1vZHVsZUJhc2ljcy5SZWdpc3RlclJFU1RSb3V0ZXMocnMuQ2xpQ3R4LCBycy5NdXgpCn0KCmZ1bmMgcXVlcnlDbWQoY2RjICphbWluby5Db2RlYykgKmNvYnJhLkNvbW1hbmQgewoJcXVlcnlDbWQgOj0gJmFtcDtjb2JyYS5Db21tYW5kewoJCVVzZTogICAgICZxdW90O3F1ZXJ5JnF1b3Q7LAoJCUFsaWFzZXM6IFtdc3RyaW5neyZxdW90O3EmcXVvdDt9LAoJCVNob3J0OiAgICZxdW90O1F1ZXJ5aW5nIHN1YmNvbW1hbmRzJnF1b3Q7LAoJfQoKCXF1ZXJ5Q21kLkFkZENvbW1hbmQoCgkJYXV0aGNtZC5HZXRBY2NvdW50Q21kKGNkYyksCgkJY2xpZW50LkxpbmVCcmVhaywKCQlycGMuVmFsaWRhdG9yQ29tbWFuZChjZGMpLAoJCXJwYy5CbG9ja0NvbW1hbmQoKSwKCQlhdXRoY21kLlF1ZXJ5VHhzQnlFdmVudHNDbWQoY2RjKSwKCQlhdXRoY21kLlF1ZXJ5VHhDbWQoY2RjKSwKCQljbGllbnQuTGluZUJyZWFrLAoJKQoKCS8vIGFkZCBtb2R1bGVzJyBxdWVyeSBjb21tYW5kcwoJYXBwLk1vZHVsZUJhc2ljcy5BZGRRdWVyeUNvbW1hbmRzKHF1ZXJ5Q21kLCBjZGMpCgoJcmV0dXJuIHF1ZXJ5Q21kCn0KCmZ1bmMgdHhDbWQoY2RjICphbWluby5Db2RlYykgKmNvYnJhLkNvbW1hbmQgewoJdHhDbWQgOj0gJmFtcDtjb2JyYS5Db21tYW5kewoJCVVzZTogICAmcXVvdDt0eCZxdW90OywKCQlTaG9ydDogJnF1b3Q7VHJhbnNhY3Rpb25zIHN1YmNvbW1hbmRzJnF1b3Q7LAoJfQoKCXR4Q21kLkFkZENvbW1hbmQoCgkJYmFua2NtZC5TZW5kVHhDbWQoY2RjKSwKCQljbGllbnQuTGluZUJyZWFrLAoJCWF1dGhjbWQuR2V0U2lnbkNvbW1hbmQoY2RjKSwKCQlhdXRoY21kLkdldE11bHRpU2lnbkNvbW1hbmQoY2RjKSwKCQljbGllbnQuTGluZUJyZWFrLAoJCWF1dGhjbWQuR2V0QnJvYWRjYXN0Q29tbWFuZChjZGMpLAoJCWF1dGhjbWQuR2V0RW5jb2RlQ29tbWFuZChjZGMpLAoJCWNsaWVudC5MaW5lQnJlYWssCgkpCgoJLy8gYWRkIG1vZHVsZXMnIHR4IGNvbW1hbmRzCglhcHAuTW9kdWxlQmFzaWNzLkFkZFR4Q29tbWFuZHModHhDbWQsIGNkYykKCglyZXR1cm4gdHhDbWQKfQoKZnVuYyBpbml0Q29uZmlnKGNtZCAqY29icmEuQ29tbWFuZCkgZXJyb3IgewoJaG9tZSwgZXJyIDo9IGNtZC5QZXJzaXN0ZW50RmxhZ3MoKS5HZXRTdHJpbmcoY2xpLkhvbWVGbGFnKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuIGVycgoJfQoKCWNmZ0ZpbGUgOj0gcGF0aC5Kb2luKGhvbWUsICZxdW90O2NvbmZpZyZxdW90OywgJnF1b3Q7Y29uZmlnLnRvbWwmcXVvdDspCglpZiBfLCBlcnIgOj0gb3MuU3RhdChjZmdGaWxlKTsgZXJyID09IG5pbCB7CgkJdmlwZXIuU2V0Q29uZmlnRmlsZShjZmdGaWxlKQoKCQlpZiBlcnIgOj0gdmlwZXIuUmVhZEluQ29uZmlnKCk7IGVyciAhPSBuaWwgewoJCQlyZXR1cm4gZXJyCgkJfQoJfQoJaWYgZXJyIDo9IHZpcGVyLkJpbmRQRmxhZyhjbGllbnQuRmxhZ0NoYWluSUQsIGNtZC5QZXJzaXN0ZW50RmxhZ3MoKS5Mb29rdXAoY2xpZW50LkZsYWdDaGFpbklEKSk7IGVyciAhPSBuaWwgewoJCXJldHVybiBlcnIKCX0KCWlmIGVyciA6PSB2aXBlci5CaW5kUEZsYWcoY2xpLkVuY29kaW5nRmxhZywgY21kLlBlcnNpc3RlbnRGbGFncygpLkxvb2t1cChjbGkuRW5jb2RpbmdGbGFnKSk7IGVyciAhPSBuaWwgewoJCXJldHVybiBlcnIKCX0KCXJldHVybiB2aXBlci5CaW5kUEZsYWcoY2xpLk91dHB1dEZsYWcsIGNtZC5QZXJzaXN0ZW50RmxhZ3MoKS5Mb29rdXAoY2xpLk91dHB1dEZsYWcpKQp9Cg=="}})],1),c._v(" "),e("h2",{attrs:{id:"dependencies-and-makefile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dependencies-and-makefile"}},[c._v("#")]),c._v(" Dependencies and Makefile")]),c._v(" "),e("p",[c._v("因为开发人员可以自由选择其依赖项管理器和项目构建方法。 也就是说，当前最常用的版本控制框架是"),e("a",{attrs:{href:"https://github.com/golang/go/wiki/Modules",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("go.mod")]),e("OutboundLink")],1),c._v("。 它确保在整个应用程序中使用的每个库都以正确的版本导入。 请参阅"),e("a",{attrs:{href:"https://github.com/cosmos/sdk-tutorials/tree/master/nameservice",target:"_blank",rel:"noopener noreferrer"}},[c._v("demo"),e("OutboundLink")],1),c._v("中的示例：")]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"false",base64:"bW9kdWxlIGdpdGh1Yi5jb20vY29zbW9zL3Nkay1hcHBsaWNhdGlvbi10dXRvcmlhbAoKZ28gMS4xMwoKcmVxdWlyZSAoCglnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrIHYwLjM3LjMKCWdpdGh1Yi5jb20vZ29yaWxsYS9tdXggdjEuNy4zCglnaXRodWIuY29tL21hdHRuL2dvLWlzYXR0eSB2MC4wLjcgLy8gaW5kaXJlY3QKCWdpdGh1Yi5jb20vc3BmMTMvYWZlcm8gdjEuMi4yIC8vIGluZGlyZWN0CglnaXRodWIuY29tL3NwZjEzL2NvYnJhIHYwLjAuNQoJZ2l0aHViLmNvbS9zcGYxMy92aXBlciB2MS40LjAKCWdpdGh1Yi5jb20vc3RyZXRjaHIvdGVzdGlmeSB2MS40LjAKCWdpdGh1Yi5jb20vdGVuZGVybWludC9nby1hbWlubyB2MC4xNS4xCglnaXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludCB2MC4zMi42CglnaXRodWIuY29tL3RlbmRlcm1pbnQvdG0tZGIgdjAuMi4wCglnb2xhbmcub3JnL3gvc3lzIHYwLjAuMC0yMDE5MDMyOTA0NDczMy05ZWIxYmZhMWNlNjUgLy8gaW5kaXJlY3QKCWdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvIHYwLjAuMC0yMDE5MDMyNzEyNTY0My1kODMxZDY1ZmUxN2QgLy8gaW5kaXJlY3QKKQ=="}})],1),c._v(" "),e("p",[c._v("为了构建应用程序，通常使用"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Makefile",target:"_blank",rel:"noopener noreferrer"}},[c._v("Makefile"),e("OutboundLink")],1),c._v("。 Makefile 主要确保在构建应用程序的两个入口点 "),e("a",{attrs:{href:"https://docs.cosmos.network/master/basics/app-anatomy.html#node-client",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("appd")]),e("OutboundLink")],1),c._v(" 和 "),e("a",{attrs:{href:"https://docs.cosmos.network/master/basics/app-anatomy.html#application-interface",target:"_blank",rel:"noopener noreferrer"}},[e("code",[c._v("appcli")]),e("OutboundLink")],1),c._v(" 之前运行 "),e("code",[c._v("go.mod")]),c._v("。 请参阅 nameservice demo 中的 Makefile 示例")]),c._v(" "),e("p",[e("tm-code-block",{staticClass:"codeblock",attrs:{language:"false",base64:"UEFDS0FHRVM9JChzaGVsbCBnbyBsaXN0IC4vLi4uIHwgZ3JlcCAtdiAnL3NpbXVsYXRpb24nKQoKVkVSU0lPTiA6PSAkKHNoZWxsIGVjaG8gJChzaGVsbCBnaXQgZGVzY3JpYmUgLS10YWdzKSB8IHNlZCAncy9edi8vJykKQ09NTUlUIDo9ICQoc2hlbGwgZ2l0IGxvZyAtMSAtLWZvcm1hdD0nJUgnKQoKbGRmbGFncyA9IC1YIGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdmVyc2lvbi5OYW1lPU5hbWVTZXJ2aWNlIFwKCS1YIGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdmVyc2lvbi5TZXJ2ZXJOYW1lPW5zZCBcCgktWCBnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3ZlcnNpb24uQ2xpZW50TmFtZT1uc2NsaSBcCgktWCBnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3ZlcnNpb24uVmVyc2lvbj0kKFZFUlNJT04pIFwKCS1YIGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdmVyc2lvbi5Db21taXQ9JChDT01NSVQpIAoKQlVJTERfRkxBR1MgOj0gLWxkZmxhZ3MgJyQobGRmbGFncyknCgppbmNsdWRlIE1ha2VmaWxlLmxlZGdlcgphbGw6IGluc3RhbGwKCmluc3RhbGw6IGdvLnN1bQoJCWdvIGluc3RhbGwgLW1vZD1yZWFkb25seSAkKEJVSUxEX0ZMQUdTKSAuL2NtZC9uc2QKCQlnbyBpbnN0YWxsIC1tb2Q9cmVhZG9ubHkgJChCVUlMRF9GTEFHUykgLi9jbWQvbnNjbGkKCmdvLnN1bTogZ28ubW9kCgkJQGVjaG8gJnF1b3Q7LS0mZ3Q7IEVuc3VyZSBkZXBlbmRlbmNpZXMgaGF2ZSBub3QgYmVlbiBtb2RpZmllZCZxdW90OwoJCUdPMTExTU9EVUxFPW9uIGdvIG1vZCB2ZXJpZnkKCnRlc3Q6CglAZ28gdGVzdCAtbW9kPXJlYWRvbmx5ICQoUEFDS0FHRVMp"}})],1),c._v(" "),e("h2",{attrs:{id:"next"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[c._v("#")]),c._v(" Next")]),c._v(" "),e("p",[c._v("了解有关[交易生命周期](./ tx-lifecycle.md)的更多信息")])],1)}),[],!1,null,null,null);l.default=a.exports}}]);